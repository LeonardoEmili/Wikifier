[
    {
        "A serving channel  is a ": null
    },
    {
        "slang": "slang"
    },
    {
        " term for a ": null
    },
    {
        "file sharing": "file sharing"
    },
    {
        " channel found on an ": null
    },
    {
        "IRC": "internet relay chat"
    },
    {
        " network. Here, users can share and download files including photos, videos, audio files, books, programs, etc. Users that are actively sharing their files are generally referred to as servers, whereas users that download without sharing their own files are generally referred to as ": null
    },
    {
        "leeches": "leech"
    },
    {
        ". While serving normally implies pirated or questionable material, some channels are used for fully legitimate reasons. There are two styles of servers, ": null
    },
    {
        "Fserve": "fserve"
    },
    {
        "s, and serving scripts like OmenServe.       Using an Fserve script, a server is set up like an ": null
    },
    {
        "FTP": "ftp"
    },
    {
        ". Using ": null
    },
    {
        "CTCP": "client-to-client protocol"
    },
    {
        " commands and server triggers, a user can initiate a connection with the server. Once connected, the user will be given realtime access to a servers file archive.   ex.: /CTCP & lt;username & gt; & lt;trigger & gt;        Once a leech has gained access to a servers Fserve, they can navigate through folders using commands similar to ": null
    },
    {
        "DOS": "dos"
    },
    {
        ". Once inside a folder, the user is able to retrieve a listing of what files are found there.   ex.: cd & lt;foldername & gt; & dir      To request a file, the user enters a filename from the folder display listing, along with the get command.   ex.: get & lt;filename.ext & gt;        Using a serving script, servers have the ability to send files directly to another user using remote commands. The serving script compiles a listing of available files, and also listens for a leech to request a file. Serving scripts also allow for a user to search all of the servers in a channel at the same time with a single command.       A user initiates a search by typing a search command followed by a search string within the channel window. Various search commands exist, including @find, @search, and @seek, depending on what serving script is being used. ": null
    },
    {
        "Wildcard character": "wildcard character"
    },
    {
        "s such as can also be used in the search string to simplify a search. The search command will then return a list of files to the users query window if any servers have a file that matches the search string.   ex.: @find & lt;keyword & gt;      If there are any matches for the users search string, the next step is to request those files from the server. The user can copy and paste the returned match, along with a short trigger command, from the query window directly into the channel window. The request is then placed in a file ": null
    },
    {
        "queue": "queue"
    },
    {
        " within the serving script, and downloaded on a ": null
    },
    {
        "first-come, first-served": "first-come, first-served"
    },
    {
        " basis.   ex.: ! & lt;username & gt; & lt;filename.ext & gt;      Users also have the ability to download the complete archive of a servers available files, commonly called a list due to the ": null
    },
    {
        ".txt": ".txt"
    },
    {
        " format that the scripts output code creates. To request a servers list, there is a separate list trigger used.   ex.: @ & lt;username & gt; ": null
    }
]