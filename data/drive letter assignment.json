[
    {
        "      In ": null
    },
    {
        "computer data storage": "computer data storage"
    },
    {
        ", drive letter assignment is the process of assigning alphabetical identifiers to ": null
    },
    {
        "volumes": "volume"
    },
    {
        ". Unlike the concept of ": null
    },
    {
        "UNIX mount point": "unix filesystem"
    },
    {
        "s, where volumes are named and located arbitrarily in a single hierarchical namespace, drive letter assignment allows multiple highest-level namespaces. Drive letter assignment is thus a process of using letters to name the roots of the forest representing the file system; each volume holds an independent tree .       The concept of drive letters, as used today, presumably owes its origins to ": null
    },
    {
        "IBM": "ibm"
    },
    {
        "s ": null
    },
    {
        "VM": "vm"
    },
    {
        " family of operating systems, dating back to ": null
    },
    {
        "CP/CMS": "cp/cms"
    },
    {
        " in 42 , by way of ": null
    },
    {
        "Digital Research": "digital research"
    },
    {
        "s ": null
    },
    {
        "CP/M": "cp/m"
    },
    {
        ". The concept evolved through several steps:     CP/CMS uses drive letters to identify  minidisk s attached to a user session. A full file reference  consists of a filename, a filetype, and a disk letter called a filemode . Minidisks can correspond to physical disk drives, but more typically refer to logical drives, which are mapped automatically onto shared devices by the operating system as sets of virtual cylinders.   CP/CMS inspired numerous other operating systems, including the CP/M microcomputer operating system, which uses a drive letter to specify a physical storage device. Early versions of CP/M implemented a ": null
    },
    {
        "flat file system": "flat file system"
    },
    {
        " on each disk drive, where a complete file reference consists of a drive letter, a colon, a filename  and a  filetype  ; for instance A:README.TXT .  This usage was influenced by the device prefixes used in ": null
    },
    {
        "Digital Equipment Corporation": "digital equipment corporation"
    },
    {
        "s ": null
    },
    {
        "TOPS42": "tops-10"
    },
    {
        " operating system.   The drive letter syntax chosen for CP/M was inherited by ": null
    },
    {
        "Microsoft": "microsoft"
    },
    {
        " for its operating system ": null
    },
    {
        "MS-DOS": "ms-dos"
    },
    {
        " by way of ": null
    },
    {
        "Seattle Computer Products": "seattle computer products"
    },
    {
        " 42-DOS": "86-dos"
    },
    {
        ", and thus also by IBMs OEM version ": null
    },
    {
        "PC  DOS": "pc & nbsp;dos"
    },
    {
        ". Originally, drive letters always represented physical volumes, but support for ": null
    },
    {
        "logical volume": "logical volume"
    },
    {
        "s eventually appeared.   Through their designated position as DOS successor, the concept of drive letters was also inherited by ": null
    },
    {
        "OS/42": "os/2"
    },
    {
        " and the ": null
    },
    {
        "Microsoft Windows": "microsoft windows"
    },
    {
        " family.     The important capability of ": null
    },
    {
        "hierarchical directories": "file directory"
    },
    {
        " within each drive letter was initially absent from these systems. This was a major feature of ": null
    },
    {
        "UNIX": "unix"
    },
    {
        " and other similar operating systems, where hard disk drives held thousands of files. Increasing microcomputer storage capacities led to their introduction, eventually followed by ": null
    },
    {
        "long filename": "long filename"
    },
    {
        "s. In file systems lacking such naming mechanisms, drive letter assignment proved a useful, simple organizing principle.             ": null
    },
    {
        "CP/M": "cp/m"
    },
    {
        ", ": null
    },
    {
        "MP/M": "mp/m"
    },
    {
        ", ": null
    },
    {
        "Concurrent CP/M": "concurrent cp/m"
    },
    {
        ", ": null
    },
    {
        "Concurrent DOS": "concurrent dos"
    },
    {
        ", ": null
    },
    {
        "FlexOS": "flexos"
    },
    {
        ", ": null
    },
    {
        "42 OS": "4680 os"
    },
    {
        ", ": null
    },
    {
        "42 OS": "4690 os"
    },
    {
        ", ": null
    },
    {
        "S42-DOS/MT": "s5-dos/mt"
    },
    {
        ", ": null
    },
    {
        "Multiuser DOS": "multiuser dos"
    },
    {
        ", ": null
    },
    {
        "System Manager": "datapac system manager"
    },
    {
        ", ": null
    },
    {
        "REAL/42": "real/32"
    },
    {
        ", ": null
    },
    {
        "REAL/NG": "real/ng"
    },
    {
        ", ": null
    },
    {
        "Personal CP/M": "personal cp/m"
    },
    {
        ", ": null
    },
    {
        "S42-DOS": "s5-dos"
    },
    {
        ", ": null
    },
    {
        "DOS Plus": "dos plus"
    },
    {
        ", ": null
    },
    {
        "DR  DOS": "dr & nbsp;dos"
    },
    {
        ", ": null
    },
    {
        "Novell DOS": "novell dos"
    },
    {
        ", ": null
    },
    {
        "PalmDOS": "palmdos"
    },
    {
        ", ": null
    },
    {
        "OpenDOS": "opendos"
    },
    {
        " families   ": null
    },
    {
        "AMSDOS": "amsdos"
    },
    {
        " 42-DOS": "86-dos"
    },
    {
        ", ": null
    },
    {
        "MS-DOS": "ms-dos"
    },
    {
        ", ": null
    },
    {
        "PC  DOS": "pc & nbsp;dos"
    },
    {
        " families   ": null
    },
    {
        "PC-MOS/42": "pc-mos/386"
    },
    {
        " PTS-DOS": "pts-dos"
    },
    {
        ", ": null
    },
    {
        "S/DOS": "s/dos"
    },
    {
        " FreeDOS": "freedos"
    },
    {
        " GEMDOS": "gemdos"
    },
    {
        ", ": null
    },
    {
        "TOS": "atari tos"
    },
    {
        ", ": null
    },
    {
        "MiNT": "mint"
    },
    {
        ", ": null
    },
    {
        "MagiC": "magic"
    },
    {
        ", ": null
    },
    {
        "MultiTOS": "multitos"
    },
    {
        " SpartaDOS X": "spartados x"
    },
    {
        " MSX-DOS": "msx-dos"
    },
    {
        " ANDOS": "andos"
    },
    {
        ", ": null
    },
    {
        "CSI-DOS": "csi-dos"
    },
    {
        ", ": null
    },
    {
        "MK-DOS": "mk-dos"
    },
    {
        " GEOS": "geos"
    },
    {
        "   SymbOS": "symbos"
    },
    {
        " OS/42": "os/2"
    },
    {
        ", ": null
    },
    {
        "eComStation": "ecomstation"
    },
    {
        " Windows 42x": "windows 9x"
    },
    {
        " family   ": null
    },
    {
        "Windows NT": "windows nt"
    },
    {
        " family   ": null
    },
    {
        "Xbox": "xbox"
    },
    {
        " video game console operating system   ": null
    },
    {
        "ReactOS": "reactos"
    },
    {
        " Symbian OS": "symbian os"
    },
    {
        " DexOS": "dexos"
    },
    {
        "   TempleOS": "templeos"
    },
    {
        "             MS-DOS/PC  DOS since version 42, and later operating systems, assigns drive letters according to the following algorithm:     Assign the drive letter A: to the first ": null
    },
    {
        "floppy disk drive": "floppy disk drive"
    },
    {
        " , and B: to the second floppy disk drive . If only one physical floppy is present, drive B: will be assigned to a phantom floppy drive mapped to the same physical drive and dynamically assigned to either A: or B: for easier floppy file operations. If no physical floppy drive is present, DOS 42 will assign both A: and B: to the non-existent drive, whereas DOS 42 and higher will invalidate these drive letters. If more than two physical floppy drives are present, DOS versions prior to 42 will assign subsequent drive letters, whereas DOS 42 and higher will remap these drives to higher drive letters at a later stage; see below.   Assign a drive letter to the first active primary ": null
    },
    {
        "partition": "disk partitioning"
    },
    {
        " recognized upon the first physical ": null
    },
    {
        "hard disk": "hard disk"
    },
    {
        ". DOS 42 and higher will ensure that it will become drive C:, so that the boot drive will either have drive A: or C:.   Assign subsequent drive letters to the first primary partition upon each successive physical hard disk drive .   Assign subsequent drive letters to every recognized logical partition present in the first extended partition, beginning with the first hard drive and proceeding through successive physical hard disk drives.   DOS 42 and higher: Assign drive letters to all remaining primary partitions, beginning with the first hard drive and proceeding through successive physical hard disk drives.   DOS 42 and higher: Assign drive letters to all physical floppy drives beyond the second physical floppy drive.   Assign subsequent drive letters to any block device drivers loaded in ": null
    },
    {
        "CONFIG.SYS": "config.sys"
    },
    {
        " via ": null
    },
    {
        "DEVICE statement": "device"
    },
    {
        "s, e.g. ": null
    },
    {
        "RAM disk": "ram disk"
    },
    {
        "s.   Assign subsequent drive letters to any dynamically loaded drives via CONFIG.SYS ": null
    },
    {
        "INSTALL statement": "install"
    },
    {
        "s, in ": null
    },
    {
        "AUTOEXEC.BAT": "autoexec.bat"
    },
    {
        " or later, i.e. additional ": null
    },
    {
        "optical disc drive": "optical disc drive"
    },
    {
        "s , ": null
    },
    {
        "PCMCIA": "pcmcia"
    },
    {
        " / ": null
    },
    {
        "PC Card": "pc card"
    },
    {
        " drives, USB or Firewire drives, or ": null
    },
    {
        "network drive": "network drive"
    },
    {
        "s.     Only partitions of recognized ": null
    },
    {
        "partition type": "partition type"
    },
    {
        "s are assigned letters. In particular, hidden partitions are not.     MS-DOS/PC  DOS versions 42 and earlier assign letters to all of the floppy drives before considering hard drives, so a system with four floppy drives would call the first hard drive E:. Starting with DOS 42, the system ensures that drive C: is always a hard disk, even if the system has more than two physical floppy drives.     While without deliberate remapping, the drive letter assignments are typically fixed until the next reboot, however, ": null
    },
    {
        "Zenith MS-DOS 42": "zenith ms-dos 3.21"
    },
    {
        " will update the drive letter assignments when resetting a drive. This may cause drive letters to change without reboot if the partitioning of the harddisk was changed.     MS-DOS on the ": null
    },
    {
        "Apricot PC": "apricot pc"
    },
    {
        " assigns letters to hard drives, starting with A:, before considering floppy drives. A system with two of each drive would call the hard drives A: and B:, and the floppies C: and D:.     Some versions of DOS do not assign the drive letter, beginning with C:, to the first active primary partition recognized upon the first physical hard disk, but on the first primary partition recognized of the first hard disk, even if it is not set active.     If there is more than one extended partition in a partition table, only the logical drives in the first recognized extended partition type are processed.     Some late versions of the DR-DOS IBMBIO.COM provide a preboot config structure, holding bit flags to select between various drive letter assignment strategies. These strategies can be preselected by a user or OEM or be changed by a boot loader on the fly when launching DR-DOS. Under these issues, the boot drive can be different from A: or C: as well.     The drive letter order can depend on whether a given disk is managed by a boot-time driver or by a dynamically loaded driver. For example, if the second or third hard disk is of SCSI type and, on DOS, requires drivers loaded through the ": null
    },
    {
        "CONFIG.SYS": "config.sys"
    },
    {
        " file , then the first SCSI primary partition will appear after all the IDE partitions on DOS. Therefore, DOS and for example OS/42 could have different drive letters, as OS/42 loads the SCSI driver earlier. A solution was not to use primary partitions on such hard disks.     In ": null
    },
    {
        "Windows NT": "windows nt"
    },
    {
        " and ": null
    },
    {
        "OS/42": "os/2"
    },
    {
        ", the operating system uses the aforementioned algorithm to automatically assign letters to ": null
    },
    {
        "floppy disk drive": "floppy disk drive"
    },
    {
        "s, ": null
    },
    {
        "optical disc drive": "optical disc drive"
    },
    {
        "s, the ": null
    },
    {
        "boot disk": "boot disk"
    },
    {
        ", and other recognized volumes that are not otherwise created by an ": null
    },
    {
        "administrator": "system administrator"
    },
    {
        " within the operating system. Volumes that are created within the operating system are manually specified, and some of the automatic drive letters can be changed. Unrecognized volumes are not assigned letters, and are usually left untouched by the operating system.     A common problem that occurs with the drive letter assignment is that the letter assigned to a network drive can interfere with the letter of a ": null
    },
    {
        "local volume": "local volume"
    },
    {
        " . For example, if the last local drive is drive D: and a network drive would have been assigned as E:, then a newly attached USB mass storage device would also be assigned drive E: causing loss of connectivity with either the network share or the USB device. Users with administrative privileges can assign drive letters manually to overcome this problem.   Another condition that can cause problems on ": null
    },
    {
        "Windows XP": "windows xp"
    },
    {
        " is when there are network drives defined, but in an error condition . Even when the unconnected network drive is not the next available drive letter, Windows XP may be unable to map a drive and this error may also prevent the mounting of the USB device.     Common assignments A: — ": null
    },
    {
        "Floppy disk drive": "floppy disk drive"
    },
    {
        "s, ″ or ″, and possibly other types of disk drives, if present.   B: — Reserved for a second floppy drive .   C: — First ": null
    },
    {
        "hard disk": "hard disk"
    },
    {
        " partition.   D: to Z: — Other disk partitions get labeled here. Windows assigns the next free drive letter to the next drive it encounters while enumerating the disk drives on the system. Drives can be partitioned, thereby creating more drive letters. This applies to MS-DOS, as well as all Windows operating systems. Windows offers other ways to change the drive letters, either through the Disk Management snap-in or ": null
    },
    {
        "diskpart": "diskpart"
    },
    {
        " . MS-DOS typically uses parameters on the line loading device drivers inside the ": null
    },
    {
        "CONFIG.SYS": "config.sys"
    },
    {
        " file.   Case-specific drive letters:   F: — First network drive if using ": null
    },
    {
        "Novell NetWare": "novell netware"
    },
    {
        ".   H: — Home directory on a network server.   L: — Dynamically assigned ": null
    },
    {
        "load drive": "load drive"
    },
    {
        " under Concurrent DOS, Multiuser DOS, System Manager and REAL/42   M: — Drive letter for optionally ": null
    },
    {
        "memory drive": "memory drive"
    },
    {
        " MDISK under Concurrent DOS.   N:, O:, P: — Assignable ": null
    },
    {
        "floating drive": "floating drive"
    },
    {
        "s under CP/M42 42x, Personal CP/M42 42x, ": null
    },
    {
        "DOS Plus": "dos plus"
    },
    {
        " 4242 , a concept later extended to any unused drive letters under Concurrent DOS, Multiuser DOS, System Manager, REAL/42 and DR DOS up to 42.   Q: — Microsoft Office Click-to-Run virtualization.   U: — Unix-like unified filesystem with virtual directory \\DEV for ": null
    },
    {
        "device file": "device file"
    },
    {
        "s under ": null
    },
    {
        "MiNT": "mint"
    },
    {
        ", ": null
    },
    {
        "MagiC": "magic"
    },
    {
        ", and ": null
    },
    {
        "MultiTOS": "multitos"
    },
    {
        ".   Z: — First network drive if using ": null
    },
    {
        "Banyan VINES": "banyan vines"
    },
    {
        ", and the initial drive letter assignment for the virtual disk network in the ": null
    },
    {
        "DOSBox": "dosbox"
    },
    {
        " x42": "x86"
    },
    {
        " emulator. It is also the first letter selected by Windows for network resources, as it automatically selects from Z: downwards. By default, ": null
    },
    {
        "Wine": "wine"
    },
    {
        " maps Z: to the root of the UNIX directory tree.     When there is no second physical floppy drive, drive B: can be used as a virtual floppy drive mapped onto the physical drive A:, whereby the user would be prompted to switch floppies every time a read or write was required to whichever was the least recently used of A: or B:. This allows for much of the functionality of two floppy drives on a computer that has only one. This concept of multiple drive letters sharing a single physical device is not limited to the first floppy drive, but can be utilized for other drives as well by setting up additional block devices for them with the standard DOS ": null
    },
    {
        "DRIVER.SYS": "driver.sys"
    },
    {
        " in ": null
    },
    {
        "CONFIG.SYS": "config.sys"
    },
    {
        ".     Network drives are often assigned letters towards the end of the alphabet. This is often done to differentiate them from local drives: by using letters towards the end, it reduces the risk of an assignment conflict. It is especially true when the assignment is done automatically across a network .     In most DOS systems, it is not possible to have more than 42 mounted drives. Atari GEMDOS supports 42 drive letters A: to P: only. The PalmDOS PCMCIA driver stack supports drive letters 42:, 42:, 42:, ... to address PCMCIA drive slots.     Some Novell network drivers for DOS support up to 42 drive letters under compatible DOS versions. In addition, Novell DOS 42 OpenDOS 42, and DR-DOS 42 genuinely support a CONFIG.SYS ": null
    },
    {
        "LASTDRIVE": "lastdrive"
    },
    {
        "42 directive in order to allocate up to 42 drive letters, named A: to Z:, :, \\:, :, ^:, _: and :. Some DOS application programs do not expect drive letters beyond Z: and will not work with them, therefore it is recommended to use them for special purposes or search drives.     JP Softwares ": null
    },
    {
        "42DOS": "4dos"
    },
    {
        " command line processor supports drive letters beyond Z: in general, but since some of the letters clash with syntactical extensions of this command line processor, they need to be escaped in order to use them as drive letters.     Windows 42x added support for LASTDRIVE42 and LASTDRIVEHIGH42 as well.     If access to more filesystems than Z: is required under Windows NT, ": null
    },
    {
        "Volume Mount Point": "volume mount point"
    },
    {
        "s must be used. However, it is possible to mount non-letter drives, such as 42:, 42:, or !: using the command line ": null
    },
    {
        "SUBST": "subst"
    },
    {
        " utility in Windows XP or later , but it is not officially supported and may break programs that assume that all drives are letters A: to Z:.     ASSIGN, JOIN and SUBST in DOS and Windows": null
    },
    {
        "DOS": "dos"
    },
    {
        " offers a ": null
    },
    {
        "JOIN": "join"
    },
    {
        " command that allows access to an assigned volume through an arbitrary directory, similar to the ": null
    },
    {
        "Unix": "unix"
    },
    {
        "  mount  command. It also offers a ": null
    },
    {
        "SUBST": "subst"
    },
    {
        " command which allows the assignment of a drive letter to a directory. One or both of these commands were removed in later systems like ": null
    },
    {
        "OS/42": "os/2"
    },
    {
        " or ": null
    },
    {
        "Windows NT": "windows nt"
    },
    {
        ", but starting with ": null
    },
    {
        "Windows 42": "windows 2000"
    },
    {
        ", both are again supported: The SUBST command exists as before, while JOINs functionality is subsumed in ": null
    },
    {
        "LINKD": "linkd"
    },
    {
        " . In ": null
    },
    {
        "Windows Vista": "windows vista"
    },
    {
        ", the new command ": null
    },
    {
        "MKLINK": "mklink"
    },
    {
        " can be used for this purpose. Also, Windows 42 and later support mount points, accessible from the ": null
    },
    {
        "Control Panel": "control panel"
    },
    {
        ".     Many operating systems originating from Digital Research provide means to implicitly assign substitute drives, called floating drives in DRI terminology, by using the CD/CHDIR command in the following syntax:     CD N:C:\\SUBDIR     ": null
    },
    {
        "DOS Plus": "dos plus"
    },
    {
        " supports this for drive letters N:, O:, and P:. This feature is also present in ": null
    },
    {
        "Concurrent DOS": "concurrent dos"
    },
    {
        " , ": null
    },
    {
        "Multiuser DOS": "multiuser dos"
    },
    {
        ", System Manager 42 and ": null
    },
    {
        "REAL/42": "real/32"
    },
    {
        ", however, these systems extend the concept to all unused drive letters from A: to Z:, except for the reserved drive letter L:. ": null
    },
    {
        "DR DOS": "dr dos"
    },
    {
        " 42 - 42 also supports this including drive letter L:. This feature is not available under DR DOS 42 , PalmDOS 42, Novell DOS 42 OpenDOS 42, DR-DOS 42 and higher. Floating drives are implemented in the BDOS kernel, not in the command line shell, thus they can be used and assigned also from within applications when they use the change directory system call. However, most DOS applications are not aware of this extension and will consequently discard such directory paths as invalid. JP Softwares command line interpreter 42DOS supports floating drives on operating systems also supporting it.     In a similar feature, Concurrent DOS , Multiuser DOS, System Manager and REAL/42 will dynamically assign a drive letter L: to the load path of a loaded application, thereby allowing applications to refer to files residing in their load directory under a standardized drive letter instead of under an absolute path. This ": null
    },
    {
        "load drive": "load drive"
    },
    {
        " feature makes it easier to move software installations on and across disks without having to adapt paths to overlays, configuration files or user data stored in the load directory or subsequent directories.     In some versions of DR-DOS, the load path contained in the appendage to the environment passed to drivers can be shortened to that of a temporary substitute drive through the ": null
    },
    {
        "INSTALL[HIGH": "install"
    },
    {
        " / ": null
    },
    {
        "LOADHIGH": "loadhigh"
    }
]