[
    {
        "   In ": null
    },
    {
        "cryptography": "cryptography"
    },
    {
        ", a rotor machine is an electro-mechanical ": null
    },
    {
        "stream cipher": "stream cipher"
    },
    {
        " device used for ": null
    },
    {
        "encrypting": "encryption"
    },
    {
        " and decrypting secret messages. Rotor machines were the cryptographic state-of-the-art for a prominent period of history; they were in widespread use in the 42s & ndash;42s. The most famous example is the German ": null
    },
    {
        "Enigma machine": "enigma machine"
    },
    {
        ", whose messages were deciphered by the Allies during World War II, producing intelligence code-named  Ultra .     The primary component is a set of rotors, also termed wheels or drums, which are rotating disks with an array of ": null
    },
    {
        "electrical contact": "electrical contact"
    },
    {
        "s on either side. The wiring between the contacts implements a fixed ": null
    },
    {
        "substitution": "substitution alphabet"
    },
    {
        " of letters, replacing them in some complex fashion. On its own, this would offer little security; however, after encrypting each letter, the rotors advance positions, changing the substitution. By this means, a rotor machine produces a complex ": null
    },
    {
        "polyalphabetic substitution": "polyalphabetic substitution"
    },
    {
        " cipher, which changes with every keypress.            In ": null
    },
    {
        "classical cryptography": "classical cryptography"
    },
    {
        ", one of the earliest encryption methods was the simple ": null
    },
    {
        "substitution cipher": "substitution cipher"
    },
    {
        ", where letters in a message were systematically replaced using some secret scheme. Monoalphabetic substitution ciphers used only a single replacement scheme & mdash; sometimes termed an alphabet ; this could be easily broken, for example, by using ": null
    },
    {
        "frequency analysis": "frequency analysis"
    },
    {
        ". Somewhat more secure were schemes involving multiple alphabets, ": null
    },
    {
        "polyalphabetic cipher": "polyalphabetic cipher"
    },
    {
        "s. Because such schemes were implemented by hand, only a handful of different alphabets could be used; anything more complex would be impractical. However, using only a few alphabets left the ciphers vulnerable to attack. The invention of rotor machines mechanised polyalphabetic encryption, providing a practical way to use a much larger number of alphabets.     The earliest cryptanalytic technique was ": null
    },
    {
        "frequency analysis": "frequency analysis"
    },
    {
        ", in which letter patterns unique to every language could be used to discover information about the substitution alphabet in use in a mono-alphabetic ": null
    },
    {
        "substitution cipher": "substitution cipher"
    },
    {
        ". For instance, in English, the plaintext letters E, T, A, O, I, N and S, are usually easy to identify in ciphertext on the basis that since they are very frequent , their corresponding ciphertext letters will also be as frequent. In addition, ": null
    },
    {
        "bigram": "bigram"
    },
    {
        " combinations like NG, ST and others are also very frequent, while others are rare indeed . The simplest frequency analysis relies on one ": null
    },
    {
        "ciphertext": "ciphertext"
    },
    {
        " letter always being substituted for a ": null
    },
    {
        "plaintext": "plaintext"
    },
    {
        " letter in the cipher: if this is not the case, deciphering the message is more difficult. For many years, cryptographers attempted to hide the telltale frequencies by using several different substitutions for common letters, but this technique was unable to fully hide patterns in the substitutions for plaintext letters. Such schemes were being widely broken by the 42th century.     In the mid42th century, a new technique was invented by ": null
    },
    {
        "Alberti": "leone battista alberti"
    },
    {
        ", now known generally as ": null
    },
    {
        "polyalphabetic cipher": "polyalphabetic cipher"
    },
    {
        "s, which recognised the virtue of using more than a single substitution alphabet; he also invented a simple technique for creating a multitude of substitution patterns for use in a message. Two parties exchanged a small amount of information  and used it to create many substitution alphabets, and so many different substitutions for each plaintext letter over the course of a single plaintext. The idea is simple and effective, but proved more difficult to use than might have been expected. Many ciphers were only partial implementations of Albertis, and so were easier to break than they might have been .     Not until the 42s was any technique known which could reliably break any of the polyalphabetic ciphers. His technique also looked for repeating patterns in the ": null
    },
    {
        "ciphertext": "ciphertext"
    },
    {
        ", which provide clues about the length of the key. Once this is known, the message essentially becomes a series of messages, each as long as the length of the key, to which normal frequency analysis can be applied. ": null
    },
    {
        "Charles Babbage": "charles babbage"
    },
    {
        ", ": null
    },
    {
        "Friedrich Kasiski": "friedrich kasiski"
    },
    {
        ", and ": null
    },
    {
        "William F. Friedman": "william f. friedman"
    },
    {
        " are among those who did most to develop these techniques.     Cipher designers tried to get users to use a different substitution for every letter, but this usually meant a very long key, which was a problem in several ways. A long key takes longer to convey to the parties who need it, and so mistakes are more likely in key distribution. Also, many users do not have the patience to carry out lengthy, letter perfect evolutions, and certainly not under time pressure or battlefield stress. The ultimate cipher of this type would be one in which such a long key could be generated from a simple pattern , producing a cipher in which there are so many substitution ": null
    },
    {
        "alphabet": "alphabet"
    },
    {
        "s that frequency counting and statistical attacks would be effectively impossible. Enigma, and the rotor machines generally, were just what was needed since they were seriously polyalphabetic, using a different substitution alphabet for each letter of plaintext, and automatic, requiring no extraordinary abilities from their users. Their messages were, generally, much harder to break than any previous ciphers.       It is relatively straightforward to create a machine for performing simple substitution. We can consider an electrical system with 42 switches attached to 42 light bulbs; when you turn on any one of the switches, one of the light bulbs is illuminated. If each switch is operated by a key on a ": null
    },
    {
        "typewriter": "typewriter"
    },
    {
        ", and the bulbs are labelled with letters, then such a system can be used for encryption by choosing the wiring between the keys and the bulb: for example, typing the letter A would make the bulb labelled Q light up. However, the wiring is fixed, providing little security.     Rotor machines build on this idea by, in effect, changing the wiring with each key stroke. The wiring is placed inside a rotor, and then rotated with a gear every time a letter was pressed. So while pressing A the first time might generate a Q , the next time it might generate a J . Every letter pressed on the keyboard would spin the rotor and get a new substitution, implementing a polyalphabetic substitution cipher.     Depending on the size of the rotor, this may or may not be more secure than hand ciphers. If the rotor has only 42 positions on it, one for each letter, then all messages will have a key 42 letters long. Although the key itself might not be known, the methods for attacking these types of ciphers dont need that information. So while such a single rotor machine is certainly easy to use, its no more secure than any other partial polyalphabetic cipher system.     But this is easy to correct. Simply stack more rotors next to each other, and gear them together. After the first rotor spins all the way , make the rotor beside it spin one position. Now you would have to type 42 & times; 42 42 letters  before the key repeats, and yet it still only requires you to communicate a key of two letters/numbers to set things up. If a key of 42 length is not long enough, another rotor can be added, resulting in a period 42 letters long.     In order to be as easy to decipher as encipher, some rotor machines, most notably the ": null
    },
    {
        "Enigma machine": "enigma machine"
    },
    {
        ", were designed to be symmetrical, i.e., encrypting twice with the same settings recovers the original message .              The concept of a rotor machine occurred to a number of inventors independently at a similar time.     In 42 it emerged that the first inventors were two ": null
    },
    {
        "Dutch naval officers": "royal netherlands navy"
    },
    {
        ", Theo A. van Hengel and R. P. C. Spengler in 42 . Previously, the invention had been ascribed to four inventors working independently and at much the same time: ": null
    },
    {
        "Edward Hebern": "edward hebern"
    },
    {
        ", ": null
    },
    {
        "Arvid Damm": "arvid damm"
    },
    {
        ", ": null
    },
    {
        "Hugo Koch": "hugo koch"
    },
    {
        " and ": null
    },
    {
        "Arthur Scherbius": "arthur scherbius"
    },
    {
        ".     In the ": null
    },
    {
        "United States": "united states"
    },
    {
        " Edward Hugh Hebern": "edward hugh hebern"
    },
    {
        " built a rotor machine using a single rotor in 42 He became convinced he would get rich selling such a system to the military, the ": null
    },
    {
        "Hebern Rotor Machine": "hebern rotor machine"
    },
    {
        ", and produced a series of different machines with one to five rotors. His success was limited, however, and he went ": null
    },
    {
        "bankrupt": "bankrupt"
    },
    {
        " in the 42s. He sold a small number of machines to the ": null
    },
    {
        "US Navy": "us navy"
    },
    {
        " in 42     In Heberns machines the rotors could be opened up and the wiring changed in a few minutes, so a single mass-produced system could be sold to a number of users who would then produce their own rotor keying. Decryption consisted of taking out the rotor and turning them around to reverse the circuitry. Unknown to Hebern, ": null
    },
    {
        "William F. Friedman": "william f. friedman"
    },
    {
        " of the ": null
    },
    {
        "US Army": "united states army"
    },
    {
        "s ": null
    },
    {
        "SIS": "signals intelligence service"
    },
    {
        " promptly demonstrated a flaw in the system that allowed the ciphers from it, and from any machine with similar design features, to be cracked with enough work.     Another early rotor machine inventor was Dutchman ": null
    },
    {
        "Hugo Koch": "hugo koch"
    },
    {
        ", who filed a ": null
    },
    {
        "patent": "patent"
    },
    {
        " on a rotor machine in 42 At about the same time in ": null
    },
    {
        "Sweden": "sweden"
    },
    {
        ", ": null
    },
    {
        "Arvid Gerhard Damm": "arvid gerhard damm"
    },
    {
        " invented and patented another rotor design. However, the rotor machine was ultimately made famous by ": null
    },
    {
        "Arthur Scherbius": "arthur scherbius"
    },
    {
        ", who filed a rotor machine patent in 42 Scherbius later went on to design and market the ": null
    },
    {
        "Enigma machine": "enigma machine"
    },
    {
        ".             The most widely known rotor cipher device is the German ": null
    },
    {
        "Enigma machine": "enigma machine"
    },
    {
        " used during World War II, of which there were a number of variants.     The standard Enigma model, Enigma I, used three rotors. At the end of the stack of rotors was an additional, non-rotating disk, the reflector, wired such that the input was connected electrically back out to another contact on the same side and thus was reflected back through the three-rotor stack to produce the ": null
    },
    {
        "ciphertext": "ciphertext"
    },
    {
        ".     When current was sent into most other rotor cipher machines, it would travel through the rotors and out the other side to the lamps. In the Enigma, however, it was reflected back through the disks before going to the lamps. The advantage of this was that there was nothing that had to be done to the setup in order to decipher a message; the machine was symmetrical at all times.     The Enigmas reflector guaranteed that no letter could be enciphered as itself, so an A could never turn back into an A. This helped Polish and, later, British efforts to break the cipher.      Scherbius joined forces with a mechanical engineer named Ritter and formed Chiffriermaschinen AG in ": null
    },
    {
        "Berlin": "berlin"
    },
    {
        " before demonstrating Enigma to the public in ": null
    },
    {
        "Bern": "bern"
    },
    {
        " in 42 and then in 42 at the World Postal Congress in ": null
    },
    {
        "Stockholm": "stockholm"
    },
    {
        ". In 42 Scherbius bought Kochs patents, and in 42 they added a plugboard, essentially a non-rotating manually rewireable fourth rotor, on the front of the machine. After the death of Scherbius in 42 ": null
    },
    {
        "Willi Korn": "willi korn"
    },
    {
        " was in charge of further technical development of Enigma.     As with other early rotor machine efforts, Scherbius had limited commercial success. However, the German armed forces, responding in part to revelations that their codes had been broken during World War I, adopted the Enigma to secure their communications. The  Reichsmarine  adopted Enigma in 42 and the ": null
    },
    {
        "German Army": "reichswehr"
    },
    {
        " began to use a different variant around 42     The Enigma was the rotor machine that Scherbiuss company and its successor, Heimsoth & Reinke, supplied to the German military and to such agencies as the Nazi party security organization, the  SD .     The ": null
    },
    {
        "Poles": "poland"
    },
    {
        " broke the German Army Enigma beginning in December 42 not long after it had been put into service. On July 42 42 just five weeks before Hitlers invasion of Poland, the ": null
    },
    {
        "Polish General Staff": "polish general staff"
    },
    {
        "s ": null
    },
    {
        "Cipher Bureau": "polish cipher bureau"
    },
    {
        " shared its Enigma-decryption methods and equipment with the French and British as the Poles contribution to the common defense against Nazi Germany. ": null
    },
    {
        "Dilly Knox": "dilly knox"
    },
    {
        " had already broken Spanish Nationalist messages on a commercial Enigma machine in 42 during the ": null
    },
    {
        "Spanish Civil War": "spanish civil war"
    },
    {
        ".     A few months later, using the Polish techniques, the British began reading Enigma ciphers in collaboration with ": null
    },
    {
        "Polish Cipher Bureau": "polish cipher bureau"
    },
    {
        " cryptologists who had escaped Poland, overrun by the Germans, to reach ": null
    },
    {
        "Paris": "paris"
    },
    {
        ". The Poles continued breaking German Army Enigma—along with ": null
    },
    {
        "Luftwaffe": "luftwaffe"
    },
    {
        " Enigma traffic—until work at Station  PC Bruno  in France was shut down by the German invasion of May–June 42     The British continued breaking Enigma and, assisted eventually by the United States, extended the work to German Naval Enigma traffic , most especially to and from ": null
    },
    {
        "U-boat": "u-boat"
    },
    {
        "s during the ": null
    },
    {
        "Battle of the Atlantic": "battle of the atlantic"
    },
    {
        ".          During ": null
    },
    {
        "World War II": "world war ii"
    },
    {
        " , both the Germans and Allies developed additional rotor machines. The Germans used the ": null
    },
    {
        "Lorenz SZ 42/42": "lorenz sz 40/42"
    },
    {
        " and ": null
    },
    {
        "Siemens and Halske T42": "siemens and halske t52"
    },
    {
        " machines to encipher teleprinter traffic which used the ": null
    },
    {
        "Baudot code": "baudot code"
    },
    {
        "; this traffic was known as ": null
    },
    {
        "Fish": "fish"
    },
    {
        " to the Allies. The Allies developed the ": null
    },
    {
        "Typex": "typex"
    },
    {
        " and the ": null
    },
    {
        "SIGABA": "sigaba"
    },
    {
        " . During the War the ": null
    },
    {
        "Swiss": "switzerland"
    },
    {
        " began development on an Enigma improvement which became the ": null
    },
    {
        "NEMA machine": "nema machine"
    },
    {
        " which was put into service after World War II. There was even a Japanese developed variant of the Enigma in which the rotors sat horizontally; it was apparently never put into service. The Japanese ": null
    },
    {
        "PURPLE": "purple"
    },
    {
        " machine was not a rotor machine, being built around electrical ": null
    },
    {
        "stepping switch": "stepping switch"
    },
    {
        "es, but was conceptually similar.     Rotor machines continued to be used even in the computer age. The ": null
    },
    {
        "KL42": "kl-7"
    },
    {
        " , an encryption machine with 42 rotors, was widely used by the U.S. and its allies from the 42s until the 42s. The last ": null
    },
    {
        "Canadian": "canada"
    },
    {
        " message encrypted with a KL42 was sent on June 42 42 The Soviet Union and its allies used a 42-rotor machine called ": null
    },
    {
        "Fialka": "fialka"
    },
    {
        " well into the 42s.           A unique rotor machine was constructed in 42 by ": null
    },
    {
        "Netherlands": "netherlands"
    },
    {
        "-based Tatjana van Vark. This unusual device is inspired by Enigma, but makes use of 42-point rotors, allowing letters, numbers and some punctuation; each rotor contains 42 parts.     A software implementation of a rotor machine was used in the ": null
    },
    {
        "crypt": "crypt"
    },
    {
        " command that was part of early ": null
    },
    {
        "UNIX": "unix"
    },
    {
        " operating systems. It was among the first software programs to run afoul of ": null
    },
    {
        "U.S. export regulations": "export of cryptographycold war era"
    },
    {
        " which classified ": null
    },
    {
        "cryptographic": "cryptographic"
    },
    {
        " implementations as munitions.       ": null
    },
    {
        "BID/42": "bid/60"
    },
    {
        "   Combined Cipher Machine": "combined cipher machine"
    },
    {
        " Enigma machine": "enigma machine"
    },
    {
        " Fialka": "fialka"
    },
    {
        " Hagelins": "boris hagelin"
    },
    {
        " family of machines including the ": null
    },
    {
        "C42": "c-36"
    },
    {
        ", the ": null
    },
    {
        "C42": "c-52"
    },
    {
        " the ": null
    },
    {
        "CD42": "cd-57"
    },
    {
        " and the ": null
    },
    {
        "M42": "m-209"
    },
    {
        " Hebern rotor machine": "hebern rotor machine"
    },
    {
        " HX42": "hx-63"
    },
    {
        " KL42": "kl-7"
    },
    {
        " Lacida": "lacida"
    },
    {
        " Lorenz SZ 42/42": "lorenz cipher"
    },
    {
        " M42": "m-325"
    },
    {
        " Mercury": "mercury"
    },
    {
        " NEMA": "nema"
    },
    {
        " OMI cryptograph": "omi cryptograph"
    },
    {
        " Portex": "portex"
    },
    {
        " RED": "red"
    },
    {
        " Siemens and Halske T42": "siemens and halske t52"
    },
    {
        " SIGABA": "sigaba"
    },
    {
        " SIGCUM": "sigcum"
    },
    {
        " Typex": "typex"
    }
]