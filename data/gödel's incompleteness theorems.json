[
    {
        "   Gödels incompleteness theorems are two ": null
    },
    {
        "theorem": "theorem"
    },
    {
        "s of ": null
    },
    {
        "mathematical logic": "mathematical logic"
    },
    {
        " that demonstrate the inherent limitations of every formal ": null
    },
    {
        "axiomatic system": "axiomatic system"
    },
    {
        " capable of modelling basic ": null
    },
    {
        "arithmetic": "arithmetic"
    },
    {
        ". These results, published by ": null
    },
    {
        "Kurt Gödel": "kurt gödel"
    },
    {
        " in 42 are important both in mathematical logic and in the ": null
    },
    {
        "philosophy of mathematics": "philosophy of mathematics"
    },
    {
        ". The theorems are widely, but not universally, interpreted as showing that ": null
    },
    {
        "Hilberts program": "hilberts program"
    },
    {
        " to find a complete and consistent set of ": null
    },
    {
        "axiom": "axiom"
    },
    {
        "s for all ": null
    },
    {
        "mathematics": "mathematics"
    },
    {
        " is impossible.     The first incompleteness theorem states that no ": null
    },
    {
        "consistent system": "consistency"
    },
    {
        " of ": null
    },
    {
        "axiom": "axiom"
    },
    {
        "s whose theorems can be listed by an ": null
    },
    {
        "effective procedure": "effective procedure"
    },
    {
        "  is capable of proving all truths about the arithmetic of ": null
    },
    {
        "natural number": "natural number"
    },
    {
        "s. For any such consistent formal system, there will always be statements about natural numbers that are true, but that are unprovable within the system. The second incompleteness theorem, an extension of the first, shows that the system cannot demonstrate its own consistency.     Employing a ": null
    },
    {
        "diagonal argument": "cantors diagonal argument"
    },
    {
        ", Gödels incompleteness theorems were the first of several closely related theorems on the limitations of formal systems. They were followed by ": null
    },
    {
        "Tarskis undefinability theorem": "tarskis undefinability theorem"
    },
    {
        " on the formal undefinability of truth, ": null
    },
    {
        "Church": "alonzo church"
    },
    {
        "s proof that Hilberts ": null
    },
    {
        "Entscheidungsproblem": "entscheidungsproblem"
    },
    {
        " is unsolvable, and ": null
    },
    {
        "Turing": "alan turing"
    },
    {
        "s theorem that there is no algorithm to solve the ": null
    },
    {
        "halting problem": "halting problem"
    },
    {
        ".         The incompleteness theorems apply to ": null
    },
    {
        "formal system": "formal system"
    },
    {
        "s that are of sufficient complexity to express the basic arithmetic of the natural numbers and which are consistent, and effectively axiomatized, these concepts being detailed below. Particularly in the context of ": null
    },
    {
        "first-order logic": "first-order logic"
    },
    {
        ", formal systems are also called formal theories. In general, a formal system is a deductive apparatus that consists of a particular set of axioms along with rules of symbolic manipulation that allow for the derivation of new theorems from the axioms. One example of such a system is first-order ": null
    },
    {
        "Peano arithmetic": "peano arithmetic"
    },
    {
        ", a system in which all variables are intended to denote natural numbers. In other systems, such as ": null
    },
    {
        "set theory": "set theory"
    },
    {
        ", only some sentences of the formal system express statements about the natural numbers. The incompleteness theorems are about formal provability within these systems, rather than about provability in an informal sense.     There are several properties that a formal system may have, including completeness, consistency, and the existence of an effective axiomatization. The incompleteness theorems show that systems which contain a sufficient amount of arithmetic cannot possess all three of these properties.         A formal system is said to be effectively axiomatized  if its set of theorems is a ": null
    },
    {
        "recursively enumerable set": "recursively enumerable set"
    },
    {
        " .     This means that there is a computer program that, in principle, could enumerate all the theorems of the system without listing any statements that are not theorems. Examples of effectively generated theories include Peano arithmetic and ": null
    },
    {
        "Zermelo–Fraenkel set theory": "zermelo–fraenkel set theory"
    },
    {
        " .     The theory known as ": null
    },
    {
        "true arithmetic": "true arithmetic"
    },
    {
        " consists of all true statements about the standard integers in the language of Peano arithmetic. This theory is consistent, and complete, and contains a sufficient amount of arithmetic. However it does not have a recursively enumerable set of axioms, and thus does not satisfy the hypotheses of the incompleteness theorems.         A set of axioms is  ": null
    },
    {
        "complete": "complete theory"
    },
    {
        " if, for any statement in the axioms language, that statement or its negation is provable from the axioms . This is the notion relevant for Gödels first Incompleteness theorem. It is not to be confused with semantic completeness, which means that the set of axioms proves all the semantic tautologies of the given language. In his ": null
    },
    {
        "completeness theorem": "gödels completeness theorem"
    },
    {
        ", Gödel proved that first order logic is semantically complete. But it is not syntactically complete, since there are sentences expressible in the language of first order logic that can be neither proved nor disproved from the axioms of logic alone.     In a mere system of logic it would be absurd to expect syntactic completeness. But in a system of mathematics, thinkers such as Hilbert had believed that it is just a matter of time to find such an axiomatization that would allow one to either prove or disprove each and every mathematical formula.     A formal system might be syntactically incomplete by design, as logics generally are. Or it may be incomplete simply because not all the necessary axioms have been discovered or included. For example, ": null
    },
    {
        "Euclidean geometry": "euclidean geometry"
    },
    {
        " without the ": null
    },
    {
        "parallel postulate": "parallel postulate"
    },
    {
        " is incomplete, because some statements in the language can not be proved from the remaining axioms. Similarly, the theory of ": null
    },
    {
        "dense linear order": "dense linear order"
    },
    {
        "s is not complete, but becomes complete with an extra axiom stating that there are no endpoints in the order. The ": null
    },
    {
        "continuum hypothesis": "continuum hypothesis"
    },
    {
        " is a statement in the language of ": null
    },
    {
        "ZFC": "zermelo–fraenkel set theory"
    },
    {
        " that is not provable within ZFC, so ZFC is not complete. In this case, there is no obvious candidate for a new axiom that resolves the issue.     The theory of first order ": null
    },
    {
        "Peano arithmetic": "peano arithmetic"
    },
    {
        " seems to be consistent. Assuming this is indeed the case, note that it has an infinite but recursively enumerable set of axioms, and can encode enough arithmetic for the hypotheses of the incompleteness theorem. Thus by the first incompleteness theorem, Peano Arithmetic is not complete. The theorem gives an explicit example of a statement of arithmetic that is neither provable nor disprovable in Peanos arithmetic. Moreover, this statement is true in the usual ": null
    },
    {
        "model": "model theory"
    },
    {
        ". In addition, no effectively axiomatized, consistent extension of Peano arithmetic can be complete.       A set of axioms is ": null
    },
    {
        "consistent": "consistency"
    },
    {
        " if there is no statement such that both the statement and its negation are provable from the axioms, and inconsistent otherwise.     Peano arithmetic is provably consistent from ZFC, but not from within itself. Similarly, ZFC is not provably consistent from within itself, but ZFC + there exists an ": null
    },
    {
        "inaccessible cardinal": "inaccessible cardinal"
    },
    {
        " proves ZFC is consistent because if  is the least such cardinal, then  sitting inside the ": null
    },
    {
        "von Neumann universe": "von neumann universe"
    },
    {
        " is a ": null
    },
    {
        "model": "inner model"
    },
    {
        " of ZFC, and a theory is consistent if and only if it has a model.     If one takes all statements in the language of ": null
    },
    {
        "Peano arithmetic": "peano arithmetic"
    },
    {
        " as axioms, then this theory is complete, has a recursively enumerable set of axioms, and can describe addition and multiplication. However, it is not consistent.     Additional examples of inconsistent theories arise from the ": null
    },
    {
        "paradoxes": "naïve set theoryparadoxes in early set theory"
    },
    {
        " that result when the ": null
    },
    {
        "axiom schema of unrestricted comprehension": "axiom schema of specificationunrestricted comprehension"
    },
    {
        " is assumed in set theory.         The incompleteness theorems apply only to formal systems which are able to prove a sufficient collection of facts about the natural numbers. One sufficient collection is the set of theorems of ": null
    },
    {
        "Robinson arithmetic": "robinson arithmetic"
    },
    {
        " Q. Some systems, such as Peano arithmetic, can directly express statements about natural numbers. Others, such as ZFC set theory, are able to interpret statements about natural numbers into their language. Either of these options is appropriate for the incompleteness theorems.     The theory of ": null
    },
    {
        "algebraically closed field": "algebraically closed field"
    },
    {
        "s of a given characteristic is complete, consistent, and has an infinite but recursively enumerable set of axioms. However it is not possible to encode the integers into this theory, and the theory cannot describe arithmetic of integers. A similar example is the theory of ": null
    },
    {
        "real closed field": "real closed field"
    },
    {
        "s, which is essentially equivalent to ": null
    },
    {
        "Tarskis axioms": "tarskis axioms"
    },
    {
        " for ": null
    },
    {
        "Euclidean geometry": "euclidean geometry"
    },
    {
        ". So Euclidean geometry itself is an example of a complete, consistent, effectively axiomatized theory.     The system of ": null
    },
    {
        "Presburger arithmetic": "presburger arithmetic"
    },
    {
        " consists of a set of axioms for the natural numbers with just the addition operation . Presburger arithmetic is complete, consistent, and recursively enumerable and can encode addition but not multiplication of natural numbers, showing that for Gödels theorems one needs the theory to encode not just addition but also multiplication.     ": null
    },
    {
        "Dan Willard": "dan willard"
    },
    {
        " has studied some weak families of arithmetic systems which allow enough arithmetic as relations to formalise Gödel numbering, but which are not strong enough to have multiplication as a function, and so fail to prove the second incompleteness theorem; these systems are consistent and capable of proving their own consistency .       In choosing a set of axioms, one goal is to be able to prove as many correct results as possible, without proving any incorrect results. For example, we could imagine a set of true axioms which allow us to prove every true arithmetical claim about the natural numbers . In the standard system of first-order logic, an inconsistent set of axioms will prove every statement in its language , and is thus automatically complete. A set of axioms that is both complete and consistent, however, proves a ": null
    },
    {
        "maximal set": "maximal set"
    },
    {
        " of non-": null
    },
    {
        "contradictory": "contradiction"
    },
    {
        " theorems .     The pattern illustrated in the previous sections with Peano arithmetic, ZFC, and ZFC + there exists an inaccessible cardinal cannot generally be broken. Here ZFC + there exists an inaccessible cardinal cannot from itself, be proved consistent. It is also not complete, as illustrated by the in ZFC + there exists an inaccessible cardinal theory unresolved continuum hypothesis.     The first incompleteness theorem shows that, in formal systems that can express basic arithmetic, a complete and consistent finite list of axioms can never be created: each time an additional, consistent statement is added as an axiom, there are other true statements that still cannot be proved, even with the new axiom. If an axiom is ever added that makes the system complete, it does so at the cost of making the system inconsistent. It is not even possible for an infinite list of axioms to be complete, consistent, and effectively axiomatized.          Gödels first incompleteness theorem first appeared as Theorem VI in Gödels 42 paper ": null
    },
    {
        "On Formally Undecidable Propositions of Principia Mathematica and Related Systems": "on formally undecidable propositions of principia mathematica and related systems"
    },
    {
        " I . The hypotheses of the theorem were improved shortly thereafter by J. Barkley Rosser using ": null
    },
    {
        "Rossers trick": "rossers trick"
    },
    {
        ". The resulting theorem may be paraphrased in English as follows, where formal system includes the assumption that the system is effectively generated.     First Incompleteness Theorem: Any consistent formal system F within which a certain amount of elementary arithmetic can be carried out is incomplete; i.e., there are statements of the language of F which can neither be proved nor disproved in F.     The unprovable statement G F referred to by the theorem is often referred to as the Gödel sentence for the system F. The proof constructs a particular Gödel sentence for the system F, but there are infinitely many statements in the language of the system that share the same properties, such as the conjunction of the Gödel sentence and any ": null
    },
    {
        "logically valid": "logically valid"
    },
    {
        " sentence.     Each effectively generated system has its own Gödel sentence. It is possible to define a larger system F’  that contains the whole of F plus G F as an additional axiom. This will not result in a complete system, because Gödels theorem will also apply to F’, and thus F’ also cannot be complete. In this case, G F is indeed a theorem in F’, because it is an axiom. Because G F states only that it is not provable in F, no contradiction is presented by its provability within F’. However, because the incompleteness theorem applies to F’, there will be a new Gödel statement G F & prime; for F’, showing that F’ is also incomplete. G F & prime; will differ from G F in that G F & prime; will refer to F’, rather than  F.         The Gödel sentence is designed to refer, indirectly, to itself. The sentence states that, when a particular sequence of steps is used to construct another sentence, that constructed sentence will not be provable in F. However, the sequence of steps is such that the constructed sentence turns out to be G F itself. In this way, the Gödel sentence G F indirectly states its own unprovability within F .     To prove the first incompleteness theorem, Gödel demonstrated that the notion of provability within a system could be expressed purely in terms of arithmetical functions that operate on ": null
    },
    {
        "Gödel number": "gödel number"
    },
    {
        "s of sentences of the system. Therefore, the system, which can prove certain facts about numbers, can also indirectly prove facts about its own statements, provided that it is effectively generated. Questions about the provability of statements within the system are represented as questions about the arithmetical properties of numbers themselves, which would be decidable by the system if it were complete.     Thus, although the Gödel sentence refers indirectly to sentences of the system F, when read as an arithmetical statement the Gödel sentence directly refers only to natural numbers. It asserts that no natural number has a particular property, where that property is given by a ": null
    },
    {
        "primitive recursive": "primitive recursive function"
    },
    {
        " relation . As such, the Gödel sentence can be written in the language of arithmetic with a simple syntactic form. In particular, it can be expressed as a formula in the language of arithmetic consisting of a number of leading universal quantifiers followed by a quantifier-free body . Via the ": null
    },
    {
        "MRDP theorem": "mrdp theorem"
    },
    {
        ", the Gödel sentence can be re-written as a statement that a particular polynomial in many variables with integer coefficients never takes the value zero when integers are substituted for its variables .         The first incompleteness theorem shows that the Gödel sentence G F of an appropriate formal theory F is unprovable in F. Because, when interpreted as a statement about arithmetic, this unprovability is exactly what the sentence asserts, the Gödel sentence is, in fact, true . For this reason, the sentence G F is often said to be true but unprovable. . However, since the Gödel sentence cannot itself formally specify its intended interpretation, the truth of the sentence G F may only be arrived at via a meta-analysis from outside the system. In general, this meta-analysis can be carried out within the weak formal system known as ": null
    },
    {
        "primitive recursive arithmetic": "primitive recursive arithmetic"
    },
    {
        ", which proves the implication Con→G F , where Con is a canonical sentence asserting the consistency of F .     Although the Gödel sentence of a consistent theory is true as a statement about the ": null
    },
    {
        "intended interpretation": "intended interpretation"
    },
    {
        " of arithmetic, the Gödel sentence will be false in some ": null
    },
    {
        "nonstandard models of arithmetic": "peano axiomsnonstandard models"
    },
    {
        ", as a consequence of Gödels ": null
    },
    {
        "completeness theorem": "completeness theorem"
    },
    {
        " . That theorem shows that, when a sentence is independent of a theory, the theory will have models in which the sentence is true and models in which the sentence is false. As described earlier, the Gödel sentence of a system F is an arithmetical statement which claims that no number exists with a particular property. The incompleteness theorem shows that this claim will be independent of the system F, and the truth of the Gödel sentence follows from the fact that no standard natural number has the property in question. Any model in which the Gödel sentence is false must contain some element which satisfies the property within that model. Such a model must be nonstandard & ndash; it must contain elements that do not correspond to any standard natural number .         Gödel specifically cites ": null
    },
    {
        "Richards paradox": "richards paradox"
    },
    {
        " and the ": null
    },
    {
        "liar paradox": "liar paradox"
    },
    {
        " as semantical analogues to his syntactical incompleteness result in the introductory section of ": null
    },
    {
        "On Formally Undecidable Propositions in Principia Mathematica and Related Systems I": "on formally undecidable propositions in principia mathematica and related systems i"
    },
    {
        " . The ": null
    },
    {
        "liar paradox": "liar paradox"
    },
    {
        " is the sentence This sentence is false. An analysis of the liar sentence shows that it cannot be true , nor can it be false . A Gödel sentence G for a system F makes a similar assertion to the liar sentence, but with truth replaced by provability: G says G is not provable in the system F. The analysis of the truth and provability of G is a formalized version of the analysis of the truth of the liar sentence.     It is not possible to replace not provable with false in a Gödel sentence because the predicate Q is the ": null
    },
    {
        "Gödel number": "gödel number"
    },
    {
        " of a false formula cannot be represented as a formula of arithmetic. This result, known as ": null
    },
    {
        "Tarskis undefinability theorem": "tarskis undefinability theorem"
    },
    {
        ", was discovered independently both by Gödel, when he was working on the proof of the incompleteness theorem, and by the theorems namesake, ": null
    },
    {
        "Alfred Tarski": "alfred tarski"
    },
    {
        ".         Compared to the theorems stated in Gödels 42 paper, many contemporary statements of the incompleteness theorems are more general in two ways. These generalized statements are phrased to apply to a broader class of systems, and they are phrased to incorporate weaker consistency assumptions.     Gödel demonstrated the incompleteness of the system of  Principia Mathematica , a particular system of arithmetic, but a parallel demonstration could be given for any effective system of a certain expressiveness. Gödel commented on this fact in the introduction to his paper, but restricted the proof to one system for concreteness. In modern statements of the theorem, it is common to state the effectiveness and expressiveness conditions as hypotheses for the incompleteness theorem, so that it is not limited to any particular formal system. The terminology used to state these conditions was not yet developed in 42 when Gödel published his results.     Gödels original statement and proof of the incompleteness theorem requires the assumption that the system is not just consistent but  ω-consistent . A system is ω-consistent if it is not ω-inconsistent, and is ω-inconsistent if there is a predicate P such that for every specific natural number m the system proves ~P, and yet the system also proves that there exists a natural number n such that P. That is, the system says that a number with property P exists while denying that it has any specific value. The ω-consistency of a system implies its consistency, but consistency does not imply ω-consistency. ": null
    },
    {
        "J. Barkley Rosser": "j. barkley rosser"
    },
    {
        " strengthened the incompleteness theorem by finding a variation of the proof  that only requires the system to be consistent, rather than ω-consistent. This is mostly of technical interest, because all true formal theories of arithmetic are ω-consistent, and thus Gödels theorem as originally stated applies to them. The stronger version of the incompleteness theorem that only assumes consistency, rather than ω-consistency, is now commonly known as Gödels incompleteness theorem and as the Gödel–Rosser theorem.          For each formal system F containing basic arithmetic, it is possible to canonically define a formula Cons expressing the consistency of F. This formula expresses the property that there does not exist a natural number coding a formal derivation within the system F whose conclusion is a syntactic contradiction. The syntactic contradiction is often taken to be 42 , in which case Cons states there is no natural number that codes a derivation of 42 from the axioms of F.     Gödels second incompleteness theorem shows that, under general assumptions, this canonical consistency statement Cons will not be provable in F. The theorem first appeared as Theorem XI in Gödels 42 paper ": null
    },
    {
        "On Formally Undecidable Propositions in Principia Mathematica and Related Systems I": "on formally undecidable propositions in principia mathematica and related systems i"
    },
    {
        " . In the following statement, the term formalized system also includes an assumption that F is effectively axiomatized.     Second Incompleteness Theorem: Assume F is a consistent formalized system which contains elementary arithmetic. Then F \\not \\vdash \\text .       This theorem is stronger than the first incompleteness theorem because the statement constructed in the first incompleteness theorem does not directly express the consistency of the system. The proof of the second incompleteness theorem is obtained by formalizing the proof of the first incompleteness theorem within the system F itself.         There is a technical subtlety in the second incompleteness theorem regarding the method of expressing the consistency of F as a formula in the language of F. There are many ways to express the consistency of a system, and not all of them lead to the same result. The formula Cons from the second incompleteness theorem is a particular expression of consistency.     Other formalizations of the claim that F is consistent may be inequivalent in F, and some may even be provable. For example, first-order Peano arithmetic can prove that the largest consistent ": null
    },
    {
        "subset": "subset"
    },
    {
        " of PA is consistent. But, because PA is consistent, the largest consistent subset of PA is just PA, so in this sense PA proves that it is consistent . What PA does not prove is that the largest consistent subset of PA is, in fact, the whole of PA. .         The standard proof of the second incompleteness theorem assumes that the provability predicate Prov A  satisfies the ": null
    },
    {
        "Hilbert–Bernays provability conditions": "hilbert–bernays provability conditions"
    },
    {
        ". Letting  represent the Gödel number of a formula P, the derivability conditions say:     If F proves P, then F proves Prov A .   F proves 42; that is, F proves that if F proves P, then F proves Prov A . In other words, F proves that Prov A  implies Prov A .   F proves that if F proves that  and F proves P then F proves Q. In other words, F proves that Prov A  and Prov A  imply Prov A .     There are systems, such as Robinson arithmetic, which are strong enough to meet the assumptions of the first incompleteness theorem, but which do not prove the Hilbert & mdash;Bernays conditions. Peano arithmetic, however, is strong enough to verify these conditions, as are all theories stronger than Peano arithmetic.         Gödels second incompleteness theorem also implies that a system F 42 satisfying the technical conditions outlined above cannot prove the consistency of any system F 42 that proves the consistency of F 42 . This is because such a system F 42 can prove that if F 42 proves the consistency of F 42 , then F 42 is in fact consistent. For the claim that F 42 is consistent has form for all numbers n, n has the decidable property of not being a code for a proof of contradiction in F 42 . If F 42 were in fact inconsistent, then F 42 would prove for some n that n is the code of a contradiction in F 42 . But if F 42 also proved that F 42 is consistent , then it would itself be inconsistent. This reasoning can be formalized in F 42 to show that if F 42 is consistent, then F 42 is consistent. Since, by second incompleteness theorem, F 42 does not prove its consistency, it cannot prove the consistency of F 42 either.     This corollary of the second incompleteness theorem shows that there is no hope of proving, for example, the consistency of Peano arithmetic using any finitistic means that can be formalized in a system the consistency of which is provable in Peano arithmetic . For example, the system of ": null
    },
    {
        "primitive recursive arithmetic": "primitive recursive arithmetic"
    },
    {
        " , which is widely accepted as an accurate formalization of finitistic mathematics, is provably consistent in PA. Thus PRA cannot prove the consistency of PA. This fact is generally seen to imply that ": null
    },
    {
        "Hilberts program": "hilberts program"
    },
    {
        ", which aimed to justify the use of ideal mathematical principles in the proofs of real mathematical statements by giving a finitistic proof that the ideal principles are consistent, cannot be carried out .     The corollary also indicates the epistemological relevance of the second incompleteness theorem. It would actually provide no interesting information if a system F proved its consistency. This is because inconsistent theories prove everything, including their consistency. Thus a consistency proof of F in F would give us no clue as to whether F really is consistent; no doubts about the consistency of F would be resolved by such a consistency proof. The interest in consistency proofs lies in the possibility of proving the consistency of a system F in some system F’ that is in some sense less doubtful than F itself, for example weaker than F. For many naturally occurring theories F and F’, such as F Zermelo–Fraenkel set theory and F’ primitive recursive arithmetic, the consistency of F’ is provable in F, and thus F’ cannot prove the consistency of F by the above corollary of the second incompleteness theorem.     The second incompleteness theorem does not rule out consistency proofs altogether, only consistency proofs that can be formalized in the system that is proved consistent. For example, ": null
    },
    {
        "Gerhard Gentzen": "gerhard gentzen"
    },
    {
        " proved the consistency of Peano arithmetic in a different system that includes an axiom asserting that the ": null
    },
    {
        "ordinal": "ordinal number"
    },
    {
        " called ε 42 is ": null
    },
    {
        "wellfounded": "wellfounded"
    },
    {
        "; see ": null
    },
    {
        "Gentzens consistency proof": "gentzens consistency proof"
    },
    {
        ". Gentzens theorem spurred the development of ": null
    },
    {
        "ordinal analysis": "ordinal analysis"
    },
    {
        " in proof theory.            There are two distinct senses of the word undecidable in mathematics and computer science. The first of these is the ": null
    },
    {
        "proof-theoretic": "proof theory"
    },
    {
        " sense used in relation to Gödels theorems, that of a statement being neither provable nor refutable in a specified ": null
    },
    {
        "deductive system": "deductive system"
    },
    {
        ". The second sense, which will not be discussed here, is used in relation to ": null
    },
    {
        "computability theory": "computability theory"
    },
    {
        " and applies not to statements but to ": null
    },
    {
        "decision problem": "decision problem"
    },
    {
        "s, which are countably infinite sets of questions each requiring a yes or no answer. Such a problem is said to be undecidable if there is no ": null
    },
    {
        "computable function": "computable function"
    },
    {
        " that correctly answers every question in the problem set .     Because of the two meanings of the word undecidable, the term ": null
    },
    {
        "independent": "independence"
    },
    {
        " is sometimes used instead of undecidable for the neither provable nor refutable sense.     Undecidability of a statement in a particular deductive system does not, in and of itself, address the question of whether the ": null
    },
    {
        "truth value": "truth value"
    },
    {
        " of the statement is well-defined, or whether it can be determined by other means. Undecidability only implies that the particular deductive system being considered does not prove the truth or falsity of the statement. Whether there exist so-called absolutely undecidable statements, whose truth value can never be known or is ill-specified, is a controversial point in the ": null
    },
    {
        "philosophy of mathematics": "philosophy of mathematics"
    },
    {
        ".     The combined work of Gödel and ": null
    },
    {
        "Paul Cohen": "paul cohen"
    },
    {
        " has given two concrete examples of undecidable statements : The ": null
    },
    {
        "continuum hypothesis": "continuum hypothesis"
    },
    {
        " can neither be proved nor refuted in ": null
    },
    {
        "ZFC": "zfc"
    },
    {
        " , and the ": null
    },
    {
        "axiom of choice": "axiom of choice"
    },
    {
        " can neither be proved nor refuted in ZF . These results do not require the incompleteness theorem. Gödel proved in 42 that neither of these statements could be disproved in ZF or ZFC set theory. In the 42s, Cohen proved that neither is provable from ZF, and the continuum hypothesis cannot be proved from ZFC.     In 42 ": null
    },
    {
        "Saharon Shelah": "saharon shelah"
    },
    {
        " showed that the ": null
    },
    {
        "Whitehead problem": "whitehead problem"
    },
    {
        " in ": null
    },
    {
        "group theory": "group theory"
    },
    {
        " is undecidable, in the first sense of the term, in standard set theory.     ": null
    },
    {
        "Gregory Chaitin": "gregory chaitin"
    },
    {
        " produced undecidable statements in ": null
    },
    {
        "algorithmic information theory": "algorithmic information theory"
    },
    {
        " and proved another incompleteness theorem in that setting. ": null
    },
    {
        "Chaitins incompleteness theorem": "chaitins incompleteness theorem"
    },
    {
        " states that for any system that can represent enough arithmetic, there is an upper bound c such that no specific number can be proved in that system to have ": null
    },
    {
        "Kolmogorov complexity": "kolmogorov complexity"
    },
    {
        " greater than c. While Gödels theorem is related to the ": null
    },
    {
        "liar paradox": "liar paradox"
    },
    {
        ", Chaitins result is related to ": null
    },
    {
        "Berrys paradox": "berrys paradox"
    },
    {
        ".         These are natural mathematical equivalents of the Gödel true but undecidable sentence. They can be proved in a larger system which is generally accepted as a valid form of reasoning, but are undecidable in a more limited system such as Peano Arithmetic.     In 42 ": null
    },
    {
        "Paris": "jeff paris"
    },
    {
        " and ": null
    },
    {
        "Harrington": "leo harrington"
    },
    {
        " proved that the ": null
    },
    {
        "Paris & ndash;Harrington principle": "paris–harrington theorem"
    },
    {
        ", a version of the infinite ": null
    },
    {
        "Ramsey theorem": "ramsey theorem"
    },
    {
        ", is undecidable in ": null
    },
    {
        "Peano arithmetic": "peano arithmetic"
    },
    {
        ", but can be proved in the stronger system of ": null
    },
    {
        "second-order arithmetic": "second-order arithmetic"
    },
    {
        ". Kirby and Paris later showed that ": null
    },
    {
        "Goodsteins theorem": "goodsteins theorem"
    },
    {
        ", a statement about sequences of natural numbers somewhat simpler than the Paris & ndash;Harrington principle, is also undecidable in Peano arithmetic.     ": null
    },
    {
        "Kruskals tree theorem": "kruskals tree theorem"
    },
    {
        ", which has applications in computer science, is also undecidable from Peano arithmetic but provable in set theory. In fact Kruskals tree theorem is undecidable in a much stronger system codifying the principles acceptable based on a philosophy of mathematics called ": null
    },
    {
        "predicativism": "impredicativity"
    },
    {
        ". The related but more general ": null
    },
    {
        "graph minor theorem": "graph minor theorem"
    },
    {
        " has consequences for ": null
    },
    {
        "computational complexity theory": "computational complexity theory"
    },
    {
        ".            The incompleteness theorem is closely related to several results about ": null
    },
    {
        "undecidable set": "undecidable set"
    },
    {
        "s in ": null
    },
    {
        "recursion theory": "recursion theory"
    },
    {
        ".     ": null
    },
    {
        "Stephen Cole Kleene": "stephen cole kleene"
    },
    {
        " presented a proof of Gödels incompleteness theorem using basic results of computability theory. One such result shows that the ": null
    },
    {
        "halting problem": "halting problem"
    },
    {
        " is undecidable: there is no computer program that can correctly determine, given any program P as input, whether P eventually halts when run with a particular given input. Kleene showed that the existence of a complete effective system of arithmetic with certain consistency properties would force the halting problem to be decidable, a contradiction. This method of proof has also been presented by Shoenfield ; Charlesworth ; and Hopcroft and Ullman .     Franzén explains how ": null
    },
    {
        "Matiyasevichs solution": "matiyasevichs theorem"
    },
    {
        " to ": null
    },
    {
        "Hilberts 42th problem": "hilberts 10th problem"
    },
    {
        " can be used to obtain a proof to Gödels first incompleteness theorem. ": null
    },
    {
        "Matiyasevich": "yuri matiyasevich"
    },
    {
        " proved that there is no algorithm that, given a multivariate polynomial p with integer coefficients, determines whether there is an integer solution to the equation p 42 Because polynomials with integer coefficients, and integers themselves, are directly expressible in the language of arithmetic, if a multivariate integer polynomial equation p 42 does have a solution in the integers then any sufficiently strong system of arithmetic T will prove this. Moreover, if the system T is ω-consistent, then it will never prove that a particular polynomial equation has a solution when in fact there is no solution in the integers. Thus, if T were complete and ω-consistent, it would be possible to determine algorithmically whether a polynomial equation has a solution by merely enumerating proofs of T until either p has a solution or p has no solution is found, in contradiction to Matiyasevichs theorem. Moreover, for each consistent effectively generated system T, it is possible to effectively generate a multivariate polynomial p over the integers such that the equation p 42 has no solutions over the integers, but the lack of solutions cannot be proved in T .     Smorynski shows how the existence of ": null
    },
    {
        "recursively inseparable sets": "recursively inseparable sets"
    },
    {
        " can be used to prove the first incompleteness theorem. This proof is often extended to show that systems such as Peano arithmetic are ": null
    },
    {
        "essentially undecidable": "essentially undecidable"
    },
    {
        " .     ": null
    },
    {
        "Chaitins incompleteness theorem": "chaitins incompleteness theorem"
    },
    {
        " gives a different method of producing independent sentences, based on ": null
    },
    {
        "Kolmogorov complexity": "kolmogorov complexity"
    },
    {
        ". Like the proof presented by Kleene that was mentioned above, Chaitins theorem only applies to theories with the additional property that all their axioms are true in the standard model of the natural numbers. Gödels incompleteness theorem is distinguished by its applicability to consistent theories that nonetheless include statements that are false in the standard model; these theories are known as ": null
    },
    {
        "ω-inconsistent": "ω-consistent theory"
    },
    {
        ".              The ": null
    },
    {
        "proof by contradiction": "proof by contradiction"
    },
    {
        " has three essential parts. To begin, choose a formal system that meets the proposed criteria:     Statements in the system can be represented by natural numbers . The significance of this is that properties of statements—such as their truth and falsehood—will be equivalent to determining whether their Gödel numbers have certain properties, and that properties of the statements can therefore be demonstrated by examining their Gödel numbers. This part culminates in the construction of a formula expressing the idea that  statement S is provable in the system  .   In the formal system it is possible to construct a number whose matching statement, when interpreted, is ": null
    },
    {
        "self-referential": "self reference"
    },
    {
        " and essentially says that it is unprovable. This is done using a technique called ": null
    },
    {
        "diagonalization": "diagonal lemma"
    },
    {
        " .   Within the formal system this statement permits a demonstration that it is neither provable nor disprovable in the system, and therefore the system cannot in fact be ω-consistent. Hence the original assumption that the proposed system met the criteria is false.         The main problem in fleshing out the proof described above is that it seems at first that to construct a statement p that is equivalent to p cannot be proved , p would somehow have to contain a reference to p, which could easily give rise to an infinite regress. Gödels ingenious technique is to show that statements can be matched with numbers  in such a way that  proving a statement  can be replaced with  testing whether a number has a given property . This allows a self-referential formula to be constructed in a way that avoids any infinite regress of definitions. The same technique was later used by ": null
    },
    {
        "Alan Turing": "alan turing"
    },
    {
        " in his work on the ": null
    },
    {
        "Entscheidungsproblem": "entscheidungsproblem"
    },
    {
        ".     In simple terms, a method can be devised so that every formula or statement that can be formulated in the system gets a unique number, called its ": null
    },
    {
        "Gödel number": "gödel number"
    },
    {
        ", in such a way that it is possible to mechanically convert back and forth between formulas and Gödel numbers. The numbers involved might be very long indeed , but this is not a barrier; all that matters is that such numbers can be constructed. A simple example is the way in which English is stored as a sequence of numbers in computers using ": null
    },
    {
        "ASCII": "ascii"
    },
    {
        " or ": null
    },
    {
        "Unicode": "unicode"
    },
    {
        ":   : The word  HELLO  is represented by 4242424242 using decimal ": null
    },
    {
        "ASCII": "ascii"
    },
    {
        ", i.e. the number 42   : The logical statement  xy /tt  ref name StrangeLoop /  ref name StrangeLoop /  !-- Zermelo criticized the incompleteness theorems for their reliance on finitary proofs. In 42 he presented a system of infinitely-long proofs, which he believed could be used to overcome the limitations shown by the incompleteness theorems.-- ": null
    }
]