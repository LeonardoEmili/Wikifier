[
    {
        "In a ": null
    },
    {
        "relational database": "relational database"
    },
    {
        ", a weak entity is an entity that cannot be uniquely identified by its attributes alone; therefore, it must use a ": null
    },
    {
        "foreign key": "foreign key"
    },
    {
        " in conjunction with its attributes to create a ": null
    },
    {
        "primary key": "primary key"
    },
    {
        ". The foreign key is typically a primary key of an entity it is related to.       In ": null
    },
    {
        "entity relationship diagrams ": "entity relationship diagram"
    },
    {
        ", a weak entity set is indicated by a bold rectangle connected by a bold type arrow to a bold diamond . This type of relationship is called an identifying relationship and in ": null
    },
    {
        "IDEF42X": "idef1x"
    },
    {
        " notation it is represented by an oval entity rather than a square entity for base tables. An identifying relationship is one where the primary key is populated to the child weak entity as a primary key in that entity.     In general a weak entity does not have any items in its primary key other than its inherited primary key and a sequence number. There are two types of weak entities: ": null
    },
    {
        "associative entities": "associative entities"
    },
    {
        " and ": null
    },
    {
        "subtype entities": "subtype entities"
    },
    {
        ". The latter represents a crucial type of ": null
    },
    {
        "normalization": "database normalization"
    },
    {
        ", where the ": null
    },
    {
        "super-type entity": "super-type entity"
    },
    {
        " inherits its attributes to ": null
    },
    {
        "subtype entities": "subtype entities"
    },
    {
        " based on the value of the ": null
    },
    {
        "discriminator": "discriminator"
    },
    {
        ".     In ": null
    },
    {
        "IDEF42X": "idef1x"
    },
    {
        ", a government standard for capturing requirements, possible ": null
    },
    {
        "sub-type relationships": "sub-type relationships"
    },
    {
        " are:   Complete subtype relationship, when all categories are known.   Incomplete subtype relationship, when all categories may not be known.     A classic example of a weak entity without a sub-type relationship would be the header/detail records in many real world situations such as claims, orders and invoices, where the header captures information common across all forms and the detail captures information specific to individual items.     The standard example of a complete subtype relationship is the party entity. Given the discriminator PARTY TYPE the two subtype entities are PERSON, which contains individual-specific information such as first and last name and date of birth, and ORGANIZATION, which would contain such attributes as the legal name, and organizational hierarchies such as cost centers.     When sub-type relationships are rendered in a database, the super-type becomes what is referred to as a base table. The sub-types are considered derived tables, which correspond to weak entities. ": null
    },
    {
        "Referential integrity": "referential integrity"
    },
    {
        " is enforced via cascading updates and deletes.       Consider a database that records customer orders, where an order is for one or more of the items that the enterprise sells. The database would contain a table identifying customers by a customer number ; another identifying the products that can be sold by a product number ; and it would contain a pair of tables describing orders.          One of the tables could be called Orders and it would have an order number  to identify this order uniquely, and would contain a customer number  to identify who the products are being sold to, plus other information such as the date and time when the order was placed, how it will be paid for, where it is to be shipped to, and so on.     The other table could be called OrderItem; it would be identified by a compound key consisting of both the order number  and an item line number; with other non-primary key attributes such as the product number  that was ordered, the quantity, the price, any discount, any special options, and so on. There may be zero, one or many OrderItem entries corresponding to an Order entry, but no OrderItem entry can exist unless the corresponding Order entry exists.     The OrderItem table stores weak entities": null
    }
]