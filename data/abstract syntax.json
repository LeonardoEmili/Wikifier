[
    {
        "In ": null
    },
    {
        "computer science": "computer science"
    },
    {
        ", the abstract syntax of data is its structure described as a ": null
    },
    {
        "data type": "data type"
    },
    {
        " , independent of any particular representation or encoding. This is particularly used in the representation of text in ": null
    },
    {
        "computer language": "computer language"
    },
    {
        "s, which are generally stored in a tree structure as an ": null
    },
    {
        "abstract syntax tree": "abstract syntax tree"
    },
    {
        ". Abstract syntax, which only consists of the structure of data, is contrasted with ": null
    },
    {
        "concrete syntax": "concrete syntax"
    },
    {
        ", which also includes information about the representation. For example, concrete syntax includes features like parentheses or commas which are not included in the abstract syntax, as they are implicit in the structure.     Abstract syntaxes are classified as first-order abstract syntax , if the structure is abstract but names are still concrete , and  higher-order abstract syntax , if the names themselves are abstract.       To be implemented either for computation or communications, a mapping from the abstract syntax to specific machine representations and encodings must be defined; these may be called the ": null
    },
    {
        "concrete syntax": "concrete syntax"
    },
    {
        " or the transfer syntax .     A ": null
    },
    {
        "compiler": "compiler"
    },
    {
        "s internal representation of a program will typically be specified by an abstract syntax in terms of categories such as statement , expression and identifier . This is independent of the source syntax  of the language being compiled . A ": null
    },
    {
        "parse tree": "parse tree"
    },
    {
        " is similar to an ": null
    },
    {
        "abstract syntax tree": "abstract syntax tree"
    },
    {
        " but it will typically also contain features such as parentheses which are syntactically significant but which are implicit in the structure of the abstract syntax tree.     ": null
    },
    {
        "Algebraic data type": "algebraic data type"
    }
]