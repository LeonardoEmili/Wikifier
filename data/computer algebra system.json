[
    {
        "A computer algebra system  is any ": null
    },
    {
        "mathematical software": "mathematical software"
    },
    {
        " with the ability to manipulate ": null
    },
    {
        "mathematical expressions": "mathematical expressions"
    },
    {
        " in a way similar to the traditional manual computations of ": null
    },
    {
        "mathematician": "mathematician"
    },
    {
        "s and ": null
    },
    {
        "scientist": "scientist"
    },
    {
        "s. The development of the computer algebra systems in the second half of the 42th century is part of the discipline of ": null
    },
    {
        "computer algebra": "computer algebra"
    },
    {
        " or ": null
    },
    {
        "symbolic computation": "symbolic computation"
    },
    {
        " , which has spurred work in ": null
    },
    {
        "algorithm": "algorithm"
    },
    {
        "s over mathematical objects such as ": null
    },
    {
        "polynomial": "polynomial"
    },
    {
        "s.     Computer algebra systems may be divided into two classes: specialized and general-purpose. The specialized ones are devoted to a specific part of mathematics, such as ": null
    },
    {
        "number theory": "number theory"
    },
    {
        ", ": null
    },
    {
        "group theory": "group theory"
    },
    {
        ", or teaching of ": null
    },
    {
        "elementary mathematics": "elementary mathematics"
    },
    {
        ".     General-purpose computer algebra systems aim to be useful to a user working in any scientific field that requires manipulation of mathematical expressions. To be useful, a general-purpose computer algebra system must include various features such as:   a ": null
    },
    {
        "user interface": "user interface"
    },
    {
        " allowing to enter and display mathematical formulas,   a ": null
    },
    {
        "programming language": "programming language"
    },
    {
        " and an ": null
    },
    {
        "interpreter": "interpreter"
    },
    {
        " ,   a ": null
    },
    {
        "simplifier": "symbolic computationsimplification"
    },
    {
        ", which is a ": null
    },
    {
        "rewrite system": "rewrite system"
    },
    {
        " for simplifying mathematics formulas,   a ": null
    },
    {
        "memory manager": "memory management"
    },
    {
        ", including a ": null
    },
    {
        "garbage collector": "garbage collector"
    },
    {
        ", needed by the huge size of the intermediate data, which may appear during a computation,   an ": null
    },
    {
        "arbitrary-precision arithmetic": "arbitrary-precision arithmetic"
    },
    {
        ", needed by the huge size of the integers that may occur,   a large library of mathematical ": null
    },
    {
        "algorithm": "algorithm"
    },
    {
        "s and ": null
    },
    {
        "special functions": "special functions"
    },
    {
        ".     The library must not only provide for the needs of the users, but also the needs of the simplifier. For example, the computation of ": null
    },
    {
        "polynomial greatest common divisor": "polynomial greatest common divisor"
    },
    {
        "s is systematically used for the simplification of expressions involving fractions.     This large amount of required computer capabilities explains the small number of general-purpose computer algebra systems. The main ones are ": null
    },
    {
        "Axiom": "axiom"
    },
    {
        ", ": null
    },
    {
        "Maxima": "maxima"
    },
    {
        ", ": null
    },
    {
        "Magma": "magma"
    },
    {
        ", ": null
    },
    {
        "Maple": "maple"
    },
    {
        ", ": null
    },
    {
        "Mathematica": "mathematica"
    },
    {
        " and ": null
    },
    {
        "SageMath": "sagemath"
    },
    {
        ".          Computer algebra systems began to appear in the 42s and evolved out of two quite different sourcesâ€”the requirements of theoretical physicists and research into ": null
    },
    {
        "artificial intelligence": "artificial intelligence"
    },
    {
        ".     A prime example for the first development was the pioneering work conducted by the later Nobel Prize laureate in physics ": null
    },
    {
        "Martinus Veltman": "martinus veltman"
    },
    {
        ", who designed a program for symbolic mathematics, especially high-energy physics, called ": null
    },
    {
        "Schoonschip": "schoonschip"
    },
    {
        " in 42 Another early system was ": null
    },
    {
        "FORMAC": "formac"
    },
    {
        ".     Using ": null
    },
    {
        "Lisp": "lisp"
    },
    {
        " as the programming basis, ": null
    },
    {
        "Carl Engelman": "carl engelman"
    },
    {
        " created ": null
    },
    {
        "MATHLAB": "mathlab"
    },
    {
        " in 42 at ": null
    },
    {
        "MITRE": "mitre"
    },
    {
        " within an artificial-intelligence research environment. Later MATHLAB was made available to users on PDP42 and PDP42 systems running TOPS42 or TENEX in universities. Today it can still be used on ": null
    },
    {
        "SIMH": "simh"
    },
    {
        " emulations of the PDP42 MATHLAB  should not be confused with ": null
    },
    {
        "MATLAB": "matlab"
    },
    {
        " , which is a system for numerical computation built 42 years later at the ": null
    },
    {
        "University of New Mexico": "university of new mexico"
    },
    {
        ".     The first popular computer algebra systems were ": null
    },
    {
        "muMATH": "mumath"
    },
    {
        ", ": null
    },
    {
        "Reduce": "reduce computer algebra system"
    },
    {
        ", ": null
    },
    {
        "Derive": "derive"
    },
    {
        " , and ": null
    },
    {
        "Macsyma": "macsyma"
    },
    {
        "; a popular ": null
    },
    {
        "copyleft": "copyleft"
    },
    {
        " version of Macsyma called ": null
    },
    {
        "Maxima": "maxima"
    },
    {
        " is actively being maintained. ": null
    },
    {
        "Reduce": "reduce"
    },
    {
        " became free software in 42  As of today, the most popular commercial systems are ": null
    },
    {
        "Mathematica": "mathematica"
    },
    {
        "  , SIAM History of Numerical Analysis and Computing, March 42 42 and ": null
    },
    {
        "Maple": "maple"
    },
    {
        ", which are commonly used by research mathematicians, scientists, and engineers. Freely available alternatives include ": null
    },
    {
        "SageMath": "sagemath"
    },
    {
        " .     In 42 ": null
    },
    {
        "Hewlett-Packard": "hewlett-packard"
    },
    {
        " introduced the first hand-held calculator CAS with the ": null
    },
    {
        "HP42 series": "hp-28 series"
    },
    {
        ", and it was possible, for the first time in a calculator,  to arrange algebraic expressions, differentiation, limited symbolic integration, Taylor series construction and a solver for algebraic equations. In 42 the independently developed CAS ": null
    },
    {
        "Erable": "erable"
    },
    {
        " for the ": null
    },
    {
        "HP  42 series": "hp & nbsp;48 series"
    },
    {
        " became an officially integrated part of the firmware of the emerging ": null
    },
    {
        "HP  42/42 series": "hp & nbsp;49/50 series"
    },
    {
        ", and a year later into the ": null
    },
    {
        "HP 42 series": "hp 40 series"
    },
    {
        " as well, whereas the ": null
    },
    {
        "HP Prime": "hp prime"
    },
    {
        " adopted the ": null
    },
    {
        "Xcas": "xcas"
    },
    {
        " system in 42     The ": null
    },
    {
        "Texas Instruments": "texas instruments"
    },
    {
        " company in 42 released the ": null
    },
    {
        "TI42": "ti-92"
    },
    {
        " calculator with a CAS based on the software ": null
    },
    {
        "Derive": "derive computer algebra system"
    },
    {
        "; the ": null
    },
    {
        "TI-Nspire series": "ti-nspire series"
    },
    {
        " replaced Derive in 42 The ": null
    },
    {
        "TI42 series": "ti-89 series"
    },
    {
        ", first released in 42 also contains a CAS. ": null
    },
    {
        "Casio": "casio"
    },
    {
        " released their first CAS calculator with the ": null
    },
    {
        "CFX42G": "cfx-9970g"
    },
    {
        " and succeeded it with the ": null
    },
    {
        "Algebra FX Series": "casio algebra fx series"
    },
    {
        " in 4242 and the current ": null
    },
    {
        "ClassPad Series": "casio classpad 300"
    },
    {
        ".       The symbolic manipulations supported typically include:   simplification to a smaller expression or some ": null
    },
    {
        "standard form": "canonical form"
    },
    {
        ", including automatic simplification with assumptions and simplification with constraints   ": null
    },
    {
        "substitution": "substitution"
    },
    {
        " of symbols or numeric values for certain expressions   change of form of expressions: expanding products and powers, partial and full ": null
    },
    {
        "factorization": "factorization"
    },
    {
        ", rewriting as ": null
    },
    {
        "partial fraction": "partial fraction"
    },
    {
        "s, ": null
    },
    {
        "constraint satisfaction": "constraint satisfaction"
    },
    {
        ", rewriting ": null
    },
    {
        "trigonometric functions": "trigonometric functions"
    },
    {
        " as exponentials, transforming logic expressions, etc.   ": null
    },
    {
        "partial": "partial differentiation"
    },
    {
        " and ": null
    },
    {
        "total differentiation": "total differentiation"
    },
    {
        " indefinite": "antidifferentiation"
    },
    {
        " and ": null
    },
    {
        "definite integration": "integral"
    },
    {
        " , including multidimensional integrals   symbolic constrained and unconstrained global optimization   ": null
    },
    {
        "solution": "closed-form solution"
    },
    {
        " of linear and some non-linear equations over various domains   solution of some ": null
    },
    {
        "differential": "differential equation"
    },
    {
        " and ": null
    },
    {
        "difference equation": "difference equation"
    },
    {
        "s   taking some ": null
    },
    {
        "limit": "limit of a function"
    },
    {
        "s   integral transforms   ": null
    },
    {
        "series": "mathematical series"
    },
    {
        " operations such as expansion, summation and products   matrix operations including ": null
    },
    {
        "products": "direct product"
    },
    {
        ", ": null
    },
    {
        "inverses": "matrix inversion"
    },
    {
        ", etc.   ": null
    },
    {
        "statistical computation": "list of statistical packages"
    },
    {
        " theorem proving": "theorem proving"
    },
    {
        " and ": null
    },
    {
        "verification": "proof verification"
    },
    {
        " which is very useful in the area of ": null
    },
    {
        "experimental mathematics": "experimental mathematics"
    },
    {
        " optimized code generation": "automatic programmingimplementations"
    },
    {
        "     In the above, the word some indicates that the operation cannot always be performed.       Many also include:   a ": null
    },
    {
        "programming language": "programming language"
    },
    {
        ", allowing users to implement their own algorithms   ": null
    },
    {
        "arbitrary-precision": "arbitrary-precision"
    },
    {
        " numeric operations   exact integer arithmetic and number theory functionality   ": null
    },
    {
        "Editing of mathematical expressions": "formula editor"
    },
    {
        " in two-dimensional form   plotting ": null
    },
    {
        "graphs and parametric plots": "graph of a function"
    },
    {
        " of functions in two and three dimensions, and animating them   drawing charts and diagrams   ": null
    },
    {
        "APIs": "application programming interface"
    },
    {
        " for linking it on an external program such as a database, or using in a programming language to use the computer algebra system   ": null
    },
    {
        "string manipulation": "string manipulation"
    },
    {
        " such as ": null
    },
    {
        "matching": "string matching"
    },
    {
        " and ": null
    },
    {
        "searching": "string searching"
    },
    {
        " applied mathematics": "applied mathematics"
    },
    {
        " such as physics, ": null
    },
    {
        "bioinformatics": "bioinformatics"
    },
    {
        ", ": null
    },
    {
        "computational chemistry": "computational chemistry"
    },
    {
        " and packages for ": null
    },
    {
        "physical computation": "computational physics"
    },
    {
        "     Some include:   ": null
    },
    {
        "graphic": "computer graphics"
    },
    {
        " production and editing such as ": null
    },
    {
        "computer-generated imagery": "computer-generated imagery"
    },
    {
        " and ": null
    },
    {
        "signal processing": "signal processing"
    },
    {
        " as ": null
    },
    {
        "image processing": "image processing"
    },
    {
        " sound synthesis": "sound synthesis"
    },
    {
        "     Some computer algebra systems focus on specialized disciplines; these are typically developed in academia and are free. They can be inefficient for numeric operations as compared to ": null
    },
    {
        "numeric systems": "comparison of numerical analysis software"
    },
    {
        ".       The expressions manipulated by the CAS typically include ": null
    },
    {
        "polynomial": "polynomial"
    },
    {
        "s in multiple variables; standard functions of expressions ; various special functions ; arbitrary functions of expressions; optimization; derivatives, integrals, simplifications, sums, and products of expressions; truncated ": null
    },
    {
        "series": "series"
    },
    {
        " with expressions as coefficients, ": null
    },
    {
        "matrices": "matrix"
    },
    {
        " of expressions, and so on. Numeric domains supported typically include ": null
    },
    {
        "floating-point representation of real numbers": "floating-point arithmetic"
    },
    {
        ", ": null
    },
    {
        "integer": "integer"
    },
    {
        "s , ": null
    },
    {
        "complex": "complex number"
    },
    {
        " , ": null
    },
    {
        "interval representation of reals": "interval arithmetic"
    },
    {
        ", ": null
    },
    {
        "rational number": "rational number"
    },
    {
        " and ": null
    },
    {
        "algebraic number": "algebraic number"
    },
    {
        "s.       There have been many advocates for increasing the use of computer algebra systems in primary and secondary-school classrooms. The primary reason for such advocacy is that computer algebra systems represent real-world math more than do paper-and-pencil or hand calculator based mathematics.    This push for increasing computer usage in mathematics classrooms has been supported by some boards of education. It has even been mandated in the curriculum of some regions.      Computer algebra systems have been extensively used in higher education.   Many universities offer either specific courses on developing their use, or they implicitly expect students to use them for their course work. The companies that develop computer algebra systems have pushed to increase their prevalence among university and college programs.       CAS-equipped calculators are not permitted on the ": null
    },
    {
        "ACT": "act"
    },
    {
        ", the ": null
    },
    {
        "PLAN": "plan"
    },
    {
        ", and in some classrooms   though it may be permitted on all of ": null
    },
    {
        "College Board": "college board"
    },
    {
        "s calculator-permitted tests, including the ": null
    },
    {
        "SAT": "sat"
    },
    {
        ", some ": null
    },
    {
        "SAT Subject Tests": "sat subject tests"
    },
    {
        " and the ": null
    },
    {
        "AP": "advanced placement program"
    },
    {
        " Calculus": "ap calculus"
    },
    {
        ", ": null
    },
    {
        "Chemistry": "ap chemistry"
    },
    {
        ", ": null
    },
    {
        "Physics": "ap physics"
    },
    {
        ", and ": null
    },
    {
        "Statistics": "ap statistics"
    },
    {
        " exams.       ": null
    },
    {
        "Knuthâ€“Bendix completion algorithm": "knuthâ€“bendix completion algorithm"
    },
    {
        "   Root-finding algorithm": "root-finding algorithm"
    },
    {
        "s    ": null
    },
    {
        "Symbolic integration": "symbolic integration"
    },
    {
        " via e.g. ": null
    },
    {
        "Risch algorithm": "risch algorithm"
    },
    {
        " or ": null
    },
    {
        "Rischâ€“Norman algorithm": "rischâ€“norman algorithm"
    },
    {
        " Hypergeometric summation": "hypergeometric summation"
    },
    {
        " via e.g. ": null
    },
    {
        "Gospers algorithm": "gospers algorithm"
    },
    {
        " Limit computation": "limit"
    },
    {
        " via e.g. Gruntzs algorithm   ": null
    },
    {
        "Polynomial factorization": "polynomial factorization"
    },
    {
        " via e.g., over finite fields,  ": null
    },
    {
        "Berlekamps algorithm": "berlekamps algorithm"
    },
    {
        " or ": null
    },
    {
        "Cantorâ€“Zassenhaus algorithm": "cantorâ€“zassenhaus algorithm"
    },
    {
        ".   ": null
    },
    {
        "Greatest common divisor": "greatest common divisor"
    },
    {
        " via e.g. ": null
    },
    {
        "Euclidean algorithm": "euclidean algorithm"
    },
    {
        " Gaussian elimination": "gaussian elimination"
    },
    {
        "    GrÃ¶bner basis": "grÃ¶bner basis"
    },
    {
        " via e.g. ": null
    },
    {
        "Buchbergers algorithm": "buchbergers algorithm"
    },
    {
        "; generalization of Euclidean algorithm and Gaussian elimination   ": null
    },
    {
        "PadÃ© approximant": "padÃ© approximant"
    },
    {
        " Schwartzâ€“Zippel lemma": "schwartzâ€“zippel lemma"
    },
    {
        " and testing polynomial identities   ": null
    },
    {
        "Chinese remainder theorem": "chinese remainder theorem"
    },
    {
        " Diophantine equation": "diophantine equation"
    },
    {
        "s   ": null
    },
    {
        "Quantifier elimination": "quantifier elimination"
    },
    {
        " over real numbers via e.g. Tarskis method/": null
    },
    {
        "Cylindrical algebraic decomposition": "cylindrical algebraic decomposition"
    },
    {
        " Landaus algorithm": "landaus algorithm"
    },
    {
        " elementary function": "elementary function"
    },
    {
        "s and ": null
    },
    {
        "special functions": "special functions"
    },
    {
        ".    ": null
    },
    {
        "Cylindrical algebraic decomposition": "cylindrical algebraic decomposition"
    }
]