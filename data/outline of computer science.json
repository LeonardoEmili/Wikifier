[
    {
        " Computer science   is the study of the theoretical foundations of ": null
    },
    {
        "information": "information"
    },
    {
        " and ": null
    },
    {
        "computation": "computation"
    },
    {
        " and their implementation and application in ": null
    },
    {
        "computer": "computer"
    },
    {
        " systems. One well known subject classification system for computer science is the ": null
    },
    {
        "ACM Computing Classification System": "acm computing classification system"
    },
    {
        " devised by the ": null
    },
    {
        "Association for Computing Machinery": "association for computing machinery"
    },
    {
        ".            Computer science can be described as all of the following:     ": null
    },
    {
        "Academic discipline": "academic discipline"
    },
    {
        " Science": "science"
    },
    {
        " Applied science": "applied science"
    },
    {
        " Coding theory": "coding theory"
    },
    {
        " – Useful in networking and other areas where computers communicate with each other.   ": null
    },
    {
        "Game theory": "game theory"
    },
    {
        " – Useful in artificial intelligence and ": null
    },
    {
        "cybernetics": "cybernetics"
    },
    {
        ".   ": null
    },
    {
        "Discrete Mathematics": "discrete mathematics"
    },
    {
        " Graph theory": "graph theory"
    },
    {
        " – Foundations for data structures and searching algorithms.   ": null
    },
    {
        "Mathematical logic": "mathematical logic"
    },
    {
        " – ": null
    },
    {
        "Boolean logic": "boolean logic"
    },
    {
        " and other ways of ": null
    },
    {
        "modeling": "mathematical model"
    },
    {
        " logical queries; the uses and limitations of formal proof methods   ": null
    },
    {
        "Number theory": "number theory"
    },
    {
        " – Theory of the ": null
    },
    {
        "integer": "integer"
    },
    {
        "s. Used in ": null
    },
    {
        "cryptography": "cryptography"
    },
    {
        " as well as a test domain in ": null
    },
    {
        "artificial intelligence": "artificial intelligence"
    },
    {
        ".         ": null
    },
    {
        "Algorithms": "algorithms"
    },
    {
        " – Sequential and parallel computational procedures for solving a wide range of problems.   ": null
    },
    {
        "Data structure": "data structure"
    },
    {
        "s – The organization and manipulation of data.         ": null
    },
    {
        "Outline of artificial intelligence": "outline of artificial intelligence"
    },
    {
        " Artificial intelligence": "artificial intelligence"
    },
    {
        " – The implementation and study of systems that exhibit an autonomous intelligence or behavior of their own.   ": null
    },
    {
        "Automated reasoning": "automated reasoning"
    },
    {
        " – Solving engines, such as used in ": null
    },
    {
        "Prolog": "prolog"
    },
    {
        ", which produce steps to a result given a query on a fact and rule database, and ": null
    },
    {
        "automated theorem provers": "automated theorem proving"
    },
    {
        " that aim to prove ": null
    },
    {
        "mathematical theorem": "mathematical theorem"
    },
    {
        "s with some assistance from a programmer.   ": null
    },
    {
        "Computer vision": "computer vision"
    },
    {
        " – Algorithms for identifying three-dimensional objects from a two-dimensional picture.   ": null
    },
    {
        "Soft computing": "soft computing"
    },
    {
        ", the use of inexact solutions for otherwise extremely difficult problems:   ": null
    },
    {
        "Machine learning": "machine learning"
    },
    {
        " - Automated creation of a set of rules and axioms based on input.   ": null
    },
    {
        "Evolutionary computing": "evolutionary computing"
    },
    {
        " - Biologically inspired algorithms.   ": null
    },
    {
        "Natural language processing": "natural language processing"
    },
    {
        " - Building systems and algorithms that analyze, understand, and generate natural languages.   ": null
    },
    {
        "Robotics": "robotics"
    },
    {
        " – Algorithms for controlling the behaviour of robots.         ": null
    },
    {
        "Networking": "computer networking"
    },
    {
        " – Algorithms and protocols for reliably communicating data across different shared or dedicated media, often including ": null
    },
    {
        "error correction": "error correction"
    },
    {
        ".   ": null
    },
    {
        "Computer security": "computer security"
    },
    {
        " – Practical aspects of securing computer systems and computer networks.   ": null
    },
    {
        "Cryptography": "cryptography"
    },
    {
        " – Applies results from complexity, probability, algebra and number theory to invent and ": null
    },
    {
        "break codes": "cryptoanalysis"
    },
    {
        ", and analyze the security of ": null
    },
    {
        "cryptographic protocols": "cryptographic protocols"
    },
    {
        ".         ": null
    },
    {
        "Computer architecture": "computer architecture"
    },
    {
        " – The design, organization, optimization and verification of a computer system, mostly about ": null
    },
    {
        "CPU": "cpu"
    },
    {
        "s and ": null
    },
    {
        "Memory": "memory"
    },
    {
        " subsystem .   ": null
    },
    {
        "Operating system": "operating system"
    },
    {
        "s – Systems for managing computer programs and providing the basis of a usable system.         ": null
    },
    {
        "Computer graphics": "computer graphics"
    },
    {
        " – Algorithms both for generating visual images synthetically, and for integrating or altering visual and spatial information sampled from the real world.   ": null
    },
    {
        "Image processing": "image processing"
    },
    {
        " – Determining information from an image through computation.   ": null
    },
    {
        "Information visualization": "information visualization"
    },
    {
        " – Methods for representing and displaying abstract data to facilitate human interaction for exploration and understanding.         ": null
    },
    {
        "Parallel computing": "parallel computing"
    },
    {
        " - The theory and practice of simultaneous computation; data safety in any multitasking or multithreaded environment.   ": null
    },
    {
        "Concurrency ": "concurrency"
    },
    {
        " – Computing using multiple concurrent threads of execution, devising algorithms for solving problems on multiple processors to achieve maximal speed-up compared to sequential execution.   ": null
    },
    {
        "Distributed computing": "distributed computing"
    },
    {
        " – Computing using multiple computing devices over a network to accomplish a common objective or task and thereby reducing the latency involved in single processor contributions for any task.         ": null
    },
    {
        "Relational databases": "relational databases"
    },
    {
        " – the ": null
    },
    {
        "set theoretic": "set theory"
    },
    {
        " and algorithmic foundation of databases.   ": null
    },
    {
        "Structured Storage": "structured storage"
    },
    {
        " - non-relational databases such as ": null
    },
    {
        "NoSQL": "nosql"
    },
    {
        " databases.   ": null
    },
    {
        "Data mining": "data mining"
    },
    {
        " – Study of algorithms for searching and processing information in documents and databases; closely related to ": null
    },
    {
        "information retrieval": "information retrieval"
    },
    {
        ".         ": null
    },
    {
        "Compiler theory": "compiler theory"
    },
    {
        " – Theory of ": null
    },
    {
        "compiler": "compiler"
    },
    {
        " design, based on ": null
    },
    {
        "Automata theory": "automata theory"
    },
    {
        ".   ": null
    },
    {
        "Programming language pragmatics": "programming language"
    },
    {
        " – Taxonomy of programming languages, their strength and weaknesses. Various ": null
    },
    {
        "programming paradigm": "programming paradigm"
    },
    {
        "s, such as ": null
    },
    {
        "object-oriented programming": "object-oriented programming"
    },
    {
        ".   ": null
    },
    {
        "Programming language theory": "programming language theory"
    },
    {
        " Formal semantics": "formal semantics of programming languages"
    },
    {
        " – rigorous mathematical study of the meaning of programs.   ": null
    },
    {
        "Type theory": "type theory"
    },
    {
        " – Formal analysis of the types of data, and the use of these types to understand properties of programs — especially program safety.       ": null
    },
    {
        "Computational science": "computational science"
    },
    {
        " & ndash; constructing ": null
    },
    {
        "mathematical model": "scientific modeling"
    },
    {
        "s and ": null
    },
    {
        "quantitative analysis": "numerical analysis"
    },
    {
        " techniques and using computers to analyze and solve ": null
    },
    {
        "scientific": "scientific"
    },
    {
        " problems.   ": null
    },
    {
        "Numerical analysis": "numerical analysis"
    },
    {
        " – Approximate numerical solution of mathematical problems such as ": null
    },
    {
        "root-finding": "root-finding algorithm"
    },
    {
        ", ": null
    },
    {
        "integration": "numerical integration"
    },
    {
        ", the ": null
    },
    {
        "solution of ordinary differential equations": "numerical ordinary differential equations"
    },
    {
        "; the approximation of ": null
    },
    {
        "special functions": "special functions"
    },
    {
        ".   ": null
    },
    {
        "Symbolic computation": "symbolic computation"
    },
    {
        " – Manipulation and solution of expressions in symbolic form, also known as ": null
    },
    {
        "Computer algebra": "computer algebra"
    },
    {
        ".   ": null
    },
    {
        "Computational physics": "computational physics"
    },
    {
        " – Numerical simulations of large non-analytic systems   ": null
    },
    {
        "Computational chemistry": "computational chemistry"
    },
    {
        " – Computational modelling of theoretical chemistry in order to determine chemical structures and properties   ": null
    },
    {
        "Bioinformatics": "bioinformatics"
    },
    {
        " and ": null
    },
    {
        "Computational biology": "computational biology"
    },
    {
        " – The use of computer science to maintain, analyse, store ": null
    },
    {
        "biological data": "biological data"
    },
    {
        " and to assist in solving biological problems such as ": null
    },
    {
        "Protein folding": "protein folding"
    },
    {
        ", function prediction and ": null
    },
    {
        "Phylogeny": "phylogeny"
    },
    {
        ".   ": null
    },
    {
        "Computational neuroscience": "computational neuroscience"
    },
    {
        " – Computational modelling of ": null
    },
    {
        "neurophysiology": "neurophysiology"
    },
    {
        ".        ": null
    },
    {
        "Formal methods": "formal methods"
    },
    {
        " – Mathematical approaches for describing and reasoning about software design.   ": null
    },
    {
        "Software engineering": "software engineering"
    },
    {
        " – The principles and practice of designing, developing, and testing programs, as well as proper engineering practices.   ": null
    },
    {
        "Algorithm design": "algorithm design"
    },
    {
        " – Using ideas from algorithm theory to creatively design solutions to real tasks.   ": null
    },
    {
        "Computer programming": "computer programming"
    },
    {
        " – The practice of using a programming language to implement algorithms.   ": null
    },
    {
        "Human–computer interaction": "human–computer interaction"
    },
    {
        " – The study and design of computer interfaces that people use.   ": null
    },
    {
        "Reverse engineering": "reverse engineering"
    },
    {
        " – The application of the scientific method to the understanding of arbitrary existing software.        ": null
    },
    {
        "Automata theory": "automata theory"
    },
    {
        " – Different logical structures for solving problems.   ": null
    },
    {
        "Computability theory": "computability theory"
    },
    {
        " – What is calculable with the current models of computers. Proofs developed by ": null
    },
    {
        "Alan Turing": "alan turing"
    },
    {
        " and others provide insight into the possibilities of what may be computed and what may not.   ": null
    },
    {
        "List of unsolved problems in computer science": "list of unsolved problems in computer science"
    },
    {
        " Computational complexity theory": "computational complexity theory"
    },
    {
        " – Fundamental bounds on classes of computations.   ": null
    },
    {
        "Quantum computing": "quantum computing"
    },
    {
        " theory – Explores computational models involving ": null
    },
    {
        "quantum superposition": "quantum superposition"
    },
    {
        " of bits.         ": null
    },
    {
        "History of computer science": "history of computer science"
    },
    {
        " List of pioneers in computer science": "list of pioneers in computer science"
    },
    {
        " Programmer": "programmer"
    },
    {
        " Teacher": "teacher"
    },
    {
        "/": null
    },
    {
        "Professor": "professor"
    },
    {
        " Software engineer": "software engineer"
    },
    {
        " Software architect": "software architect"
    },
    {
        " Software developer": "software developer"
    },
    {
        " Software tester": "software tester"
    },
    {
        " Hardware engineer": "hardware engineer"
    },
    {
        " Data analyst": "data analyst"
    },
    {
        " Interaction designer": "interaction designer"
    },
    {
        " Network administrator": "network administrator"
    },
    {
        " Data structure": "data structure"
    },
    {
        " Data type": "datatype"
    },
    {
        " Associative array": "associative array"
    },
    {
        " and ": null
    },
    {
        "Hash table": "hash table"
    },
    {
        " Array": "array data structure"
    },
    {
        " List": "list"
    },
    {
        " Tree": "tree"
    },
    {
        " String": "string"
    },
    {
        " Matrix ": "matrix"
    },
    {
        " Database": "databases"
    },
    {
        " Imperative programming": "imperative programming"
    },
    {
        "/": null
    },
    {
        "Procedural programming": "procedural programming"
    },
    {
        " Functional programming": "functional programming"
    },
    {
        " Logic programming": "logic programming"
    },
    {
        " Object oriented programming": "object oriented programming"
    },
    {
        " Class": "class"
    },
    {
        " Inheritance": "inheritance"
    },
    {
        " Object": "object"
    }
]