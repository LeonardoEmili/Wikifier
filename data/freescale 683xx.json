[
    {
        "           The  Freescale 42xx  is a family of compatible ": null
    },
    {
        "microcontroller": "microcontroller"
    },
    {
        "s that use a ": null
    },
    {
        "Motorola 42": "motorola 68000"
    },
    {
        "-based ": null
    },
    {
        "CPU": "central processing unit"
    },
    {
        " core. The family was designed using a ": null
    },
    {
        "hardware description language": "hardware description language"
    },
    {
        ", making the parts synthesizable, and amenable to improved fabrication processes, such as die shrinks.     There are two CPU cores used in the 42xx family: the ": null
    },
    {
        "42EC42": "motorola 68ec000"
    },
    {
        " and the CPU42 The instruction set of the CPU42 core is similar to the ": null
    },
    {
        "42": "motorola 68020"
    },
    {
        " without ": null
    },
    {
        "bitfield": "bitfield"
    },
    {
        " instructions, and with a few instructions unique to the CPU42 core, such as table lookup and interpolate instructions, and a low-power stop mode.     The modules of the microcontroller were designed independently and released as new CPUs could be tested. This process let the architects perform design-ahead so that when silicon technologies were available, Motorola had designs ready to implement and go to market. Many of these submodules have been carried forward into the ": null
    },
    {
        "Coldfire": "motorola_coldfire"
    },
    {
        " line of processors.     The microcontrollers consist of a series of modules, connected by an internal bus:   A ": null
    },
    {
        " fully static": "dynamic logic static versus dynamic logic"
    },
    {
        " CPU core, capable of running at any clock speed from dead stop to maximum rated speed .   A CPU core designed to minimize transistors while maximizing performance.   A high-speed clocked serial interface for debugging called ": null
    },
    {
        "background debug mode": "in-circuit emulator"
    },
    {
        " . The 42xx-series was the first to have a clocked serial interface to the CPU to perform debugging. Now, many CPUs use a standard serial test interface, usually ": null
    },
    {
        "JTAG": "jtag"
    },
    {
        ", for this purpose.   The SIM , which eliminates much ": null
    },
    {
        "glue logic": "glue logic"
    },
    {
        " by providing chip selects and address decoding. The SIM also provides a clock generator, watchdogs for various system operations, configuration of processor pins, a periodic timer, and an interrupt controller.     Other modules available on various processors in the 42xx family are:   The Timing Processor Unit , which performs almost any timing related task: timers, counters, proportional pulse width control, pulse width measurement, pulse generation, stepper motor controllers, quadrature detection, etc. Freescale gives the development system and ": null
    },
    {
        "code": "source code"
    },
    {
        " away for free.   An auxiliary ": null
    },
    {
        "RAM": "random-access memory"
    },
    {
        " doubles as a programmable microcontroller store for the TPU.   Some early models have two conventional counter-timers.   A general purpose timer module provides pulse accumulators, capture/compare, and ": null
    },
    {
        "Pulse-width modulation": "pulse-width modulation"
    },
    {
        " capabilities.   Some models have a ": null
    },
    {
        "network interface processor": "network interface processor"
    },
    {
        " in the form of a ": null
    },
    {
        "communication processor module": "communication processor module"
    },
    {
        " and serial communications controllers which can be interfaced to ": null
    },
    {
        "Ethernet": "ethernet"
    },
    {
        " or ": null
    },
    {
        "HDLC": "hdlc"
    },
    {
        " busses.   Most models have a queued serial module which provides both synchronous ": null
    },
    {
        "Serial Peripheral Interface": "serial peripheral interface"
    },
    {
        " , and logic-level ": null
    },
    {
        "RS42": "rs232"
    },
    {
        " UART": "uart"
    }
]