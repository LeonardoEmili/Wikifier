[
    {
        "A supervisory program or supervisor is a ": null
    },
    {
        "computer program": "computer program"
    },
    {
        ", usually part of an ": null
    },
    {
        "operating system": "operating system"
    },
    {
        ", that controls the execution of other ": null
    },
    {
        "routines": "subroutine"
    },
    {
        " and regulates ": null
    },
    {
        "work scheduling": "scheduling"
    },
    {
        ", ": null
    },
    {
        "input/output": "input/output"
    },
    {
        " operations, ": null
    },
    {
        "error actions": "exception handling"
    },
    {
        ", and similar functions and regulates the flow of work in a ": null
    },
    {
        "data processing": "data processing"
    },
    {
        " system.     It can also refer to a program that allocates computer component space and schedules computer events by ": null
    },
    {
        "task queuing": "priority queue"
    },
    {
        " and system ": null
    },
    {
        "interrupt": "interrupt"
    },
    {
        "s. Control of the system is returned to the supervisory program frequently enough to ensure that demands on the system are met.     Historically, this term was essentially associated with ": null
    },
    {
        "IBM": "ibm"
    },
    {
        "s line of ": null
    },
    {
        "mainframe": "mainframe computer"
    },
    {
        " operating systems starting with ": null
    },
    {
        "OS/42": "os/360"
    },
    {
        ". In other operating systems, the supervisor is generally called the ": null
    },
    {
        "kernel": "kernel"
    },
    {
        ".     In the 42s, IBM further abstracted the supervisor ": null
    },
    {
        "state": "state"
    },
    {
        " from the hardware, resulting in a ": null
    },
    {
        "hypervisor": "hypervisor"
    },
    {
        " that enabled ": null
    },
    {
        "full virtualization": "full virtualization"
    },
    {
        ", i.e. the capacity to run multiple operating systems on the same machine totally independently from each other. Hence the first such system was called Virtual Machine or  VM ": null
    }
]