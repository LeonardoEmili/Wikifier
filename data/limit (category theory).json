[
    {
        "In ": null
    },
    {
        "category theory": "category theory"
    },
    {
        ", a branch of ": null
    },
    {
        "mathematics": "mathematics"
    },
    {
        ", the abstract notion of a limit captures the essential properties of universal constructions such as ": null
    },
    {
        "products": "product"
    },
    {
        ", ": null
    },
    {
        "pullbacks": "pullback"
    },
    {
        " and ": null
    },
    {
        "inverse limit": "inverse limit"
    },
    {
        "s. The ": null
    },
    {
        "dual notion": "duality"
    },
    {
        " of a colimit generalizes constructions such as ": null
    },
    {
        "disjoint union": "disjoint union"
    },
    {
        "s, ": null
    },
    {
        "direct sum": "direct sum"
    },
    {
        "s, ": null
    },
    {
        "coproduct": "coproduct"
    },
    {
        "s, ": null
    },
    {
        "pushout": "pushout"
    },
    {
        "s and ": null
    },
    {
        "direct limit": "direct limit"
    },
    {
        "s.     Limits and colimits, like the strongly related notions of ": null
    },
    {
        "universal properties": "universal property"
    },
    {
        " and ": null
    },
    {
        "adjoint functors": "adjoint functors"
    },
    {
        ", exist at a high level of abstraction. In order to understand them, it is helpful to first study the specific examples these concepts are meant to generalize.       Limits and colimits in a ": null
    },
    {
        "category": "category"
    },
    {
        " C are defined by means of diagrams in C. Formally, a  diagram  of shape J in C is a ": null
    },
    {
        "functor": "functor"
    },
    {
        " from J to C:   : F:J\\to C.   The category J is thought of as an ": null
    },
    {
        "index category": "index category"
    },
    {
        ", and the diagram F is thought of as indexing a collection of objects and ": null
    },
    {
        "morphism": "morphism"
    },
    {
        "s in C patterned on J.     One is most often interested in the case where the category J is a ": null
    },
    {
        "small": "small category"
    },
    {
        " or even ": null
    },
    {
        "finite": "finite set"
    },
    {
        " category. A diagram is said to be small or finite whenever J is.       Let F : J → C be a diagram of shape J in a category C. A  cone  to F is an object N of C together with a family ψ X : N → F of morphisms indexed by the objects X of J, such that for every morphism f : X → Y in J, we have F ∘ ψ X ψ Y .     A limit of the diagram F : J → C is a cone  to F such that for any other cone  to F there exists a unique morphism u : N → L such that φ X o u ψ X for all X in J.      One says that the cone  factors through the cone  with   the unique factorization u. The morphism u is sometimes called the mediating morphism.     Limits are also referred to as  universal cone s, since they are characterized by a ": null
    },
    {
        "universal property": "universal property"
    },
    {
        " . As with every universal property, the above definition describes a balanced state of generality: The limit object L has to be general enough to allow any other cone to factor through it; on the other hand, L has to be sufficiently specific, so that only one such factorization is possible for every cone.     Limits may also be characterized as ": null
    },
    {
        "terminal object": "terminal object"
    },
    {
        "s in the ": null
    },
    {
        "category of cones": "category of cones"
    },
    {
        " to F.     It is possible that a diagram does not have a limit at all. However, if a diagram does have a limit then this limit is essentially unique: it is unique ": null
    },
    {
        "up to": "up to"
    },
    {
        " a unique ": null
    },
    {
        "isomorphism": "isomorphism"
    },
    {
        ". For this reason one often speaks of the limit of F.          The ": null
    },
    {
        "dual notions": "dual"
    },
    {
        " of limits and cones are colimits and co-cones. Although it is straightforward to obtain the definitions of these by inverting all morphisms in the above definitions, we will explicitly state them here:     A  co-cone  of a diagram F : J → C is an object N of C together with a family of morphisms   : \\psi_X:F \\to N     for every object X of J, such that for every morphism f : X → Y in J, we have ψ Y ∘ F ψ X .     A colimit of a diagram F : J → C is a co-cone  of F such that for any other co-cone  of F there exists a unique morphism u : L → N such that u o \\phi X ψ X for all X in J.          Colimits are also referred to as  universal co-cone s. They can be characterized as ": null
    },
    {
        "initial object": "initial object"
    },
    {
        "s in the ": null
    },
    {
        "category of co-cones": "category of co-cones"
    },
    {
        " from F.     As with limits, if a diagram F has a colimit then this colimit is unique up to a unique isomorphism.       Limits and colimits can also be defined for collections of objects and morphisms without the use of diagrams. The definitions are the same . This variation, however, adds no new information. Any collection of objects and morphisms defines a ": null
    },
    {
        "directed graph": "directed graph"
    },
    {
        " G. If we let J be the ": null
    },
    {
        "free category": "free category"
    },
    {
        " generated by G, there is a universal diagram F : J → C whose image contains G. The limit of this diagram is the same as the limit of the original collection of objects and morphisms.     Weak limit and weak colimits are defined like limits and colimits, except that the uniqueness property of the mediating morphism is dropped.           The definition of limits is general enough to subsume several constructions useful in practical settings. In the following we will consider the limit  of a diagram F : J → C.    Terminal object s. If J is the empty category there is only one diagram of shape J: the empty one . A cone to the empty diagram is essentially just an object of C. The limit of F is any object that is uniquely factored through by every other object. This is just the definition of a terminal object.    Products . If J is a ": null
    },
    {
        "discrete category": "discrete category"
    },
    {
        " then a diagram F is essentially nothing but a ": null
    },
    {
        "family": "indexed family"
    },
    {
        " of objects of C, indexed by J. The limit L of F is called the product of these objects. The cone φ consists of a family of morphisms φ X : L → F called the projections of the product. In the ": null
    },
    {
        "category of sets": "category of sets"
    },
    {
        ", for instance, the products are given by ": null
    },
    {
        "Cartesian product": "cartesian product"
    },
    {
        "s and the projections are just the natural projections onto the various factors.   Powers. A special case of a product is when the diagram F is a constant functor to an object X of C. The limit of this diagram is called the J th power of X and denoted X J .    Equalizer s. If J is a category with two objects and two parallel morphisms from one object to the other, then a diagram of shape J is a pair of parallel morphisms in C. The limit L of such a diagram is called an equalizer of those morphisms.    Kernel s. A kernel is a special case of an equalizer where one of the morphisms is a ": null
    },
    {
        "zero morphism": "zero morphism"
    },
    {
        ".    Pullbacks . Let F be a diagram that picks out three objects X, Y, and Z in C, where the only non-identity morphisms are f : X → Z and g : Y → Z. The limit L of F is called a pullback or a fiber product. It can nicely be visualized as a ": null
    },
    {
        "commutative square": "commutative diagram"
    },
    {
        ":   ": null
    },
    {
        "center": "image:pullback_categories.svg"
    },
    {
        "  Inverse limit s. Let J be a ": null
    },
    {
        "directed": "directed set"
    },
    {
        " set  and let F : J op → C be a diagram. The limit of F is called an inverse limit or projective limit.   If J 42, the category with a single object and morphism, then a diagram of shape J is essentially just an object X of C. A cone to an object X is just a morphism with codomain X. A morphism f : Y → X is a limit of the diagram X if and only if f is an ": null
    },
    {
        "isomorphism": "isomorphism"
    },
    {
        ". More generally, if J is any category with an ": null
    },
    {
        "initial object": "initial object"
    },
    {
        " i, then any diagram of shape J has a limit, namely any object isomorphic to F. Such an isomorphism uniquely determines a universal cone to F.   Topological limits. Limits of functions are a special case of ": null
    },
    {
        "limits of filters": "filter convergent filter bases"
    },
    {
        ", which are related to categorical limits as follows. Given a ": null
    },
    {
        "topological space": "topological space"
    },
    {
        " X, denote by F the set of filters on X, x ∈ X a point, V ∈ F the ": null
    },
    {
        "neighborhood filter": "filter neighbourhood bases"
    },
    {
        " of x, A ∈ F a particular filter and F_\\ the set of filters finer than A and that converge to x. The filters F are given a small and thin category structure by adding an arrow A → B if and only if A ⊆ B. The injection I_:F_\\to F becomes a functor and the following equivalence holds :     :: x is a topological limit of A if and only if A is a categorical limit of I_       Examples of colimits are given by the dual versions of the examples above:    Initial object s are colimits of empty diagrams.    Coproduct s are colimits of diagrams indexed by discrete categories.   Copowers are colimits of constant diagrams from discrete categories.    Coequalizer s are colimits of a parallel pair of morphisms.    Cokernel s are coequalizers of a morphism and a parallel zero morphism.    Pushouts  are colimits of a pair of morphisms with common domain.    Direct limit s are colimits of diagrams indexed by directed sets.           A given diagram F : J → C may or may not have a limit in C. Indeed, there may not even be a cone to F, let alone a universal cone.     A category C is said to have limits of shape J if every diagram of shape J has a limit in C. Specifically, a category C is said to   have products if it has limits of shape J for every small discrete category J ,   have equalizers if it has limits of shape \\bullet\\rightrightarrows\\bullet ,   have pullbacks if it has limits of shape \\bullet\\rightarrow\\bullet\\leftarrow\\bullet .   A  complete category  is a category that has all small limits .     One can also make the dual definitions. A category has colimits of shape J if every diagram of shape J has a colimit in C. A  cocomplete category  is one that has all small colimits.     The existence theorem for limits states that if a category C has equalizers and all products indexed by the classes Ob and Hom, then C has all limits of shape J. In this case, the limit of a diagram F : J → C can be constructed as the equalizer of the two morphisms   : s,t : \\prod_F \\rightrightarrows \\prod_ F   given by   : \\begin   s & \\bigl_ \\\\   t & \\bigl_.   \\end   There is a dual existence theorem for colimits in terms of coequalizers and coproducts. Both of these theorems give sufficient and necessary conditions for the existence of all limits of shape J.       Limits and colimits are important special cases of ": null
    },
    {
        "universal construction": "universal construction"
    },
    {
        "s.     Let C be a category and let J be a small index category. The ": null
    },
    {
        "functor category": "functor category"
    },
    {
        " C J may be thought of as the category of all diagrams of shape J in C. The  diagonal functor    : \\Delta : \\mathcal C \\to \\mathcal C^   is the functor that maps each object N in C to the constant functor Δ : J → C to N. That is, Δ N for each object X in J and Δ id N for each morphism f in J.     Given a diagram F: J → C , a ": null
    },
    {
        "natural transformation": "natural transformation"
    },
    {
        " ψ : Δ → F  is the same thing as a cone from N to F. To see this, first note that Δ N for all X implies that the components of ψ are morphisms ψ X : N → F, which all share the domain N. Moreover, the requirement that the cones diagrams commute is true simply because this ψ is a natural transformation.      Therefore, the definitions of limits and colimits can then be restated in the form:   A limit of F is a universal morphism from Δ to F.   A colimit of F is a universal morphism from F to Δ.       Like all universal constructions, the formation of limits and colimits is functorial in nature. In other words, if every diagram of shape J has a limit in C  there exists a limit functor   : \\lim : \\mathcal^\\mathcal \\to \\mathcal   which assigns each diagram its limit and each ": null
    },
    {
        "natural transformation": "natural transformation"
    },
    {
        " η : F → G the unique morphism lim η : lim F → lim G commuting with the corresponding universal cones. This functor is ": null
    },
    {
        "right adjoint": "right adjoint"
    },
    {
        " to the diagonal functor Δ : C → C J .   This adjunction gives a bijection between the set of all morphisms from N to lim F and the set of all cones from N to F   : \\operatorname \\cong \\operatorname   which is natural in the variables N and F. The counit of this adjunction is simply the universal cone from lim F to F. If the index category J is ": null
    },
    {
        "connected": "connected category"
    },
    {
        " then the unit of the adjunction is an isomorphism so that lim is a left inverse of Δ. This fails if J is not connected. For example, if J is a discrete category, the components of the unit are the ": null
    },
    {
        "diagonal morphism": "diagonal morphism"
    },
    {
        "s δ : N → N J .     Dually, if every diagram of shape J has a colimit in C  there exists a colimit functor   : \\operatorname : \\mathcal^\\mathcal \\to \\mathcal   which assigns each diagram its colimit. This functor is ": null
    },
    {
        "left adjoint": "left adjoint"
    },
    {
        " to the diagonal functor Δ : C → C J , and one has a natural isomorphism   : \\operatorname \\cong \\operatorname.   The unit of this adjunction is the universal cocone from F to colim F. If J is connected then the counit is an isomorphism, so that colim is a left inverse of Δ.     Note that both the limit and the colimit functors are ": null
    },
    {
        "covariant": "covariant functor"
    },
    {
        " functors.          One can use ": null
    },
    {
        "Hom functor": "hom functor"
    },
    {
        "s to relate limits and colimits in a category C to limits in Set, the ": null
    },
    {
        "category of sets": "category of sets"
    },
    {
        ". This follows, in part, from the fact the covariant Hom functor Hom : C → Set ": null
    },
    {
        "preserves all limits": "preservation of limits"
    },
    {
        " in C. By duality, the contravariant Hom functor must take colimits to limits.     If a diagram F : J → C has a limit in C, denoted by lim F, there is a ": null
    },
    {
        "canonical isomorphism": "canonical isomorphism"
    },
    {
        "   : \\operatorname\\cong \\lim\\operatorname   which is natural in the variable N. Here the functor Hom is the composition of the Hom functor Hom with F. This isomorphism is the unique one which respects the limiting cones.     One can use the above relationship to define the limit of F in C. The first step is to observe that the limit of the functor Hom can be identified with the set of all cones from N to F:   : \\lim\\operatorname \\operatorname.   The limiting cone is given by the family of maps π X : Cone → Hom where π X ψ X . If one is given an object L of C together with a ": null
    },
    {
        "natural isomorphism": "natural isomorphism"
    },
    {
        " Φ : Hom → Cone, the object L will be a limit of F with the limiting cone given by Φ L . In fancy language, this amounts to saying that a limit of F is a ": null
    },
    {
        "representation": "representable functor"
    },
    {
        " of the functor Cone : C → Set.     Dually, if a diagram F : J → C has a colimit in C, denoted colim F, there is a unique canonical isomorphism   : \\operatorname\\cong\\lim\\operatorname   which is natural in the variable N and respects the colimiting cones. Identifying the limit of Hom with the set Cocone, this relationship can be used to define the colimit of the diagram F as a representation of the functor Cocone.       Let I be a finite category and J be a small ": null
    },
    {
        "filtered category": "filtered category"
    },
    {
        ". For any ": null
    },
    {
        "bifunctor": "bifunctor"
    },
    {
        "     : F : I\\times J \\to \\mathbf,     there is a ": null
    },
    {
        "natural isomorphism": "natural isomorphism"
    },
    {
        "     : \\operatorname\\limits_J \\lim_I F \\rightarrow \\lim_I\\operatorname\\limits_J F.     In words, filtered colimits in Set commute with finite limits. It also holds that small limits commute with small limits.        If F : J → C is a diagram in C and G : C → D is a ": null
    },
    {
        "functor": "functor"
    },
    {
        " then by composition one obtains a diagram GF : J → D. A natural question is then:   :“How are the limits of GF related to those of F?”       A functor G : C → D induces a map from Cone to Cone: if Ψ is a cone from N to F then GΨ is a cone from GN to GF. The functor G is said to preserve the limits of F if  is a limit of GF whenever  is a limit of F.      A functor G is said to preserve all limits of shape J if it preserves the limits of all diagrams F : J → C. For example, one can say that G preserves products, equalizers, pullbacks, etc. A continuous functor is one that preserves all small limits.     One can make analogous definitions for colimits. For instance, a functor G preserves the colimits of F if G is a colimit of GF whenever  is a colimit of F. A cocontinuous functor is one that preserves all small colimits.     If C is a ": null
    },
    {
        "complete category": "complete category"
    },
    {
        ", then, by the above existence theorem for limits, a functor G : C → D is continuous if and only if it preserves products and equalizers. Dually, G is cocontinuous if and only if it preserves coproducts and coequalizers.     An important property of ": null
    },
    {
        "adjoint functors": "adjoint functors"
    },
    {
        " is that every right adjoint functor is continuous and every left adjoint functor is cocontinuous. Since adjoint functors exist in abundance, this gives numerous examples of continuous and cocontinuous functors.     For a given diagram F : J → C and functor G : C → D, if both F and GF have specified limits there is a unique canonical morphism   : \\tau_F : G \\lim F \\to \\lim GF   which respects the corresponding limit cones. The functor G preserves the limits of F if and only this map is an isomorphism. If the categories C and D have all limits of shape J then lim is a functor and the morphisms τ F form the components of a ": null
    },
    {
        "natural transformation": "natural transformation"
    },
    {
        "   : \\tau:G \\lim \\to \\lim G^J.   The functor G preserves all limits of shape J if and only if τ is a natural isomorphism. In this sense, the functor G can be said to commute with limits .     Preservation of limits and colimits is a concept that only applies to  covariant  functors. For ": null
    },
    {
        "contravariant functor": "contravariant functor"
    },
    {
        "s the corresponding notions would be a functor that takes colimits to limits, or one that takes limits to colimits.       A functor G : C → D is said to lift limits for a diagram F : J → C if whenever  is a limit of GF there exists a limit  of F such that G . A functor G lifts limits of shape J if it lifts limits for all diagrams of shape J. One can therefore talk about lifting products, equalizers, pullbacks, etc. Finally, one says that G lifts limits if it lifts all limits. There are dual definitions for the lifting of colimits.     A functor G lifts limits uniquely for a diagram F if there is a unique preimage cone  such that  is a limit of F and G . One can show that G lifts limits uniquely if and only if it lifts limits and is ": null
    },
    {
        "amnestic": "amnestic functor"
    },
    {
        ".     Lifting of limits is clearly related to preservation of limits. If G lifts limits for a diagram F and GF has a limit, then F also has a limit and G preserves the limits of F. It follows that:   If G lifts limits of all shape J and D has all limits of shape J, then C also has all limits of shape J and G preserves these limits.   If G lifts all small limits and D is complete, then C is also complete and G is continuous.   The dual statements for colimits are equally valid.       Let F : J → C be a diagram. A functor G : C → D is said to   create limits for F if whenever  is a limit of GF there exists a unique cone  to F such that G ≅ , and furthermore, this cone is a limit of F.   reflect limits for F if each cone to F whose image under G is a limit of GF is already a limit of F.   Dually, one can define creation and reflection of colimits.     The following statements are easily seen to be equivalent:   The functor G creates limits.   The functor G lifts limits uniquely and reflects limits.   There are examples of functors which lift limits uniquely but neither create nor reflect them.       Every ": null
    },
    {
        "representable functor": "representable functor"
    },
    {
        " C → Set preserves limits . In particular, for any object A of C, this is true of the covariant ": null
    },
    {
        "Hom functor": "hom functor"
    },
    {
        " Hom : C → Set.   The ": null
    },
    {
        "forgetful functor": "forgetful functor"
    },
    {
        " U : Grp → Set creates all small limits and ": null
    },
    {
        "filtered colimit": "filtered colimit"
    },
    {
        "s; however, U does not preserve coproducts. This situation is typical of algebraic forgetful functors.   The ": null
    },
    {
        "free functor": "free functor"
    },
    {
        " F : Set → Grp  is left adjoint to forgetful functor U and is, therefore, cocontinuous. This explains why the ": null
    },
    {
        "free product": "free product"
    },
    {
        " of two free groups G and H is the free group generated by the ": null
    },
    {
        "disjoint union": "disjoint union"
    },
    {
        " of the generators of G and H.   The inclusion functor Ab → Grp creates limits but does not preserve coproducts .   The forgetful functor Top → Set lifts limits and colimits uniquely but creates neither.   Let Met c be the category of ": null
    },
    {
        "metric space": "metric space"
    },
    {
        "s with ": null
    },
    {
        "continuous function": "continuous function"
    },
    {
        "s for morphisms. The forgetful functor Met c → Set": null
    }
]