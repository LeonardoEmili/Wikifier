[
    {
        "   Digital compositing is the process of digitally assembling multiple images to make a final image, typically for print, ": null
    },
    {
        "motion pictures": "Film"
    },
    {
        " or screen display. It is the digital analogue of optical film ": null
    },
    {
        "compositing": "Compositing"
    },
    {
        ".       The basic operation used in digital compositing is known as ": null
    },
    {
        "alpha blending": "Alpha Compositingalpha Blending"
    },
    {
        ", where an opacity value, α, is used to control the proportions of two input ": null
    },
    {
        "pixel": "Pixel"
    },
    {
        " values that end up a single output pixel.     As a simple example, suppose two images of the same size are available and they are to be composited. The input images are referred to as the foreground image and the background image. Each image consists of the same number of ": null
    },
    {
        "pixel": "Pixel"
    },
    {
        "s. Compositing is performed by mathematically combining information from the corresponding pixels from the two input images and recording the result in a third image, which is called the composited image.     Consider three pixels;   a foreground pixel, f   a background pixel, b   a composited pixel, c   and   α, the opacity value of the foreground pixel. . A monochrome raster image where the pixel values are to be interpreted as alpha values is known as a ": null
    },
    {
        "matte": "Matte"
    },
    {
        ".     Then, considering all three colour channels, and assuming that the colour channels are expressed in a γ1 colour space , we have:     :c r α f r + b r   :c g α f g + b g   :c b α f b + b b     Note that if the operations are performed in a colour space where γ is not equal to 1 then the operation will lead to non-linear effects which can potentially be seen as ": null
    },
    {
        "aliasing": "Aliasing"
    },
    {
        " artifacts  along sharp edges in the matte. More generally, nonlinear compositing can have effects such as halos around composited objects, because the influence of the alpha channel is non-linear. It is possible for a compositing artist to compensate for the effects of compositing in non-linear space.     Performing alpha blending is an expensive operation if performed on an entire image or 3D scene. If this operation has to be done in real time video games there is an easy trick to boost performance.     :c out α f in + b in   :c out α f in + b in − α b in   :c out b in + α     By simply rewriting the mathematical expression one can save 50% of the multiplications required.       When many partially transparent layers need to be composited together, it is worthwhile to consider the algebraic properties of compositing operators used. Specifically, the associativity and commutativity determine when repeated calculation can or cannot be avoided.     Consider the case when we have four layers to blend to produce the final image: FA where A, B, C, D are partially transparent image layers and denotes a compositing operator . If only layer C changes, we should find a way to avoid re-blending all of the layers when computing F. Without any special considerations, four full-image blends would need to occur. For compositing operators that are ": null
    },
    {
        "commutative": "Commutative"
    },
    {
        ", such as ": null
    },
    {
        "additive blending": "Additive Blending"
    },
    {
        ", it is safe to re-order the blending operations. In this case, we might compute TA only once and simply blend TC to produce F, a single operation. Unfortunately, most operators are not commutative. However, many are ": null
    },
    {
        "associative": "Associative"
    },
    {
        ", suggesting it is safe to re-group operations to F, i.e. without changing their order. In this case we may compute S:AB once and save this result. To form F with an associative operator, we need only do two additional compositing operations to integrate the new layer S, by computing F:S. Note that this expression indicates compositing C with all of the layers below it in one step and then blending all of the layers on top of it with the previous result to produce the final image in the second step.     If all layers of an image change regularly but many layers still need to be composited , the commutativity of a compositing operator can still be exploited to speed up computation through ": null
    },
    {
        "parallelism": "Parallelism"
    },
    {
        " even when there is no gain from pre-computation. Again, consider the image FA. Each compositing operation in this expression depends on the next, leading to serial computation. However, associativity can allow us to rewrite F where there are clearly two operations that do not depend on each other that may be executed in parallel. In general, we can build a tree of pair-wise compositing operations with a height that is logarithmic in the number of layers.         The most historically significant nonlinear compositing system was the ": null
    },
    {
        "Cineon": "Cineon"
    },
    {
        ", which operated in a logarithmic color space, which more closely mimics the natural light response of film emulsions . Due to the limitations of processing speed and memory, compositing artists did not usually have the luxury of having the system make intermediate conversions to linear space for the compositing steps. Over time, the limitations have become much less significant, and now most compositing is done in a linear color space, even in cases where the source imagery is in a logarithmic color space.     Compositing often also includes scaling, retouching and colour correction of images.       There are two radically different digital compositing workflows: node-based compositing and layer-based compositing.     Node-based compositing represents an entire composite as a ": null
    },
    {
        "directed acyclic graph": "Directed Acyclic Graph"
    },
    {
        ", linking media objects and effects in a procedural map, intuitively laying out the progression from source input to final output, and is in fact the way all compositing applications internally handle composites. This type of compositing interface allows great flexibility, including the ability to modify the parameters of an earlier image processing step in context . Node-based compositing packages often handle keyframing and time effects poorly, as their workflow does not stem directly from a timeline, as do layer-based compositing packages. Software which incorporates a node based interface include ": null
    },
    {
        "Natron": "Natron"
    },
    {
        ", ": null
    },
    {
        "Apple Shake": "Apple Shake"
    },
    {
        ", ": null
    },
    {
        "Blender": "Blender"
    },
    {
        ", ": null
    },
    {
        "Blackmagic Fusion": "Blackmagic Fusion"
    },
    {
        ", and ": null
    },
    {
        "The Foundrys Nuke": "Nuke"
    },
    {
        ".     Layer-based compositing represents each media object in a composite as a separate layer within a timeline, each with its own time bounds, effects, and keyframes. All the layers are stacked, one above the next, in any desired order; and the bottom layer is usually ": null
    },
    {
        "rendered": "Rendering"
    },
    {
        " as a base in the resultant image, with each higher layer being progressively rendered on top of the previously composited of layers, moving upward until all layers have been rendered into the final composite. Layer-based compositing is very well suited for rapid ": null
    },
    {
        "2D": "2D Computer Graphics"
    },
    {
        " and limited ": null
    },
    {
        "3D": "3D Computer Graphics"
    },
    {
        " effects such as in motion graphics, but becomes awkward for more complex composites entailing numerous layers. A partial solution to this is some programs ability to view the composite-order of elements with a visual diagram called a ": null
    },
    {
        "flowchart": "Flowchart"
    },
    {
        " to nest compositions, or comps, directly into other compositions, thereby adding complexity to the render-order by first compositing layers in the beginning composition, then combining that resultant image with the layered images from the proceeding composition, and so on. An example of this exists in the Adobe program ": null
    },
    {
        "After Effects": "After Effects"
    }
]