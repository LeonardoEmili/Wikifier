[
    {
        "   Golden ratio base is a ": null
    },
    {
        "non-integer positional numeral system": "non-integer representation"
    },
    {
        " that uses the ": null
    },
    {
        "golden ratio": "golden ratio"
    },
    {
        "  as its ": null
    },
    {
        "base": "base"
    },
    {
        ". It is sometimes referred to as base-φ, golden mean base, phi-base, or, colloquially, phinary. Any ": null
    },
    {
        "non-negative": "non-negative"
    },
    {
        " real number": "real number"
    },
    {
        " can be represented as a base-φ numeral using only the digits 42 and 42 and avoiding the digit sequence 42  – this is called a standard form. A base-φ numeral that includes the digit sequence 42 can always be rewritten in standard form, using the algebraic properties of the base φ  — most notably that φ  +  42    φ 42 . For instance, 42 φ   42 φ .     Despite using an ": null
    },
    {
        "irrational number": "irrational number"
    },
    {
        " base, when using standard form, all non-negative ": null
    },
    {
        "integer": "integer"
    },
    {
        "s have a unique representation as a terminating base-φ expansion. The set of numbers which possess a finite base-φ representation is the ": null
    },
    {
        "ring": "ring"
    },
    {
        " Z[": "quadratic integer"
    },
    {
        "; it plays the same role in this numeral systems as ": null
    },
    {
        "dyadic rational": "dyadic rational"
    },
    {
        "s play in ": null
    },
    {
        "binary number": "binary number"
    },
    {
        "s, providing a possibility to ": null
    },
    {
        "multiply": "multiplication"
    },
    {
        ".     Other numbers have standard representations in base-φ, with ": null
    },
    {
        "rational number": "rational number"
    },
    {
        "s having recurring representations. These representations are unique, except that numbers with a terminating expansion also have a non-terminating expansion, as they do in ": null
    },
    {
        "base42": "decimal"
    },
    {
        "; for example, ": null
    },
    {
        "42    42…": "proof that 0.999... equals 1"
    },
    {
        ".              In the following example the notation 42 is used to represent −42     42 42 φ is not a standard base-φ numeral, since it contains a 42 and a 42 , which isnt a 42 or 42 , and contains a 42 −42 which isnt a 42 or 42 either.     To standardize a numeral, we can use the following substitutions: 42 φ 42 φ , 42 φ 42 φ , 42 42 42 φ 42 42 φ and 42 42 42 φ 42 φ . We can apply the substitutions in any order we like, as the result is the same. Below, the substitutions applied to the number on the previous line are on the right, the resulting number on the left.      Any ": null
    },
    {
        "positive number": "positive number"
    },
    {
        " with a non-standard terminating base-φ representation can be ": null
    },
    {
        "unique": "unique"
    },
    {
        "ly standardized in this manner. If we get to a point where all digits are 42 or 42 , except for the first digit being ": null
    },
    {
        "negative": "negative number"
    },
    {
        ", then the number is negative. This can be converted to the negative of a base-φ representation by ": null
    },
    {
        "negating": "negation"
    },
    {
        " every digit, standardizing the result, and then marking it as negative. For example, use a ": null
    },
    {
        "minus sign": "minus sign"
    },
    {
        ", or some other significance to denote negative numbers. If the arithmetic is being performed on a computer, an ": null
    },
    {
        "error message": "error message"
    },
    {
        " may be returned.         We can either consider our integer to be the digit of a nonstandard base-φ numeral, and standardize it, or do the following:     42 × 42 42 φ × φ 42 + φ and  −42 + φ. Therefore, we can compute     :  +  ,   :  −       and     :  ×  .     So, using integer values only, we can add, subtract and multiply numbers of the form , and even represent positive and negative integer ": null
    },
    {
        "powers": "exponentiation"
    },
    {
        " of φ.        ": null
    }
]