The Steelman language requirements were a set of requirements which a high-level general-purpose  |programming_language|Programming_Language|  should meet, created by the  |United_States_Department_of_Defense|United_States_Department_Of_Defense|  in The Department of Defense Common High Order Language program in 1978. The predecessors of this document were called, in order, Strawman , Woodenman , Tinman and Ironman .     The requirements focused on the needs of  |embedded|Embedded_Systems|  computer applications, and emphasised reliability, maintainability, and efficiency. Notably, they included  |exception_handling|Exception_Handling|  facilities,  |run-time_checking|Run-Time_Checking| , and  |parallel_computing|Parallel_Computing| .     It was concluded that no existing language met these criteria to a sufficient extent, so a contest was called to create a language that would be closer to fulfilling them. The design that won this contest became the  |Ada_programming_language|Ada| .     The resulting language followed the Steelman requirements closely, though not exactly.     The Ada 95 revision of the language went beyond the Steelman requirements, targeting general-purpose systems in addition to embedded ones, and adding features supporting  |object-oriented_programming|Object-Oriented_Programming|.