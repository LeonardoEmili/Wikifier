A microassembler is a  |computer_program|Computer_Program|  that helps prepare a  |microprogram|Microcode| , called firmware, to control the low level operation of a computer in much the same way an  |assembler|Assembly_Languageassembler|  helps prepare higher level code for a  |processor|Central_Processing_Unit| . The difference is that the microprogram is usually only developed by the processor manufacturer and works intimately with the  |computer_hardware|Computer_Hardware| . On a microprogrammed computer the microprogram implements the operations of the  |instruction_set|Instruction_Set|  in which any normal program  is written. The use of a microprogram allows the manufacturer to fix certain mistakes, including working around hardware design errors, without modifying the hardware. Another means of employing microassembler-generated microprograms is in allowing the same hardware to run different  |instruction_sets|Instruction_Set| . After it is assembled, the microprogram is then loaded to a  |control_store|Control_Store|  to become part of the logic of a  |CPUs|Central_Processing_Unit| |_control_unit|Control_Unit| .     Some microassemblers are more generalized and are not targeted at a single computer architecture. For example, through the use of macro-assembler-like capabilities,  |Digital_Equipment_Corporation|Digital_Equipment_Corporation|  used their MICRO2 microassembler for a very wide range of computer architectures and implementations.     If a given computer implementation supports a  |writeable_control_store|Control_Store| , the microassembler is usually provided to customers as a means of writing customized microcode.     In the process of  |microcode|Microcode|  assembly it is helpful to verify the microprogram with emulation tools before distribution. Nowadays, microcoding has experienced a revival, since it is possible to correct and optimize the firmware of processing units already manufactured or sold, in order to adapt to specific  |operating_systems|Operating_System|  or to fix hardware bugs. However, a commonly usable microassembler for todays CPUs is not available to manipulate the microcode. Unfortunately, knowledge of a processors microcode is usually considered proprietary information so it is difficult to obtain information about how to modify it.                       