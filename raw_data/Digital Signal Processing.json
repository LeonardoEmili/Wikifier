[
    {
        "     Digital signal processing  is the use of ": null
    },
    {
        "digital processing": "Digital Processing"
    },
    {
        ", such as by computers or more specialized ": null
    },
    {
        "digital signal processors": "Digital Signal Processor"
    },
    {
        ", to perform a wide variety of ": null
    },
    {
        "signal processing": "Signal Processing"
    },
    {
        " operations. The signals processed in this manner are a sequence of numbers that represent ": null
    },
    {
        "samples": "Sampling"
    },
    {
        " of a ": null
    },
    {
        "continuous variable": "Continuous Variable"
    },
    {
        " in a domain such as time, space, or frequency.     Digital signal processing and ": null
    },
    {
        "analog signal processing": "Analog Signal Processing"
    },
    {
        " are subfields of signal processing. DSP applications include ": null
    },
    {
        "audio": "Audio Signal Processing"
    },
    {
        " and ": null
    },
    {
        "speech processing": "Speech Processing"
    },
    {
        ", ": null
    },
    {
        "sonar": "Sonar"
    },
    {
        ", ": null
    },
    {
        "radar": "Radar"
    },
    {
        " and other ": null
    },
    {
        "sensor array": "Sensor Array"
    },
    {
        " processing, ": null
    },
    {
        "spectral density estimation": "Spectral Density Estimation"
    },
    {
        ", ": null
    },
    {
        "statistical signal processing": "Statistical Signal Processing"
    },
    {
        ", ": null
    },
    {
        "digital image processing": "Digital Image Processing"
    },
    {
        ", ": null
    },
    {
        "data compression": "Data Compression"
    },
    {
        ", ": null
    },
    {
        "video coding": "Video Coding"
    },
    {
        ", ": null
    },
    {
        "audio coding": "Audio Coding"
    },
    {
        ", ": null
    },
    {
        "image compression": "Image Compression"
    },
    {
        ", signal processing for ": null
    },
    {
        "telecommunications": "Telecommunication"
    },
    {
        ", ": null
    },
    {
        "control systems": "Control System"
    },
    {
        ", ": null
    },
    {
        "biomedical engineering": "Biomedical Engineering"
    },
    {
        ", and ": null
    },
    {
        "seismology": "Seismology"
    },
    {
        ", among others.     DSP can involve linear or nonlinear operations. Nonlinear signal processing is closely related to ": null
    },
    {
        "nonlinear system identification": "Nonlinear System Identification"
    },
    {
        "  and can be implemented in the ": null
    },
    {
        "time": "Time Domain"
    },
    {
        ", ": null
    },
    {
        "frequency": "Frequency Domain"
    },
    {
        ", and ": null
    },
    {
        "spatio-temporal domains": "Film"
    },
    {
        ".      The application of digital computation to signal processing allows for many advantages over analog processing in many applications, such as ": null
    },
    {
        "error detection and correction": "Error Detection And Correction"
    },
    {
        " in transmission as well as ": null
    },
    {
        "data compression": "Data Compression"
    },
    {
        ".  Digital signal processing is also fundamental to ": null
    },
    {
        "digital technology": "Digital Technology"
    },
    {
        ", such as ": null
    },
    {
        "digital telecommunication": "Digital Telecommunication"
    },
    {
        " and ": null
    },
    {
        "wireless communications": "Wireless Communications"
    },
    {
        ".  DSP is applicable to both ": null
    },
    {
        "streaming data": "Streaming Data"
    },
    {
        " and static data.            To digitally analyze and manipulate an analog signal, it must be digitized with an ": null
    },
    {
        "analog-to-digital converter": "Analog-To-Digital Converter"
    },
    {
        " .  Sampling is usually carried out in two stages, ": null
    },
    {
        "discretization": "Discretization"
    },
    {
        " and ": null
    },
    {
        "quantization": "Quantization"
    },
    {
        ". Discretization means that the signal is divided into equal intervals of time, and each interval is represented by a single measurement of amplitude. Quantization means each amplitude measurement is approximated by a value from a finite set. Rounding ": null
    },
    {
        "real numbers": "Real Numbers"
    },
    {
        " to integers is an example.     The ": null
    },
    {
        "Nyquist–Shannon sampling theorem": "Nyquist–Shannon Sampling Theorem"
    },
    {
        " states that a signal can be exactly reconstructed from its samples if the sampling frequency is greater than twice the highest frequency component in the signal. In practice, the sampling frequency is often significantly higher than twice the ": null
    },
    {
        "Nyquist frequency": "Nyquist Frequency"
    },
    {
        ".      Theoretical DSP analyses and derivations are typically performed on ": null
    },
    {
        "discrete-time signal": "Discrete-Time Signal"
    },
    {
        " models with no amplitude inaccuracies , created by the abstract process of ": null
    },
    {
        "sampling": "Sampling"
    },
    {
        ". Numerical methods require a quantized signal, such as those produced by an ADC. The processed result might be a frequency spectrum or a set of statistics. But often it is another quantized signal that is converted back to analog form by a ": null
    },
    {
        "digital-to-analog converter": "Digital-To-Analog Converter"
    },
    {
        " .       In DSP, engineers usually study digital signals in one of the following domains: ": null
    },
    {
        "time domain": "Time Domain"
    },
    {
        " , spatial domain , ": null
    },
    {
        "frequency domain": "Frequency Domain"
    },
    {
        ", and ": null
    },
    {
        "wavelet": "Wavelet"
    },
    {
        " domains. They choose the domain in which to process a signal by making an informed assumption as to which domain best represents the essential characteristics of the signal and the processing to be applied to it. A sequence of samples from a measuring device produces a temporal or spatial domain representation, whereas a ": null
    },
    {
        "discrete Fourier transform": "Discrete Fourier Transform"
    },
    {
        " produces the frequency domain representation.            The most common processing approach in the time or space domain is enhancement of the input signal through a method called filtering. ": null
    },
    {
        "Digital filter": "Digital Filter"
    },
    {
        "ing generally consists of some linear transformation of a number of surrounding samples around the current sample of the input or output signal. There are various ways to characterize filters; for example:     A linear filter is a ": null
    },
    {
        "linear transformation": "Linear Transformation"
    },
    {
        " of input samples; other filters are  nonlinear . Linear filters satisfy the ": null
    },
    {
        "superposition principle": "Superposition Principle"
    },
    {
        ", i.e. if an input is a weighted linear combination of different signals, the output is a similarly weighted linear combination of the corresponding output signals.   A causal filter uses only previous samples of the input or output signals; while a non-causal filter uses future input samples. A non-causal filter can usually be changed into a causal filter by adding a delay to it.   A time-invariant filter has constant properties over time; other filters such as ": null
    },
    {
        "adaptive filters": "Adaptive Filter"
    },
    {
        " change in time.   A stable filter produces an output that converges to a constant value with time, or remains bounded within a finite interval. An unstable filter can produce an output that grows without bounds, with bounded or even zero input.   A ": null
    },
    {
        "finite impulse response": "Finite Impulse Response"
    },
    {
        " filter uses only the input signals, while an ": null
    },
    {
        "infinite impulse response": "Infinite Impulse Response"
    },
    {
        " filter uses both the input signal and previous samples of the output signal. FIR filters are always stable, while IIR filters may be unstable.     A filter can be represented by a ": null
    },
    {
        "block diagram": "Block Diagram"
    },
    {
        ", which can then be used to derive a sample processing ": null
    },
    {
        "algorithm": "Algorithm"
    },
    {
        " to implement the filter with hardware instructions. A filter may also be described as a ": null
    },
    {
        "difference equation": "Difference Equation"
    },
    {
        ", a collection of ": null
    },
    {
        "zeros and poles": "Zeros And Poles"
    },
    {
        " or an ": null
    },
    {
        "impulse response": "Impulse Response"
    },
    {
        " or ": null
    },
    {
        "step response": "Step Response"
    },
    {
        ".     The output of a linear digital filter to any given input may be calculated by ": null
    },
    {
        "convolving": "Convolution"
    },
    {
        " the input signal with the ": null
    },
    {
        "impulse response": "Impulse Response"
    },
    {
        ".            Signals are converted from time or space domain to the frequency domain usually through use of the ": null
    },
    {
        "Fourier transform": "Fourier Transform"
    },
    {
        ". The Fourier transform converts the time or space information to a magnitude and phase component of each frequency. With some applications, how the phase varies with frequency can be a significant consideration. Where phase is unimportant, often the Fourier transform is converted to the power spectrum, which is the magnitude of each frequency component squared.     The most common purpose for analysis of signals in the frequency domain is analysis of signal properties. The engineer can study the spectrum to determine which frequencies are present in the input signal and which are missing. Frequency domain analysis is also called spectrum- or spectral analysis.     Filtering, particularly in non-realtime work can also be achieved in the frequency domain, applying the filter and then converting back to the time domain. This can be an efficient implementation and can give essentially any filter response including excellent approximations to ": null
    },
    {
        "brickwall filters": "Brickwall Filter"
    },
    {
        ".     There are some commonly-used frequency domain transformations. For example, the ": null
    },
    {
        "cepstrum": "Cepstrum"
    },
    {
        " converts a signal to the frequency domain through Fourier transform, takes the logarithm, then applies another Fourier transform. This emphasizes the harmonic structure of the original spectrum.       Digital filters come in both IIR and FIR types. Whereas FIR filters are always stable, IIR filters have feedback loops that may become unstable and oscillate. The ": null
    },
    {
        "Z-transform": "Z-Transform"
    },
    {
        " provides a tool for analyzing stability issues of digital IIR filters. It is analogous to the ": null
    },
    {
        "Laplace transform": "Laplace Transform"
    },
    {
        ", which is used to design and analyze analog IIR filters.          In ": null
    },
    {
        "numerical analysis": "Numerical Analysis"
    },
    {
        " and ": null
    },
    {
        "functional analysis": "Functional Analysis"
    },
    {
        ", a ": null
    },
    {
        "discrete wavelet transform": "Discrete Wavelet Transform"
    },
    {
        " is any ": null
    },
    {
        "wavelet transform": "Wavelet Transform"
    },
    {
        " for which the ": null
    },
    {
        "wavelets": "Wavelet"
    },
    {
        " are discretely sampled. As with other wavelet transforms, a key advantage it has over ": null
    },
    {
        "Fourier transforms": "Fourier Transform"
    },
    {
        " is temporal resolution: it captures both frequency and location information.The accuracy of the joint time-frequency resolution is limited by the ": null
    },
    {
        "uncertainty principle": "Uncertainty Principlesignal Processing"
    },
    {
        " of time-frequency.       Applications of DSP include ": null
    },
    {
        "audio signal processing": "Audio Signal Processing"
    },
    {
        ", ": null
    },
    {
        "audio compression": "Audio Compression"
    },
    {
        ", ": null
    },
    {
        "digital image processing": "Digital Image Processing"
    },
    {
        ", ": null
    },
    {
        "video compression": "Video Compression"
    },
    {
        ", ": null
    },
    {
        "speech processing": "Speech Processing"
    },
    {
        ", ": null
    },
    {
        "speech recognition": "Speech Recognition"
    },
    {
        ", ": null
    },
    {
        "digital communications": "Digital Communication"
    },
    {
        ", ": null
    },
    {
        "digital synthesizers": "Digital Synthesizer"
    },
    {
        ", ": null
    },
    {
        "radar": "Radar"
    },
    {
        ", ": null
    },
    {
        "sonar": "Sonar"
    },
    {
        ", ": null
    },
    {
        "financial signal processing": "Financial Signal Processing"
    },
    {
        ", ": null
    },
    {
        "seismology": "Seismology"
    },
    {
        " and ": null
    },
    {
        "biomedicine": "Biomedicine"
    },
    {
        ". Specific examples include ": null
    },
    {
        "speech coding": "Speech Coding"
    },
    {
        " and transmission in digital ": null
    },
    {
        "mobile phones": "Mobile Phone"
    },
    {
        ", ": null
    },
    {
        "room correction": "Digital Room Correction"
    },
    {
        " of sound in ": null
    },
    {
        "hi-fi": "Hi-Fi"
    },
    {
        " and ": null
    },
    {
        "sound reinforcement": "Sound Reinforcement"
    },
    {
        " applications, ": null
    },
    {
        "weather forecasting": "Weather Forecasting"
    },
    {
        ", ": null
    },
    {
        "economic forecasting": "Economic Forecasting"
    },
    {
        ", ": null
    },
    {
        "seismic": "Seismology"
    },
    {
        " data processing, analysis and control of ": null
    },
    {
        "industrial process": "Industrial Process"
    },
    {
        "es, ": null
    },
    {
        "medical imaging": "Medical Imaging"
    },
    {
        " such as ": null
    },
    {
        "CAT": "Computed Axial Tomography"
    },
    {
        " scans and ": null
    },
    {
        "MRI": "Mri"
    },
    {
        ", ": null
    },
    {
        "MP3": "Mp3"
    },
    {
        " compression, ": null
    },
    {
        "computer graphics": "Computer Graphics"
    },
    {
        ", ": null
    },
    {
        "image manipulation": "Image Manipulation"
    },
    {
        ", ": null
    },
    {
        "audio crossovers": "Audio Crossover"
    },
    {
        " and ": null
    },
    {
        "equalization": "Equalization"
    },
    {
        ", and audio ": null
    },
    {
        "effects units": "Effects Unit"
    },
    {
        ".        DSP ": null
    },
    {
        "algorithms": "Algorithm"
    },
    {
        " may be run on general-purpose computers and ": null
    },
    {
        "digital signal processors": "Digital Signal Processor"
    },
    {
        ". DSP algorithms are also implemented on purpose-built hardware such as ": null
    },
    {
        "application-specific integrated circuit": "Application-Specific Integrated Circuit"
    },
    {
        " . Additional technologies for digital signal processing include more powerful general purpose ": null
    },
    {
        "microprocessors": "Microprocessor"
    },
    {
        ", ": null
    },
    {
        "field-programmable gate arrays": "Field-Programmable Gate Array"
    },
    {
        " , ": null
    },
    {
        "digital signal controllers": "Digital Signal Controller"
    },
    {
        " , and ": null
    },
    {
        "stream processors": "Stream Processing"
    },
    {
        ".      For systems that do not have a ": null
    },
    {
        "real-time computing": "Real-Time Computing"
    },
    {
        " requirement and the signal data exists in data files, processing may be done economically with a general-purpose computer. This is essentially no different from any other ": null
    },
    {
        "data processing": "Data Processing"
    },
    {
        ", except DSP mathematical techniques  are used, and the sampled data is usually assumed to be uniformly sampled in time or space. An example of such an application is processing ": null
    },
    {
        "digital photographs": "Digital Photograph"
    },
    {
        " with software such as ": null
    },
    {
        "Photoshop": "Photoshop"
    },
    {
        ".     When the application requirement is real-time, DSP is often implemented using specialized or dedicated processors or microprocessors, sometimes using multiple processors or multiple processing cores. These may process data using fixed-point arithmetic or floating point. For more demanding applications ": null
    },
    {
        "FPGAs": "Fpga"
    },
    {
        " may be used.  For the most demanding applications or high-volume products, ": null
    },
    {
        "ASICs": "Application-Specific Integrated Circuit"
    },
    {
        " might be designed specifically for the application.        ": null
    },
    {
        "Bilinear transform": "Bilinear Transform"
    },
    {
        " Discrete Fourier transform": "Discrete Fourier Transform"
    },
    {
        " Discrete-time Fourier transform": "Discrete-Time Fourier Transform"
    },
    {
        " Filter design": "Filter Design"
    },
    {
        " Goertzel algorithm": "Goertzel Algorithm"
    },
    {
        " LTI system theory": "Lti System Theory"
    },
    {
        " Minimum phase": "Minimum Phase"
    },
    {
        " s-plane": "S-Plane"
    },
    {
        " Transfer function": "Transfer Function"
    },
    {
        " Z-transform": "Z-Transform"
    },
    {
        "           Analog signal processing": "Analog Signal Processing"
    },
    {
        " Automatic control": "Automatic Control"
    },
    {
        " Computer Engineering": "Computer Engineering"
    },
    {
        " Computer science": "Computer Science"
    },
    {
        " Data compression": "Data Compression"
    },
    {
        " Dataflow programming": "Dataflow Programming"
    },
    {
        " Discrete cosine transform": "Discrete Cosine Transform"
    },
    {
        " Electrical engineering": "Electrical Engineering"
    },
    {
        " Fourier analysis": "Fourier Analysis"
    },
    {
        " Information theory": "Information Theory"
    },
    {
        " Machine learning": "Machine Learning"
    },
    {
        " Real-time computing": "Real-Time Computing"
    },
    {
        " Stream processing": "Stream Processing"
    },
    {
        " Telecommunication": "Telecommunication"
    },
    {
        " Time series": "Time Series"
    },
    {
        " Wavelet": "Wavelet"
    },
    {
        "   ": null
    }
]