   Mary was a  |programming_language|Programming_Language|  designed and implemented by  |RUNIT|Sintef|  at  |Trondheim|Trondheim| ,  |Norway|Norway|  in the 1970s. It borrowed many features from  |ALGOL_68|Algol_68|  but was designed for machine-oriented programming.     An unusual feature of its syntax was that expressions were constructed using the conventional infix operators, but all of them had the same precedence and evaluation went from left to right unless there were brackets. Assignment had the destination on the right and assignment was considered just another operator.     Similar to  |C|C| , several language features appear to have existed to allow programmers to produce reasonably well optimised code, despite a quite primitive code generator in the compiler. These included operators similar to the + et alter in C and explicit register declarations for variables.     Notable features:   Dataflow syntax - values flow from left to right, including assignment.   Most constructs could be used in expressions .   Text-based recursive macros.   Overloaded user-defined operators, not constrained to predefined identifiers as in  |C++|C++| .   Automatic building and dereferencing of pointers from type context.   Scalar range types.   Array and set enumeration in loop iterators.   Dynamic array descriptors .     A book describing Mary was printed in 1974 : Mary Textbook by Reidar Conradi & Per Holager.     Compilers were made for  |Kongsberg_VÃ¥penfabrikks|Kongsberg_Defence_&_Aerospace|  SM-4 and  |Norsk_Data|Norsk_Data|  Nord-10/ND-100 mini-computers. The original Mary compiler was written in NU  |ALGOL|Algol| , ran on the Univac-1100 series and was used to bootstrap a native compiler for  |ND-100|Norsk_Data| / |SINTRAN-III|Sintran| .  |RUNIT|Sintef|  implemented a  |CHILL|Chill_Programming_Language|  compiler written in Mary which ran on ND-100 and had  |Intel_8086|Intel_8086|  and  |80286|80286|  targets. When this compiler was ported to the  |VAX|Vax|  platform, a common backend for Mary and  |CHILL|Chill_Programming_Language|  was implemented. Later, backends for  |i386|I386|  and  |SPARC|Sparc| .