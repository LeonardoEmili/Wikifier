              In  |logic|Logic|  and  |mathematics|Mathematics| , or is the  |truth-functional|Truth_Function|  operator of  disjunction, also known as alternation; the or of a set of operands is true  |if_and_only_if|If_And_Only_If|  one or more of its operands is true. The  |logical_connective|Logical_Connective|  that represents this operator is typically written as ∨ or +.     A   B is true if A is true, or if B is true, or if both A and B are true.     In logic, or by itself means the inclusive or, distinguished from an  |exclusive_or|Exclusive_Or| , which is false when both of its arguments are true, while an or is true in that case.     An operand of a disjunction is called a disjunct.     Related concepts in other fields are:   In  |natural_language|Natural_Language| , the  |coordinating_conjunction|Grammatical_Conjunctioncoordinating_Conjunctions|  or .   In programming languages, the  |short-circuit_or|Short-Circuit_Evaluation| |control_structure|Control_Structure| .   In  |set_theory|Set_Theory| ,  |union|Union| .   In  |predicate_logic|Predicate_Logic| ,  |existential_quantification|Existential_Quantification| .       Or is usually expressed with an infix operator: in mathematics and logic, ∨; in electronics, +; and in most programming languages,  ,  , or or. In  |Jan_Łukasiewiczs|Jan_Łukasiewicz| |prefix_notation_for_logic|Polish_Notationpolish_Notation_For_Logic| , the operator is A, for Polish alternatywa .  |Józef_Maria_Bocheński|Józef_Maria_Bocheński|  , A Précis of Mathematical Logic, translated by Otto Bird from the French and German editions, Dordrecht, North Holland: D. Reidel, passim.       Logical disjunction is an  |operation|Logical_Operation|  on two  |logical_values|Logical_Value| , typically the values of two  |propositions|Proposition| , that has a value of false if and only if both of its operands are false. More generally, a disjunction is a logical formula that can have one or more  |literals|Literal|  separated only by ors. A single literal is often considered to be a degenerate disjunction.     The disjunctive  |identity|Identity_Element|  is false, which is to say that the or of an expression with false has the same value as the original expression. In keeping with the concept of  |vacuous_truth|Vacuous_Truth| , when disjunction is defined as an operator or function of arbitrary  |arity|Arity| , the empty disjunction is generally defined as false.         The  |truth_table|Truth_Table|  of A   B :              The following properties apply to disjunction:      |associativity|Associativity| |commutativity|Commutativity| |distributivity|Distributivity| |idempotency|Idempotency| |monotonicity|Monotonicity| truth-preserving |truth_value|Truth_Value|  of true produces a truth value of true as a result of disjunction.   falsehood-preserving |truth_value|Truth_Value|  of false produces a truth value of false as a result of disjunction.       The mathematical symbol for logical disjunction varies in the literature. In addition to the word or , and the formula Apq , the symbol   , deriving from the Latin word  vel  is commonly used for disjunction. For example: A   B   is read as A or B   . Such a disjunction is false if both A and B are false. In all other cases it is true.     All of the following are disjunctions:   : A   B   :   A   B   : A     B     C   D     E.     The corresponding operation in set theory is the  |set-theoretic_union|Union| .           |Operators|Operator|  corresponding to logical disjunction exist in most  |programming_languages|Programming_Language| .       Disjunction is often used for bitwise operations. Examples:   0 or 0 0   0 or 1 1   1 or 0 1   1 or 1 1   1010 or 1100 1110     The or operator can be used to set bits in a  |bit_field|Bit_Field|  to 1, by or -ing the field with a constant field with the relevant bits set to 1. For example, x x   0b00000001 will force the final bit to 1 while leaving other bits unchanged.       Many languages distinguish between bitwise and logical disjunction by providing two distinct operators; in languages following C, bitwise disjunction is performed with the single pipe and logical disjunction with the double pipe operators.     Logical disjunction is usually  |short-circuited|Short-Circuit_Evaluation| ; that is, if the first operand evaluates to true then the second operand is not evaluated. The logical disjunction operator thus usually constitutes a  |sequence_point|Sequence_Point| .        In a parallel language, it is possible to short-circuit both sides: they are evaluated in parallel,   and if one terminates with value true, the other is interrupted. This operator is thus called the parallel or.     Although in most languages the type of a logical disjunction expression is boolean and thus can only have the value true or false , in some  the logical disjunction operator returns one of its operands: the first operand if it evaluates to a true value, and the second operand otherwise.       The  |Curry–Howard_correspondence|Curry–Howard_Correspondence|  relates a  |constructivist|Constructivism|  form of disjunction to  |tagged_union|Tagged_Union|  types.       The  |membership|Element|  of an element of a  |union_set|Union|  in  |set_theory|Set_Theory|  is defined in terms of a logical disjunction: x ∈ A ∪ B if and only if  ∨ . Because of this, logical disjunction satisfies many of the same identities as set-theoretic union, such as associativity, commutativity, distributivity, and  |de_Morgans_laws|De_Morgans_Laws| , identifying  |logical_conjunction|Logical_Conjunction|  with  |set_intersection|Set_Intersection| ,  |logical_negation|Logical_Negation|  with  |set_complement|Set_Complement| .       As with other notions formalized in  |mathematical_logic|Mathematical_Logic| , the  |meaning|Meaning|  of the natural-language  |coordinating_conjunction|Grammatical_Conjunctioncoordinating_Conjunctions|  or is closely related to but different from the logical or .