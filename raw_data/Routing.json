[
    {
        "Routing is the process of selecting a path for traffic in a ": null
    },
    {
        "network": "Network Theory"
    },
    {
        " or between or across multiple networks. Broadly, routing is performed in many types of networks, including ": null
    },
    {
        "circuit-switched network": "Circuit Switching"
    },
    {
        "s, such as the ": null
    },
    {
        "public switched telephone network": "Public Switched Telephone Network"
    },
    {
        " , and ": null
    },
    {
        "computer network": "Computer Network"
    },
    {
        "s, such as the ": null
    },
    {
        "Internet": "Internet"
    },
    {
        ".     In packet switching networks, routing is the higher-level decision making that directs ": null
    },
    {
        "network packets": "Network Packet"
    },
    {
        "from their source toward their destination through intermediate ": null
    },
    {
        "network nodes": "Node"
    },
    {
        " by specific packet forwarding mechanisms. ": null
    },
    {
        "Packet forwarding": "Packet Forwarding"
    },
    {
        " is the transit of network packets from one ": null
    },
    {
        "network interface": "Network Interface"
    },
    {
        " to another. Intermediate nodes are typically ": null
    },
    {
        "network hardware": "Network Hardware"
    },
    {
        " devices such as ": null
    },
    {
        "routers": "Router"
    },
    {
        ", ": null
    },
    {
        "gateways": "Gateway"
    },
    {
        ", ": null
    },
    {
        "firewalls": "Firewall"
    },
    {
        ", or ": null
    },
    {
        "switches": "Network Switch"
    },
    {
        ". General-purpose ": null
    },
    {
        "computers": "Computer"
    },
    {
        "also forward packets and perform routing, although they have no specially optimized hardware for the task.     The routing process usually directs forwarding on the basis of ": null
    },
    {
        "routing table": "Routing Table"
    },
    {
        "s, which maintain a record of the routes to various network destinations. Routing tables may be specified by an administrator, learned by observing network traffic or built with the assistance of ": null
    },
    {
        "routing protocol": "Routing Protocol"
    },
    {
        "s.     Routing, in a narrower sense of the term, often refers to ": null
    },
    {
        "IP routing": "Ip Routing"
    },
    {
        " and is contrasted with ": null
    },
    {
        "bridging": "Bridging"
    },
    {
        ". IP routing assumes that ": null
    },
    {
        "network address": "Network Address"
    },
    {
        "es are structured and that similar addresses imply proximity within the network. Structured addresses allow a single routing table entry to represent the route to a group of devices. In large networks, structured addressing outperforms unstructured addressing . Routing has become the dominant form of addressing on the Internet. Bridging is still widely used within ": null
    },
    {
        "local area network": "Local Area Network"
    },
    {
        "s.           Routing schemes differ in how they deliver messages:   ": null
    },
    {
        "unicast": "Unicast"
    },
    {
        " delivers a message to a single specific node   ": null
    },
    {
        "broadcast": "Broadcasting"
    },
    {
        " delivers a message to all nodes in the network   ": null
    },
    {
        "multicast": "Multicast"
    },
    {
        " delivers a message to a group of nodes that have expressed interest in receiving the message   ": null
    },
    {
        "anycast": "Anycast"
    },
    {
        " delivers a message to any one out of a group of nodes, typically the one nearest to the source   ": null
    },
    {
        "geocast": "Geocast"
    },
    {
        " delivers a message to a group of nodes based on ": null
    },
    {
        "geographic location": "Geographic Location"
    },
    {
        "     Unicast is the dominant form of message delivery on the Internet. This article focuses on unicast routing algorithms.       With ": null
    },
    {
        "static routing": "Static Routing"
    },
    {
        ", small networks may use manually configured routing tables. Larger networks have complex ": null
    },
    {
        "topologies": "Network Topology"
    },
    {
        " that can change rapidly, making the manual construction of routing tables unfeasible. Nevertheless, most of the ": null
    },
    {
        "public switched telephone network": "Public Switched Telephone Network"
    },
    {
        " uses pre-computed routing tables, with fallback routes if the most direct route becomes blocked .     ": null
    },
    {
        "Dynamic routing": "Dynamic Routing"
    },
    {
        " attempts to solve this problem by constructing routing tables automatically, based on information carried by ": null
    },
    {
        "routing protocol": "Routing Protocol"
    },
    {
        "s, allowing the network to act nearly autonomously in avoiding network failures and blockages. Dynamic routing dominates the Internet. Examples of dynamic-routing protocols and algorithms include ": null
    },
    {
        "Routing Information Protocol": "Routing Information Protocol"
    },
    {
        " , ": null
    },
    {
        "Open Shortest Path First": "Open Shortest Path First"
    },
    {
        " and ": null
    },
    {
        "Enhanced Interior Gateway Routing Protocol": "Enhanced Interior Gateway Routing Protocol"
    },
    {
        " .          Distance vector algorithms use the ": null
    },
    {
        "Bellman–Ford algorithm": "Bellman–Ford Algorithm"
    },
    {
        ". This approach assigns a cost number to each of the links between each node in the network. Nodes send information from point A to point B via the path that results in the lowest total cost .     When a node first starts, it only knows of its immediate neighbours, and the direct cost involved in reaching them.  Each node, on a regular basis, sends to each neighbour node its own current assessment of the total cost to get to all the destinations it knows of. The neighbouring nodes examine this information and compare it to what they already know; anything that represents an improvement on what they already have, they insert in their own table. Over time, all the nodes in the network discover the best next hop and total cost for all destinations.     When a network node goes down, any nodes that used it as their next hop discard the entry and convey the updated routing information to all adjacent nodes, which in turn repeat the process. Eventually all the nodes in the network receive the updates, and discover new paths to all the destinations that dont involve the down node.          When applying link-state algorithms, a ": null
    },
    {
        "graphical map": "Graph"
    },
    {
        " of the network is the fundamental data used for each node. To produce its map, each node floods the entire network with information about the other nodes it can connect to. Each node then independently assembles this information into a map. Using this map, each router independently determines the least-cost path from itself to every other node using a standard ": null
    },
    {
        "shortest paths": "Shortest Path Problem"
    },
    {
        " algorithm such as ": null
    },
    {
        "Dijkstras algorithm": "Dijkstras Algorithm"
    },
    {
        ". The result is a ": null
    },
    {
        "tree graph": "Tree"
    },
    {
        " rooted at the current node, such that the path through the tree from the root to any other node is the least-cost path to that node. This tree then serves to construct the routing table, which specifies the best next hop to get from the current node to any other node.          A link-state routing algorithm optimized for ": null
    },
    {
        "mobile ad hoc networks": "Mobile Ad Hoc Network"
    },
    {
        "is the optimized Link State Routing Protocol . RFC 3626 OLSR is proactive; it uses Hello and Topology Control messages to discover and disseminate link-state information through the mobile ad hoc network. Using Hello messages, each node discovers 2-hop neighbor information and elects a set of multipoint relays . MPRs distinguish OLSR from other link-state routing protocols.           Distance vector and link state routing are both intra-domain routing protocols. They are used inside an ": null
    },
    {
        "autonomous system": "Autonomous System"
    },
    {
        ", but not between autonomous systems. Both of these routing protocols become intractable in large networks and cannot be used in ": null
    },
    {
        "Inter-domain": "Inter-Domain"
    },
    {
        " routing. Distance vector routing is subject to instability if there are more than a few hops in the domain. Link state routing needs huge amount of resources to calculate routing tables. It also creates heavy traffic due to flooding.     Path vector routing is used for inter-domain routing. It is similar to distance vector routing. Path vector routing assumes that one node in each autonomous system acts on behalf of the entire autonomous system. This node is called the speaker node. The speaker node creates a routing table and advertises it to neighboring speaker nodes in neighboring autonomous systems. The idea is the same as distance vector routing except that only speaker nodes in each autonomous system can communicate with each other. The speaker node advertises the path, not the metric, of the nodes in its autonomous system or other autonomous systems.   Path vector routing is discussed in RFC 1322; the path vector routing algorithm is somewhat similar to the distance vector algorithm in the sense that each border router advertises the destinations it can reach to its neighboring router. However, instead of advertising networks in terms of a destination and the distance to that destination, networks are advertised as destination addresses and path descriptions to reach those destinations. A route is defined as a pairing between a destination and the attributes of the path to that destination, thus the name, path vector routing, where the routers receive a vector that contains paths to a set of destinations.   The path, expressed in terms of the domains traversed so far, is carried in a special path attribute that records the sequence of routing domains through which the reachability information has passed.       Path selection involves applying a ": null
    },
    {
        "routing metric": "Metrics"
    },
    {
        " to multiple routes to select the best route. Most routing algorithms use only one network path at a time. ": null
    },
    {
        "Multipath routing": "Multipath Routing"
    },
    {
        " techniques enable the use of multiple alternative paths.     In computer networking, the metric is computed by a routing algorithm, and can cover information such as ": null
    },
    {
        "bandwidth": "Bandwidth"
    },
    {
        ", ": null
    },
    {
        "network delay": "Network Delay"
    },
    {
        ", ": null
    },
    {
        "hop count": "Hop Count"
    },
    {
        ", path cost, load, ": null
    },
    {
        "MTU": "Mtu"
    },
    {
        " , reliability, and communication cost . The routing table stores only the best possible routes, while ": null
    },
    {
        "link-state": "Link-State"
    },
    {
        " or topological databases may store all other information as well.     In case of overlapping or equal routes, algorithms consider the following elements to decide which routes to install into the routing table :   Prefix-LengthMetric Administrative distance ": null
    },
    {
        "heuristic": "Heuristic"
    },
    {
        " to select between routes learned from different routing protocols. ": null
    },
    {
        "Cisco": "Cisco"
    },
    {
        " routers, for example, attribute a value known as the ": null
    },
    {
        "administrative distance": "Administrative Distance"
    },
    {
        " to each route, where smaller administrative distances indicate routes learned from a supposedly more reliable protocol.     A local network administrator, in special cases, can set up host-specific routes to a particular device that provides more control over network usage, permits testing, and better overall security. This is useful for debugging network connections or routing tables.     In some small systems, a single central device decides ahead of time the complete path of every packet.   In some other small systems, whichever edge device injects a packet into the network decides ahead of time the complete path of that particular packet.   In both of these systems, that route-planning device needs to know a lot of information about what devices are connected to the network and how they are connected to each other.   Once it has this information, it can use an algorithm such as ": null
    },
    {
        "A search algorithm": "A Search Algorithm"
    },
    {
        " to find the best path.     In high-speed systems, there are so many packets transmitted every second that it is infeasible for a single device to calculate the complete path for each and every packet. Early high-speed systems dealt with this by setting up a ": null
    },
    {
        "circuit switching": "Circuit Switching"
    },
    {
        " relay channel": "Relay Channel"
    },
    {
        " once for the first packet between some source and some destination; later packets between that same source and that same destination continue to follow the same path without recalculating until the channel ": null
    },
    {
        "teardown": "Teardown"
    },
    {
        ". Later high-speed systems inject packets into the network without any one device ever calculating a complete path for that packet—multiple agents.     In large systems, there are so many connections between devices, and those connections change so frequently, that it is infeasible for any one device to even know how all the devices are connected to each other, much less calculate a complete path through them.   Such systems generally use ": null
    },
    {
        "next-hop": "Hop Next Hop"
    },
    {
        " routing.     Most systems use a deterministic ": null
    },
    {
        "dynamic routing": "Dynamic Routing"
    },
    {
        " algorithm:   When a device chooses a path to a particular final destination, that device always chooses the same path to that destination until it receives information that makes it think some other path is better.   A few routing algorithms do not use a deterministic algorithm to find the best link for a packet to get from its original source to its final destination.   Instead, to avoid congestion in switched systems or network hot spots in packet systems, a few algorithms use a randomized algorithm—Valiants paradigm—that routes a path to a randomly picked intermediate destination, and from there to its true final destination.   Michael Mitzenmacher; Andréa W. Richa; Ramesh Sitaraman.   .   Section Randomized Protocols for Circuit Routing .   p. 34.     Stefan Haas.   .   1998.   p. 15.   quote:   To eliminate network hot spots, ... a two phase routing algorithm.   This involves every packet being first sent to a randomly chosen intermediate destination;   from the intermediate destination it is forwarded to its final destination.   This algorithm, referred to as Universal Routing, is designed to maximize capacity and minimize delay   under conditions of heavy load.     In many early telephone switches, a ": null
    },
    {
        "randomizer": "Randomizer"
    },
    {
        " was often used to select the start of a path through a ": null
    },
    {
        "multistage switching fabric": "1Ess Switchswitching Fabric"
    },
    {
        ".     Depending on the application for which path selection is performed, different metrics can be used. For example, for web requests one can use minimum latency paths to minimize web page load time, or for bulk data transfers one can choose the least utilized path to balance load across the network and increase throughput. A popular path selection objective is to reduce the average completion times of traffic flows and the total network bandwidth consumption which basically lead to better use of network capacity. Recently, a path selection metric was proposed that computes the total number of bytes scheduled on the edges per path as selection metric.  An empirical analysis of several path selection metrics, including this new proposal, has been made available.        In some networks, routing is complicated by the fact that no single entity is responsible for selecting paths; instead, multiple entities are involved in selecting paths or even parts of a single path. Complications or inefficiency can result if these entities choose paths to optimize their own objectives, which may conflict with the objectives of other participants.     A classic example involves traffic in a road system, in which each driver picks a path that minimizes their travel time. With such routing, the ": null
    },
    {
        "equilibrium": "Nash Equilibrium"
    },
    {
        " routes can be longer than optimal for all drivers. In particular, ": null
    },
    {
        "Braess paradox": "Braess Paradox"
    },
    {
        " shows that adding a new road can lengthen travel times for all drivers.     In another model, for example, used for routing ": null
    },
    {
        "automated guided vehicles": "Automated Guided Vehicle"
    },
    {
        " on a terminal, reservations are made for each vehicle to prevent simultaneous use of the same part of an infrastructure. This approach is also referred to as context-aware routing.   Jonne Zutt, Arjan J.C. van Gemund, Mathijs M. de Weerdt, and Cees Witteveen . . In R.R. Negenborn and Z. Lukszo and H. Hellendoorn Intelligent Infrastructures, Ch. 14, pp. 355–382. Springer.     The Internet is partitioned into ": null
    },
    {
        "autonomous systems": "Autonomous System"
    },
    {
        " such as ": null
    },
    {
        "internet service providers": "Internet Service Provider"
    },
    {
        ", each of which controls routes involving its network, at multiple levels. First, AS-level paths are selected via the ": null
    },
    {
        "BGP": "Border Gateway Protocol"
    },
    {
        " protocol, which produces a sequence of ASs through which packets flow. Each AS may have multiple paths, offered by neighboring ASs, from which to choose. Its decision often involves business relationships with these neighboring ASs, Matthew Caesar and ": null
    },
    {
        "Jennifer Rexford": "Jennifer Rexford"
    },
    {
        ". . IEEE Network Magazine, special issue on Interdomain Routing, Nov/Dec 2005. which may be unrelated to path quality or latency. Second, once an AS-level path has been selected, there are often multiple corresponding router-level paths, in part because two ISPs may be connected in multiple locations. In choosing the single router-level path, it is common practice for each ISP to employ ": null
    },
    {
        "hot-potato routing": "Hot-Potato Routing"
    },
    {
        "A and B. Each has a presence in ": null
    },
    {
        "New York": "New York City"
    },
    {
        ", connected by a fast link with latency 5 ": null
    },
    {
        "ms": "Millisecond"
    },
    {
        "—and each has a presence in ": null
    },
    {
        "London": "London"
    },
    {
        " connected by a 5 ms link. Suppose both ISPs have trans-Atlantic links that connect their two networks, but As link has latency 100 ms and Bs has latency 120 ms. When routing a message from a source in A s London network to a destination in B s New York network, A may choose to immediately send the message to B in London. This saves A the work of sending it along an expensive trans-Atlantic link, but causes the message to experience latency 125 ms when the other route would have been 20 ms faster.     A 2003 measurement study of Internet routes found that, between pairs of neighboring ISPs, more than 30% of paths have inflated latency due to hot-potato routing, with 5% of paths being delayed by at least 12 ms. Inflation due to AS-level path selection, while substantial, was attributed primarily to BGPs lack of a mechanism to directly optimize for latency, rather than to selfish routing policies. It was also suggested that, were an appropriate mechanism in place, ISPs would be willing to cooperate to reduce latency rather than use hot-potato routing. Neil Spring, Ratul Mahajan, and Thomas Anderson. . Proc. ": null
    },
    {
        "SIGCOMM": "Sigcomm"
    },
    {
        " 2003.     Such a mechanism was later published by the same authors, first for the case of two ISPs Ratul Mahajan, David Wetherall, and Thomas Anderson. . Proc. ": null
    },
    {
        "NSDI": "Nsdi"
    },
    {
        " 2005. and then for the global case. Ratul Mahajan, David Wetherall, and Thomas Anderson. . Proc. ": null
    },
    {
        "NSDI": "Nsdi"
    },
    {
        " 2007.       As the Internet and IP networks become ": null
    },
    {
        "mission critical": "Mission Critical"
    },
    {
        " business tools, there has been increased interest in techniques and methods to monitor the routing posture of networks. Incorrect routing or routing issues cause undesirable performance degradation, ": null
    },
    {
        "flapping": "Route Flapping"
    },
    {
        " and/or downtime. Monitoring routing in a network is achieved using ": null
    },
    {
        "route analytics": "Route Analytics"
    },
    {
        " tools and techniques.       In networks where a logically centralized control is available over the forwarding state, for example using ": null
    },
    {
        "Software-defined networking": "Software Defined Networking"
    },
    {
        ", routing techniques can be used that aim to optimize global and network-wide performance metrics. This has been used by large internet companies that operate many data centers in different geographical locations attached using private optical links examples of which includes Microsofts Global WAN,  Facebooks Express Backbone,  and Googles B4.  Global performance metrics to optimize include maximizing network utilization, minimizing traffic flow completion times, and maximizing the traffic delivered prior to specific deadlines. Minimizing flow completion times over private WAN, particularly, has not received much attention from the research community. However, with the increasing number of businesses that operate globally distributed data centers connected using private inter-data center networks, it is likely to see increasing research effort in this realm.  A very recent work on reducing the completion times of flows over private WAN discusses modeling routing as a graph optimization problem by pushing all the queuing to the end-points. Authors also propose a heuristic to solve the problem efficiently while sacrificing negligible performance. ": null
    }
]