In mathematics, a finitary relation is a property that assigns  |truth_values|Truth_Values|  to finite  |tuples|Tuple|  of elements. Typically, the property describes a possible connection between the components of a -tuple. For a given  |set|Set|  of -tuples, a truth value is assigned to each -tuple according to whether the property does or does not hold. When , one has the most common version, a  |binary_relation|Binary_Relation| .         Relation is formally defined in the next section. In this section we introduce the concept of a relation with a familiar everyday example. Consider the relation involving three roles that people might play, expressed in a statement of the form X thinks that Y likes Z   . The facts of a concrete situation could be organized in a table like the following:          Each row of the table records a fact or makes an assertion of the form X thinks that Y likes Z   . For instance, the first row says, in effect, Alice thinks that Bob likes Denise . The table represents a relation S over the set P of people under discussion:     : P .     The data of the table are equivalent to the following set of ordered triples:     : S .     It is usual to write S to say the same thing as the first row of the table. The relation S is a ternary relation, since there are three items involved in each row. The relation itself is a  |mathematical_object|Mathematical_Object|  defined in terms of concepts from  |set_theory|Set_Theory|  , that carries all of the information from the table in one neat package. Mathematically, then, a relation is simply an ordered set .     The table for relation S is an extremely simple example of a  |relational_database|Relational_Database| . The theoretical aspects of databases are the specialty of one branch of  |computer_science|Computer_Science| , while their practical impacts have become all too familiar in our everyday lives. Computer scientists, logicians, and mathematicians, however, tend to see different things when they look at these concrete examples and samples of the more general concept of a relation.     For one thing, databases are designed to deal with empirical data, and experience is always finite, whereas mathematics at the very least concerns itself with potential infinity. This difference in perspective brings up a number of ideas that may be usefully introduced at this point, if by no means covered in depth.         The variable k giving the number of places in the relation, 3 for the above example, is a  |non_negative|Non_Negative| |_integer|Integer| , called the relations  arity , adicity, or  dimension . A relation with k places is variously called a k -ary, a k -adic, or a k -dimensional relation. Relations with a finite number of places are called finite-place or  finitary  relations. It is possible to generalize the concept to include infinitary relations between infinitudes of individuals, for example  |infinite_sequences|Infinite_Sequence| ; however, in this article only finitary relations are discussed, which will from now on simply be called relations.     Since there is only one 0-tuple, the so-called empty tuple , there are only two zero-place relations: the one that always holds, and the one that never holds. They are sometimes useful for constructing the base case of an  |induction|Mathematical_Induction|  argument. One-place relations are called unary relations. For instance, any set  can be viewed as a collection of individuals having some property . Two-place relations are called  |binary_relations|Binary_Relation|  or, in the past, dyadic relations.  |Binary_relations|Binary_Relation|  are very common, given the ubiquity of relations such as:    |Equality|Equality|  and  |inequality|Inequality| , denoted by signs such as and  .