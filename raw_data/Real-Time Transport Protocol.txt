The Real-time Transport Protocol  is a  |network_protocol|Network_Protocol|  for delivering audio and video over  |IP_networks|Ip_Networks| . RTP is used in communication and entertainment systems that involve  |streaming_media|Streaming_Media| , such as  |telephony|Telephony| ,  |video_teleconference|Video_Teleconference|  applications including  |WebRTC|Webrtc| ,  |television_services|Iptv|  and web-based  |push_to_talk|Push_To_Talk|  features.     RTP typically runs over  |User_Datagram_Protocol|User_Datagram_Protocol|  . RTP is used in conjunction with the  |RTP_Control_Protocol|Rtp_Control_Protocol|  . While RTP carries the media streams , RTCP is used to monitor transmission statistics and  |quality_of_service|Quality_Of_Service|  and aids  |synchronization|Synchronization|  of multiple streams. RTP is one of the technical foundations of  |Voice_over_IP|Voice_Over_Ip|  and in this context is often used in conjunction with a  |signaling_protocol|Signaling_Protocol|  such as the  |Session_Initiation_Protocol|Session_Initiation_Protocol|  which establishes connections across the network.     RTP was developed by the Audio-Video Transport Working Group of the  |Internet_Engineering_Task_Force|Internet_Engineering_Task_Force|  and first published in 1996 as , superseded by  in 2003.       RTP is designed for  |end_to_end|End_To_End_Principle| ,  |real_time|Real_Time_Computing|  transfer of  |streaming_media|Streaming_Media| . The protocol provides facilities for  |jitter|Jitter|  compensation and detection of  |packet_loss|Packet_Loss|  and  |out_of_order_delivery|Out_Of_Order_Delivery| , which are common especially during UDP transmissions on an IP network. RTP allows data transfer to multiple destinations through  |IP_multicast|Ip_Multicast| .  RTP is regarded as the primary standard for audio/video transport in IP networks and is used with an associated profile and payload format. The design of RTP is based on the architectural principle known as  |application_layer_framing|Application_Layer_Framing|  where protocol functions are implemented in the application as opposed to in the operating systems  |protocol_stack|Protocol_Stack| .     Real-time  |multimedia|Multimedia|  streaming applications require timely delivery of information and often can tolerate some packet loss to achieve this goal. For example, loss of a packet in audio application may result in loss of a fraction of a second of audio data, which can be made unnoticeable with suitable  |error_concealment|Error_Concealment|  algorithms.  The  |Transmission_Control_Protocol|Transmission_Control_Protocol|  , although standardized for RTP use,  is not normally used in RTP applications because TCP favors reliability over timeliness. Instead the majority of the RTP implementations are built on the  |User_Datagram_Protocol|User_Datagram_Protocol|  . Other transport protocols specifically designed for multimedia sessions are  |SCTP|Sctp|   and  |DCCP|Dccp| ,  although, , they are not in widespread use.      RTP was developed by the Audio/Video Transport working group of the IETF standards organization. RTP is used in conjunction with other protocols such as  |H_323|H_323|  and  |RTSP|Rtsp| .  The RTP specification describes two protocols: RTP and RTCP. RTP is used for transfer of multimedia data, and the RTCP is used to periodically send control information and QoS parameters.     The data transfer protocol, RTP, carries real-time data. Information provided by this protocol include timestamps , sequence numbers and the payload format which indicates the encoded format of the data.  The control protocol, RTCP, is used for quality of service feedback and synchronization between the media streams. The bandwidth of RTCP traffic compared to RTP is small, typically around 5%.      RTP sessions are typically initiated between communicating peers using a signaling protocol, such as  |H_323|H_323| , the  |Session_Initiation_Protocol|Session_Initiation_Protocol|  , RTSP, or  |Jingle|Jingle|  . These protocols may use the  |Session_Description_Protocol|Session_Description_Protocol|  to specify the parameters for the sessions. SDP: Session Description Protocol, M. Handley, V. Jacobson, C. Perkins, IETF     An RTP session is established for each multimedia stream. Audio and video streams may use separate RTP sessions, enabling a receiver to selectively receive components of a particular stream.  A session consists of a destination  |IP_address|Ip_Address|  with a pair of ports for RTP and RTCP. The specification recommends that RTP port numbers are chosen to be even and that each associated RTCP port be the next higher odd number.  However, a single port is chosen for RTP and RTCP in applications that multiplex the protocols.  RTP and RTCP typically use unprivileged UDP ports ,  but may also use other transport protocols, most notably,  |SCTP|Sctp|  and  |DCCP|Dccp| , as the protocol design is transport independent.            One of the design considerations for RTP is to carry a range of multimedia formats and allow new formats without revising the RTP standard. To this end, the information required by a specific application of the protocol is not included in the generic RTP header, but is instead provided through separate RTP profiles and associated payload formats. For each class of application , RTP defines a profile and one or more associated payload formats.  A complete specification of RTP for a particular application usage requires profile and payload format specifications.       The profile defines the codecs used to encode the payload data and their mapping to payload format codes in the Payload Type field of the RTP header. Each profile is accompanied by several payload format specifications, each of which describes the transport of a particular encoded data. The audio payload formats include  |G_711|G_711| ,  |G_723|G_723| ,  |G_726|G_726| ,  |G_729|G_729| ,  |GSM|Gsm| ,  |QCELP|Qcelp| ,  |MP3|Mp3| , and  |DTMF|Dtmf| , and the video payload formats include  |H_261|H_261| ,  |H_263|H_263| ,  |H_264|H_264| ,  |H_265|H_265|  and  |MPEG_1|Mpeg_1| / |MPEG_2|Mpeg_2| .  The mapping of  |MPEG_4|Mpeg_4|  audio/video streams to RTP packets is specified in , and H.263 video payloads are described in .      Examples of RTP profiles include:   The RTP profile for Audio and video conferences with minimal control  defines a set of static payload type assignments, and a dynamic mechanism for mapping between a payload format, and a PT value using  |Session_Description_Protocol|Session_Description_Protocol|  .   The  |Secure_Real_time_Transport_Protocol|Secure_Real_Time_Transport_Protocol|   defines an RTP profile that provides  |cryptographic|Cryptography|  services for the transfer of payload data.    The experimental Control Data Profile for RTP for  |machine_to_machine|Machine_To_Machine|  communications.        RTP packets are created at the application layer and handed to the transport layer for delivery. Each unit of RTP media data created by an application begins with the RTP packet header.        The RTP header has a minimum size of 12 bytes. After the header, optional header extensions may be present. This is followed by the RTP payload, the format of which is determined by the particular class of application.  The fields in the header are as follows:   Version   P    X extension header between the header and payload data. The extension header is application or profile specific.   CC  M  PT    Sequence number |out_of_order_delivery|Out_Of_Order_Delivery| . The initial value of the sequence number should be randomized to make  |known_plaintext_attacks|Known_Plaintext_Attack|  on  |Secure_Real_time_Transport_Protocol|Secure_Real_Time_Transport_Protocol|  more difficult.  Timestamp The granularity of the timing is application specific. For example, an audio application that samples data once every 125  Âµs would use that value as its clock resolution. Video streams typically use a 90  kHz clock. The clock granularity is one of the details that is specified in the RTP profile for an application. Peterson, p.   SSRC CSRC Contributing source IDs enumerate contributing sources to a stream which has been generated from multiple sources.  Header extension The first 32-bit word contains a profile-specific identifier and a length specifier that indicates the length of the extension in 32-bit units, excluding the 32 bits of the extension header. The extension header data follows.        A functional network-based system includes other protocols and standards in conjunction with RTP. Protocols such as SIP,  |Jingle|Jingle| , RTSP,  |H_225|H_225|  and  |H_245|H_245|  are used for session initiation, control and termination. Other standards, such as H.264, MPEG and H.263, are used to encode the payload data as specified by the applicable RTP profile.      An RTP sender captures the multimedia data, then encodes, frames and transmits it as RTP packets with appropriate timestamps and increasing timestamps and sequence numbers. The sender sets the payload type field in accordance with connection negotiation and the RTP profile in use. The RTP receiver detects missing packets and may reorder packets. It decodes the media data in the packets according to the payload type and presents the stream to its user.       , Standard 64, RTP: A Transport Protocol for Real-Time Applications , Standard 65, RTP Profile for Audio and Video Conferences with Minimal Control , Media Type Registration of RTP Payload Formats , Media Type Registration of Payload Formats in the RTP Profile for Audio and Video Conferences , A Taxonomy of Semantics and Mechanisms for Real-Time Transport Protocol Sources , RTP Payload Format for 12-bit DAT Audio and 20- and 24-bit Linear Sampled Audio , RTP Payload Format for H.264 Video , RTP Payload Format for Transport of MPEG-4 Elementary Streams , RTP Payload Format for MPEG-4 Audio/Visual Streams , RTP Payload Format for MPEG1 / MPEG2 Video  , RTP Payload Format for Uncompressed Video ,  RTP Payload Format for MIDI  , An Implementation Guide for RTP MIDI , RTP Payload Format for the Opus Speech and Audio Codec , RTP Payload Format for High Efficiency Video Coding  .