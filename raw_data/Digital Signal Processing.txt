     Digital signal processing  is the use of  |digital_processing|Digital_Processing| , such as by computers or more specialized  |digital_signal_processors|Digital_Signal_Processor| , to perform a wide variety of  |signal_processing|Signal_Processing|  operations. The signals processed in this manner are a sequence of numbers that represent  |samples|Sampling|  of a  |continuous_variable|Continuous_Variable|  in a domain such as time, space, or frequency.     Digital signal processing and  |analog_signal_processing|Analog_Signal_Processing|  are subfields of signal processing. DSP applications include  |audio|Audio_Signal_Processing|  and  |speech_processing|Speech_Processing| ,  |sonar|Sonar| ,  |radar|Radar|  and other  |sensor_array|Sensor_Array|  processing,  |spectral_density_estimation|Spectral_Density_Estimation| ,  |statistical_signal_processing|Statistical_Signal_Processing| ,  |digital_image_processing|Digital_Image_Processing| ,  |data_compression|Data_Compression| ,  |video_coding|Video_Coding| ,  |audio_coding|Audio_Coding| ,  |image_compression|Image_Compression| , signal processing for  |telecommunications|Telecommunication| ,  |control_systems|Control_System| ,  |biomedical_engineering|Biomedical_Engineering| , and  |seismology|Seismology| , among others.     DSP can involve linear or nonlinear operations. Nonlinear signal processing is closely related to  |nonlinear_system_identification|Nonlinear_System_Identification|   and can be implemented in the  |time|Time_Domain| ,  |frequency|Frequency_Domain| , and  |spatio-temporal_domains|Film| .      The application of digital computation to signal processing allows for many advantages over analog processing in many applications, such as  |error_detection_and_correction|Error_Detection_And_Correction|  in transmission as well as  |data_compression|Data_Compression| .  Digital signal processing is also fundamental to  |digital_technology|Digital_Technology| , such as  |digital_telecommunication|Digital_Telecommunication|  and  |wireless_communications|Wireless_Communications| .  DSP is applicable to both  |streaming_data|Streaming_Data|  and static data.            To digitally analyze and manipulate an analog signal, it must be digitized with an  |analog-to-digital_converter|Analog-To-Digital_Converter|  .  Sampling is usually carried out in two stages,  |discretization|Discretization|  and  |quantization|Quantization| . Discretization means that the signal is divided into equal intervals of time, and each interval is represented by a single measurement of amplitude. Quantization means each amplitude measurement is approximated by a value from a finite set. Rounding  |real_numbers|Real_Numbers|  to integers is an example.     The  |Nyquist–Shannon_sampling_theorem|Nyquist–Shannon_Sampling_Theorem|  states that a signal can be exactly reconstructed from its samples if the sampling frequency is greater than twice the highest frequency component in the signal. In practice, the sampling frequency is often significantly higher than twice the  |Nyquist_frequency|Nyquist_Frequency| .      Theoretical DSP analyses and derivations are typically performed on  |discrete-time_signal|Discrete-Time_Signal|  models with no amplitude inaccuracies , created by the abstract process of  |sampling|Sampling| . Numerical methods require a quantized signal, such as those produced by an ADC. The processed result might be a frequency spectrum or a set of statistics. But often it is another quantized signal that is converted back to analog form by a  |digital-to-analog_converter|Digital-To-Analog_Converter|  .       In DSP, engineers usually study digital signals in one of the following domains:  |time_domain|Time_Domain|  , spatial domain ,  |frequency_domain|Frequency_Domain| , and  |wavelet|Wavelet|  domains. They choose the domain in which to process a signal by making an informed assumption as to which domain best represents the essential characteristics of the signal and the processing to be applied to it. A sequence of samples from a measuring device produces a temporal or spatial domain representation, whereas a  |discrete_Fourier_transform|Discrete_Fourier_Transform|  produces the frequency domain representation.            The most common processing approach in the time or space domain is enhancement of the input signal through a method called filtering.  |Digital_filter|Digital_Filter| ing generally consists of some linear transformation of a number of surrounding samples around the current sample of the input or output signal. There are various ways to characterize filters; for example:     A linear filter is a  |linear_transformation|Linear_Transformation|  of input samples; other filters are  nonlinear . Linear filters satisfy the  |superposition_principle|Superposition_Principle| , i.e. if an input is a weighted linear combination of different signals, the output is a similarly weighted linear combination of the corresponding output signals.   A causal filter uses only previous samples of the input or output signals; while a non-causal filter uses future input samples. A non-causal filter can usually be changed into a causal filter by adding a delay to it.   A time-invariant filter has constant properties over time; other filters such as  |adaptive_filters|Adaptive_Filter|  change in time.   A stable filter produces an output that converges to a constant value with time, or remains bounded within a finite interval. An unstable filter can produce an output that grows without bounds, with bounded or even zero input.   A  |finite_impulse_response|Finite_Impulse_Response|  filter uses only the input signals, while an  |infinite_impulse_response|Infinite_Impulse_Response|  filter uses both the input signal and previous samples of the output signal. FIR filters are always stable, while IIR filters may be unstable.     A filter can be represented by a  |block_diagram|Block_Diagram| , which can then be used to derive a sample processing  |algorithm|Algorithm|  to implement the filter with hardware instructions. A filter may also be described as a  |difference_equation|Difference_Equation| , a collection of  |zeros_and_poles|Zeros_And_Poles|  or an  |impulse_response|Impulse_Response|  or  |step_response|Step_Response| .     The output of a linear digital filter to any given input may be calculated by  |convolving|Convolution|  the input signal with the  |impulse_response|Impulse_Response| .            Signals are converted from time or space domain to the frequency domain usually through use of the  |Fourier_transform|Fourier_Transform| . The Fourier transform converts the time or space information to a magnitude and phase component of each frequency. With some applications, how the phase varies with frequency can be a significant consideration. Where phase is unimportant, often the Fourier transform is converted to the power spectrum, which is the magnitude of each frequency component squared.     The most common purpose for analysis of signals in the frequency domain is analysis of signal properties. The engineer can study the spectrum to determine which frequencies are present in the input signal and which are missing. Frequency domain analysis is also called spectrum- or spectral analysis.     Filtering, particularly in non-realtime work can also be achieved in the frequency domain, applying the filter and then converting back to the time domain. This can be an efficient implementation and can give essentially any filter response including excellent approximations to  |brickwall_filters|Brickwall_Filter| .     There are some commonly-used frequency domain transformations. For example, the  |cepstrum|Cepstrum|  converts a signal to the frequency domain through Fourier transform, takes the logarithm, then applies another Fourier transform. This emphasizes the harmonic structure of the original spectrum.       Digital filters come in both IIR and FIR types. Whereas FIR filters are always stable, IIR filters have feedback loops that may become unstable and oscillate. The  |Z-transform|Z-Transform|  provides a tool for analyzing stability issues of digital IIR filters. It is analogous to the  |Laplace_transform|Laplace_Transform| , which is used to design and analyze analog IIR filters.          In  |numerical_analysis|Numerical_Analysis|  and  |functional_analysis|Functional_Analysis| , a  |discrete_wavelet_transform|Discrete_Wavelet_Transform|  is any  |wavelet_transform|Wavelet_Transform|  for which the  |wavelets|Wavelet|  are discretely sampled. As with other wavelet transforms, a key advantage it has over  |Fourier_transforms|Fourier_Transform|  is temporal resolution: it captures both frequency and location information.The accuracy of the joint time-frequency resolution is limited by the  |uncertainty_principle|Uncertainty_Principlesignal_Processing|  of time-frequency.       Applications of DSP include  |audio_signal_processing|Audio_Signal_Processing| ,  |audio_compression|Audio_Compression| ,  |digital_image_processing|Digital_Image_Processing| ,  |video_compression|Video_Compression| ,  |speech_processing|Speech_Processing| ,  |speech_recognition|Speech_Recognition| ,  |digital_communications|Digital_Communication| ,  |digital_synthesizers|Digital_Synthesizer| ,  |radar|Radar| ,  |sonar|Sonar| ,  |financial_signal_processing|Financial_Signal_Processing| ,  |seismology|Seismology|  and  |biomedicine|Biomedicine| . Specific examples include  |speech_coding|Speech_Coding|  and transmission in digital  |mobile_phones|Mobile_Phone| ,  |room_correction|Digital_Room_Correction|  of sound in  |hi-fi|Hi-Fi|  and  |sound_reinforcement|Sound_Reinforcement|  applications,  |weather_forecasting|Weather_Forecasting| ,  |economic_forecasting|Economic_Forecasting| ,  |seismic|Seismology|  data processing, analysis and control of  |industrial_process|Industrial_Process| es,  |medical_imaging|Medical_Imaging|  such as  |CAT|Computed_Axial_Tomography|  scans and  |MRI|Mri| ,  |MP3|Mp3|  compression,  |computer_graphics|Computer_Graphics| ,  |image_manipulation|Image_Manipulation| ,  |audio_crossovers|Audio_Crossover|  and  |equalization|Equalization| , and audio  |effects_units|Effects_Unit| .        DSP  |algorithms|Algorithm|  may be run on general-purpose computers and  |digital_signal_processors|Digital_Signal_Processor| . DSP algorithms are also implemented on purpose-built hardware such as  |application-specific_integrated_circuit|Application-Specific_Integrated_Circuit|  . Additional technologies for digital signal processing include more powerful general purpose  |microprocessors|Microprocessor| ,  |field-programmable_gate_arrays|Field-Programmable_Gate_Array|  ,  |digital_signal_controllers|Digital_Signal_Controller|  , and  |stream_processors|Stream_Processing| .      For systems that do not have a  |real-time_computing|Real-Time_Computing|  requirement and the signal data exists in data files, processing may be done economically with a general-purpose computer. This is essentially no different from any other  |data_processing|Data_Processing| , except DSP mathematical techniques  are used, and the sampled data is usually assumed to be uniformly sampled in time or space. An example of such an application is processing  |digital_photographs|Digital_Photograph|  with software such as  |Photoshop|Photoshop| .     When the application requirement is real-time, DSP is often implemented using specialized or dedicated processors or microprocessors, sometimes using multiple processors or multiple processing cores. These may process data using fixed-point arithmetic or floating point. For more demanding applications  |FPGAs|Fpga|  may be used.  For the most demanding applications or high-volume products,  |ASICs|Application-Specific_Integrated_Circuit|  might be designed specifically for the application.         |Bilinear_transform|Bilinear_Transform| |Discrete_Fourier_transform|Discrete_Fourier_Transform| |Discrete-time_Fourier_transform|Discrete-Time_Fourier_Transform| |Filter_design|Filter_Design| |Goertzel_algorithm|Goertzel_Algorithm| |LTI_system_theory|Lti_System_Theory| |Minimum_phase|Minimum_Phase| |s-plane|S-Plane| |Transfer_function|Transfer_Function| |Z-transform|Z-Transform| |Analog_signal_processing|Analog_Signal_Processing| |Automatic_control|Automatic_Control| |Computer_Engineering|Computer_Engineering| |Computer_science|Computer_Science| |Data_compression|Data_Compression| |Dataflow_programming|Dataflow_Programming| |Discrete_cosine_transform|Discrete_Cosine_Transform| |Electrical_engineering|Electrical_Engineering| |Fourier_analysis|Fourier_Analysis| |Information_theory|Information_Theory| |Machine_learning|Machine_Learning| |Real-time_computing|Real-Time_Computing| |Stream_processing|Stream_Processing| |Telecommunication|Telecommunication| |Time_series|Time_Series| |Wavelet|Wavelet|     .