For people with the surname, see Sather .        Sather is an  |object-oriented|Object-Oriented| |programming_language|Programming_Language| . It originated circa 1990 at the International Computer Science Institute at the  |University_of_California,_Berkeley|University_Of_California,_Berkeley| , developed by an international team led by  |Steve_Omohundro|Steve_Omohundro| . It supports  |garbage_collection|Garbage_Collection|  and  |generics|Generic_Programming|  by  |subtypes|Subtypes| .     Originally, it was based on  |Eiffel|Eiffel| , but it has diverged, and now includes several  |functional_programming|Functional_Programming|  features.     The name is inspired by Eiffel; the  |Sather_Tower|Sather_Tower|  is a recognizable landmark at Berkeley, named after  |Jane_Krom_Sather|Jane_Krom_Sather| , the widow of  |Peder_Sather|Peder_Sather| , who donated large sums to the foundation of the university.     Sather also takes inspiration from other programming languages and paradigms:  |iterators|Iterator| ,  |design_by_contract|Design_By_Contract| ,  |abstract_class|Abstract_Class| es,  |multiple_inheritance|Multiple_Inheritance| ,  |anonymous_functions|Anonymous_Function| ,  |operator_overloading|Operator_Overloading| ,  |contravariant|Covariance_And_Contravariance|  type system.     The original Berkeley implementation  has been adopted by the  |Free_Software_Foundation|Free_Software_Foundation|  therefore becoming GNU Sather. Last stable GNU version was released in July 2007  and the software is currently not maintained. There were several other variants: Sather-K from the  |University_of_Karlsruhe|University_Of_Karlsruhe| ;   Sather-W from the  |University_of_Waikato|University_Of_Waikato|   ; Peter Naulls port of ICSI Sather 1.1 to  |RISC_OS|Risc_Os| ; Peter Naulls port is no longer available on the Web. and pSather,   a parallel version of ICSI Sather addressing  |non-uniform_memory_access|Non-Uniform_Memory_Access|  multiprocessor architectures but presenting a shared memory model to the programmer.     The former ICSI Sather compiler is implemented as a compiler to  |C|C| , i.e., the compiler does not output  |object|Object_File|  or  |machine|Machine_Language|  code, but takes Sather  |source_code|Source_Code|  and generates C source code as an  |intermediate_language|Intermediate_Language| . Optimizing is left to the C compiler.     The GNU Sather compiler, written in Sather itself, is  |dual_licensed|Dual_Licensed|  under the GNU  |GPL|Gnu_General_Public_License|  &  |LGPL|Lgpl| .         class HELLOWORLD is   main is   OUT+ Hello World  ;   end;   end;     A few remarks:   Class names are ALL CAPS; this is not only a convention but is enforced by the compiler.   The method called main is the entry point for execution. It may belong to any class, but if this is different from MAIN , it must be specified as a compiler option.   is the constructor symbol, calling method create of the corresponding class; here it is used for instantiating the OUT class, which is actually stdout.   The + operator has been overloaded here to stand for stream append.   Operators such as + are  |syntactic_sugar|Syntactic_Sugar| .