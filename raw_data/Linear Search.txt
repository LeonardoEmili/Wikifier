     In  |computer_science|Computer_Science| , a linear search or sequential search is a method for finding an element within a  |list|List| . It sequentially checks each element of the list until a match is found or the whole list has been searched.     A linear search runs in at worst  |linear_time|Time_Complexitylinear_Time|  and makes at most  comparisons, where  is the length of the list. If each element is equally likely to be searched, then linear search has an average case of  comparisons, but the average case can be affected if the search probabilities for each element vary. Linear search is rarely practical because other search algorithms and schemes, such as the  |binary_search_algorithm|Binary_Search_Algorithm|  and  |hash_tables|Hash_Table| , allow significantly faster searching for all but short lists.       A linear search sequentially checks each element of the list until it finds an element that matches the target value. If the algorithm reaches the end of the list, the search terminates unsuccessfully.       Given a list  of  elements with values or  |records|Record|  , and target value , the following  |subroutine|Subroutine|  uses linear search to find the index of the target  in .     Set  to 0.   If , the search terminates successfully; return .   Increase  by 1.   If  .