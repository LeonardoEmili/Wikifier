        In  |mathematics|Mathematics| , a binary operation or dyadic operation is a calculation that combines two elements  to produce another element. More formally, a binary operation is an  |operation|Operation|  of  |arity|Arity|  two.     More specifically, a binary operation on a set  is a binary operation whose two  |domains|Domain_Of_A_Function|  and the  |codomain|Codomain|  are the same set. Examples include the familiar  |arithmetic_operations|Arithmetic_Operations|  of  |addition|Addition| ,  |subtraction|Subtraction| ,  |multiplication|Multiplication| . Other examples are readily found in different areas of mathematics, such as  |vector_addition|Vector_Addition| ,  |matrix_multiplication|Matrix_Multiplication|  and  |conjugation_in_groups|Conjugation| .     However, a binary operation may also involve several sets. For example,  |scalar_multiplication|Scalar_Multiplication|  of  |vector_spaces|Vector_Spaces|  takes a scalar and a vector to produce a vector, and  |scalar_product|Scalar_Product|  takes two vectors to produce a scalar.     Binary operations are the keystone of most  |algebraic_structures|Algebraic_Structure| , that are studied in  |algebra|Algebra| , and used in all mathematics, such as  |fields|Field| ,  |groups|Group| ,  |monoids|Monoid| ,  |rings|Ring| ,  |algebras|Algebra_Over_A_Field| , and many more.       More precisely, a binary operation on a  |set|Set|  S is a  |map|Map|  which sends elements of the  |Cartesian_product|Cartesian_Product|   to S     :     S   S   S.   Because the result of performing the operation on a pair of elements of S is again an element of S, the operation is called a closed binary operation on S .  If f is not a  |function|Function| , but is instead a  |partial_function|Partial_Function| , it is called a partial binary operation. For instance, division of  |real_numbers|Real_Numbers|  is a partial binary operation, because one cant  |divide_by_zero|Division_By_Zero| a/0 is not defined for any real a. However, both in  |universal_algebra|Universal_Algebra|  and  |model_theory|Model_Theory|  the binary operations considered are defined on all of .     Sometimes, especially in  |computer_science|Computer_Science| , the term is used for any  |binary_function|Binary_Function| .       Typical examples of binary operations are the  |addition|Addition|  and  |multiplication|Multiplication|  of  |numbers|Number|  and  |matrices|Matrix|  as well as  |composition_of_functions|Composition_Of_Functions|  on a single set.   For instance,   On the set of real numbers R,  is a binary operation since the sum of two real numbers is a real number.   On the set of natural numbers N,  is a binary operation since the sum of two natural numbers is a natural number. This is a different binary operation than the previous one since the sets are different.   On the set M of  matrices with real entries,  is a binary operation since the sum of two such matrices is a  matrix.   On the set M of  matrices with real entries,  is a binary operation since the product of two such matrices is a  matrix.   For a given set C, let S be the set of all functions . Define  by  for all , the composition of the two functions h and h in S. Then f is a binary operation since the composition of the two functions is again a function on the set C .     Many binary operations of interest in both algebra and formal logic are  |commutative|Commutative| , satisfying  for all elements a and b in S, or  |associative|Associative| , satisfying  for all a, b and c in S. Many also have  |identity_elements|Identity_Element|  and  |inverse_elements|Inverse_Element| .     The first three examples above are commutative and all of the above examples are associative.     On the set of real numbers R,  |subtraction|Subtraction| , that is, , is a binary operation which is not commutative since, in general, . It is also not associative, since, in general, ; for instance,  but .     On the set of natural numbers N, the binary operation  |exponentiation|Exponentiation| , , is not commutative since,  , and is also not associative since . For instance, with ,  and , , but . By changing the set N to the set of integers Z, this binary operation becomes a partial binary operation since it is now undefined when  and b is any negative integer. For either set, this operation has a right identity since  for all a in the set, which is not an identity since  in general.      |Division|Division|  , a partial binary operation on the set of real or rational numbers, is not commutative or associative.  |Tetration|Tetration|  , as a binary operation on the natural numbers, is not commutative or associative and has no identity element.       Binary operations are often written using  |infix_notation|Infix_Notation|  such as , ,  or  ab rather than by functional notation of the form . Powers are usually also written without operator, but with the second argument as  |superscript|Superscript| .     Binary operations sometimes use prefix or postfix notation, both of which dispense with parentheses. They are also called, respectively,  |Polish_notation|Polish_Notation|  and  |reverse_Polish_notation|Reverse_Polish_Notation| .       A binary operation, ab, depends on the  |ordered_pair|Ordered_Pair|   and so c  depends in general on the ordered pair . Thus, for the general, non-associative case, binary operations can be represented with  |binary_trees|Binary_Tree| .     However:   If the operation is associative, c a, then the value of c depends only on the  |tuple|Tuple|  .   If the operation is commutative, ab ba, then the value of c depends only on , where braces indicate  |multisets|Multiset| .   If the operation is both associative and commutative then the value of c depends only on the multiset .   If the operation is associative, commutative and  |idempotent|Idempotent| , aa a, then the value of c depends only on the  |set|Set|  .         A binary operation f on a set S may be viewed as a ternary  |relation|Finitary_Relation|  on S, that is, the set of triples  in S × S × S for all a and b in S.       An  external binary operation is a binary function from K & times; S to S. This differs from a binary operation on a set in the sense in that K need not be S; its elements come from outside.     An example of an  |external|External|  binary operation is  |scalar_multiplication|Scalar_Multiplication|  in  |linear_algebra|Linear_Algebra| . Here K is a  |field|Field|  and S is a  |vector_space|Vector_Space|  over that field.     An  |external|External|  binary operation may alternatively be viewed as an  |action|Group_Action| ; K is acting on S.     The  |dot_product|Dot_Product|  of two vectors maps from S & times; S to K, where K is a field and S is a vector space over K .