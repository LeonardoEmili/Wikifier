In  |mathematics|Mathematics| , a binary function  is a  |function|Function|  that takes two inputs.     Precisely stated, a function f is binary if there exists  |sets|Set|  X, Y, Z such that   :     X   Y   Z   where X   Y is the  |Cartesian_product|Cartesian_Product|  of X and Y.        |Set_theoretically|Naive_Set_Theory| , one may represent a binary function as a  |subset|Subset|  of the  |Cartesian_product|Cartesian_Product|  X × Y × Z, where  belongs to the subset  |if_and_only_if|If_And_Only_If|  f z.   Conversely, a subset R defines a binary function if and only if  |for_any|Universal_Quantification|  x in X and y in Y,  |there_exists|Existential_Quantification|  a  |unique|Uniqueness_Quantification|  z in Z such that  belongs to R.   We then define f to be this z.     Alternatively, a binary function may be interpreted as simply a  |function|Function|  from X × Y to Z.   Even when thought of this way, however, one generally writes f  instead of f.          Division of  |whole_numbers|Integer|  can be thought of as a function; if   is the set of  |integers|Integer| ,   is the set of  |natural_numbers|Natural_Number|  , and   is the set of  |rational_numbers|Rational_Number| , then  |division|Division|  is a binary function f:          .     Another example is that of inner products, or more generally functions of the form   xTMy where x,y are real-valued vectors of appropriate size and M is a matrix. If M is a  |positive_definite_matrix|Positive_Definite_Matrix| , this yields an  |inner_product|Inner_Product| .        Functions whose domain is a subset of   are often also called functions of two variables even if their domain does not form a rectangle and thus the cartesian product of two sets.        In turn, one can also derive ordinary functions of one variable from a binary function.   Given any element x of X, there is a function f x , or f , from Y to Z, given by f x  : f .   Similarly, given any element y of Y, there is a function f y , or f , from X to Z, given by f y  : f . In computer science, this identification between a function from X × Y to Z and a function from X to Z Y , where Z Y is the set of all functions from Y to Z, is called  currying .       The various concepts relating to functions can also be generalised to binary functions.   For example, the division example above is  surjective   because every rational number may be expressed as a quotient of an integer and a natural number.   This example is  injective  in each input separately, because the functions f x and f y are always injective.   However, its not injective in both variables simultaneously, because f f .     One can also consider partial binary functions, which may be defined only for certain values of the inputs.   For example, the division example above may also be interpreted as a partial binary function from Z and N to Q, where N is the set of all natural numbers, including zero.   But this function is undefined when the second input is zero.     A  |binary_operation|Binary_Operation|  is a binary function where the sets X, Y, and Z are all equal; binary operations are often used to define  |algebraic_structures|Algebraic_Structure| .     In  |linear_algebra|Linear_Algebra| , a  |bilinear_transformation|Bilinear_Operator|  is a binary function where the sets X, Y, and Z are all  |vector_spaces|Vector_Space|  and the derived functions f x and f y are all  |linear_transformations|Linear_Transformation| .   A bilinear transformation, like any binary function, can be interpreted as a function from X × Y to Z, but this function in general wont be linear.   However, the bilinear transformation can also be interpreted as a single linear transformation from the  |tensor_product|Tensor_Product|  X   Y to Z.          The concept of binary function generalises to ternary  function, quaternary  function, or more generally to n-ary function for any  |natural_number|Natural_Number|  n.   A 0-ary function to Z is simply given by an element of Z.   One can also define an A-ary function where A is any  |set|Set| ; there is one input for each element of A.       In  |category_theory|Category_Theory| , n-ary functions generalise to n-ary morphisms in a  |multicategory|Multicategory| .   The interpretation of an n-ary morphism as an ordinary morphisms whose domain is some sort of product of the domains of the original n-ary morphism will work in a  |monoidal_category|Monoidal_Category| .   The construction of the derived morphisms of one variable will work in a  |closed_monoidal_category|Closed_Monoidal_Category| .