An -extractor is a  |bipartite_graph|Bipartite_Graph|  with N nodes on the left and M nodes on the right such that each node on the left has D neighbors , which has the added property that   for any subset A of the left vertices of size at least K , the distribution on right vertices obtained by choosing a random node in A and then following a random  |edge|Graph_Theory|  to get a node x on the right side is   -close to the  |uniform_distribution|Uniform_Distribution|  in terms of  |total_variation_distance|Total_Variation_Distance| .     A  |disperser|Disperser|  is a related graph.     An equivalent way to view an extractor is as a bivariate function     : E :         in the natural way. With this view it turns out that the extractor property is equivalent to: for any source of randomness X that gives n  |bits|Bit|  with  |min_entropy|Min_Entropy|    K , the distribution E is   -close to UM , where UT denotes the uniform distribution on .     Extractors are interesting when they can be constructed with small K,D,  relative to N and M is as close to KD as possible.     Extractor functions were originally researched as a way to extract  |randomness|Randomness|  from weakly random sources. See  |randomness_extractor|Randomness_Extractor| .     Using the  |probabilistic_method|Probabilistic_Method|  it is easy to show that extractor graphs with really good parameters exist. The challenge is to find explicit or  |polynomial_time|Polynomial_Time|  computable examples of such graphs with good parameters. Algorithms that compute extractor graphs have found many applications in  |computer_science|Computer_Science| .