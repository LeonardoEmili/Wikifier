[
    {
        "                  ASCII art is a ": null
    },
    {
        "graphic design": "Graphic Design"
    },
    {
        " technique that uses ": null
    },
    {
        "computers": "Computer"
    },
    {
        "for presentation and consists of pictures pieced together from the 95 printable ": null
    },
    {
        "characters": "Character"
    },
    {
        " defined by the ": null
    },
    {
        "ASCII": "Ascii"
    },
    {
        " Standard from 1963 and ASCII compliant character sets with proprietary extended characters . The term is also loosely used to refer to ": null
    },
    {
        "text based visual art in general": "Other Text-Based Visual Art"
    },
    {
        ". ASCII art can be created with any ": null
    },
    {
        "text editor": "Text Editor"
    },
    {
        ", and is often used with ": null
    },
    {
        "free-form language": "Free-Form Language"
    },
    {
        "s. Most examples of ASCII ": null
    },
    {
        "art": "Art"
    },
    {
        " require a ": null
    },
    {
        "fixed-width font": "Proportional Fonts"
    },
    {
        "  such as ": null
    },
    {
        "Courier": "Courier"
    },
    {
        " for presentation.     Among the oldest known examples of ASCII art are the   creations by computer-art pioneer ": null
    },
    {
        "Kenneth Knowlton": "Kenneth Knowlton"
    },
    {
        " from around 1966, who was working for ": null
    },
    {
        "Bell Labs": "Bell Labs"
    },
    {
        " at the time.      Studies in Perception I by ": null
    },
    {
        "Ken Knowlton": "Ken Knowlton"
    },
    {
        " and Leon Harmon from 1966 shows some examples of their early ASCII art.  1966 Studies in Perception I by Ken Knowlton and Leon Harmon ,       ASCII art was invented, in large part, because early printers often lacked graphics ability and thus characters were used in place of graphic marks. Also, to mark divisions between different print jobs from different users, bulk printers often used ASCII art to print large ": null
    },
    {
        "banner page": "Banner Page"
    },
    {
        "s, making the division easier to spot so that the results could be more easily separated by a computer operator or clerk.  ASCII art was also used in early e-mail when images could not be embedded.                 Since 1867, typewriters have been used for creating visual art.                 TTY stands for TeleTYpe or TeleTYpewriter , and is also known as ": null
    },
    {
        "Teleprinter": "Teleprinter"
    },
    {
        " or Teletype.   RTTY stands for ": null
    },
    {
        "Radioteletype": "Radioteletype"
    },
    {
        "; ": null
    },
    {
        "character sets": "Character Set"
    },
    {
        "such as ": null
    },
    {
        "Baudot code": "Baudot Code"
    },
    {
        ", which predated ASCII, were used. According to a chapter in the RTTY Handbook , text images have been sent via teletypewriter as early as 1923.      However, none of the old RTTY art has been discovered yet. What is known is that text images appeared frequently on radioteletype in the 1960s and the 1970s.                 In the 1960s, ": null
    },
    {
        "Andries van Dam": "Andries Van Dam"
    },
    {
        " published a representation of an electronic circuit produced on an ": null
    },
    {
        "IBM 1403": "Ibm 1403"
    },
    {
        " line printer": "Line Printer"
    },
    {
        ".  by Andries Van Dam & David Evans At the same time, ": null
    },
    {
        "Kenneth Knowlton": "Kenneth Knowlton"
    },
    {
        " was producing realistic images, also on line printers, by overprinting several characters on top of one another.   Note that it was not ASCII art in a sense that the 1403 was driven by an EBCDIC-coded platform and the character sets and trains available on the 1403 were derived from EBCDIC rather than ASCII, despite some glyphs commonalities.          The widespread usage of ASCII art can be traced to the computer ": null
    },
    {
        "bulletin board systems": "Bulletin Board System"
    },
    {
        "of the late 1970s and early 1980s. The limitations of computers of that time period necessitated the use of text characters to represent images. Along with ASCIIs use in communication, however, it also began to appear in the underground online art groups of the period. An ASCII comic is a form of webcomic which uses ASCII text to create images. In place of images in a regular comic, ASCII art is used, with the text or dialog usually placed underneath.     During the 1990s, graphical browsing and ": null
    },
    {
        "variable-width": "Variable-Width Font"
    },
    {
        " fonts": "Computer Font"
    },
    {
        " became increasingly popular, leading to a decline in ASCII art. Despite this, ASCII art continued to survive through online ": null
    },
    {
        "MUD": "Mud"
    },
    {
        "s, an acronym for Multi-User Dungeon , , ": null
    },
    {
        "Internet Relay Chat": "Internet Relay Chat"
    },
    {
        ", ": null
    },
    {
        "E-mail": "E-Mail"
    },
    {
        ", ": null
    },
    {
        "message boards": "Message Boards"
    },
    {
        " and other forms of online communication which commonly employ the needed ": null
    },
    {
        "fixed-width": "Monospaced Font"
    },
    {
        ".       ASCII and more importantly, ": null
    },
    {
        "ANSI": "Ansi Escape Code"
    },
    {
        " were staples of the early technological era; terminal systems relied on coherent presentation using color and control signals standard in the terminal protocols.     Over the years, ": null
    },
    {
        "warez": "Warez"
    },
    {
        " groups began to enter the ASCII art scene.      Warez groups usually release ": null
    },
    {
        ".nfo": ".Nfo"
    },
    {
        " files with their software, ": null
    },
    {
        "cracks": "Software Cracking"
    },
    {
        " or other general software reverse-engineering releases.      The ASCII art will usually include the warez groups name and maybe some ASCII borders on the outsides of the release notes, etc. . Retrieved 2008-02-17.     ": null
    },
    {
        "BBS": "Bulletin Board System"
    },
    {
        " systems were based on ASCII and ANSI art, as were most ": null
    },
    {
        "DOS": "Dos"
    },
    {
        " and similar ": null
    },
    {
        "console": "System Console"
    },
    {
        " applications, and the precursor to ": null
    },
    {
        "AOL": "Aol"
    },
    {
        ".             ASCII art is used wherever text can be more readily printed or transmitted than graphics, or in some cases, where the transmission of pictures is not possible. This includes typewriters, ": null
    },
    {
        "teleprinter": "Teleprinter"
    },
    {
        "s, non-graphic ": null
    },
    {
        "computer terminal": "Computer Terminal"
    },
    {
        "s, ": null
    },
    {
        "printer separator": "Printer Separator"
    },
    {
        "s, in early ": null
    },
    {
        "computer network": "Computer Network"
    },
    {
        "ing , ": null
    },
    {
        "e-mail": "E-Mail"
    },
    {
        ", and ": null
    },
    {
        "Usenet": "Usenet"
    },
    {
        " news messages. ASCII art is also used within the ": null
    },
    {
        "source code": "Source Code"
    },
    {
        " of computer programs for representation of company or product logos, and flow control or other diagrams. In some cases, the entire source code of a program is a piece of ASCII art – for instance, an entry to one of the earlier ": null
    },
    {
        "International Obfuscated C Code Contest": "International Obfuscated C Code Contest"
    },
    {
        " is a program that adds numbers, but visually looks like a binary adder drawn in logic ports.          Some ": null
    },
    {
        "electronic schematic": "Electronic Schematic"
    },
    {
        " archives represent the circuits using ASCII art.       Examples of ASCII-style art predating the modern computer era can be found in the June 1939, July 1948 and October 1948 editions of Popular Mechanics.          0verkill is a 2D platform multiplayer shooter game designed entirely in color ASCII art. ": null
    },
    {
        "MPlayer": "Mplayer"
    },
    {
        " and ": null
    },
    {
        "VLC media player": "Vlc Media Player"
    },
    {
        " can display videos as ASCII art through the ": null
    },
    {
        "AAlib": "Aalib"
    },
    {
        " library. ASCII art is used in the making of DOS-based ": null
    },
    {
        "ZZT": "Zzt"
    },
    {
        " games.     Many game walkthrough guides come as part of a basic .txt file; this file often contains the name of the game in ASCII art. Such as below, word art is created using backslashes and other ASCII values in order to create the illusion of 3D.       Different techniques could be used in ASCII art to obtain different artistic effects. Electronic circuits and diagrams were implemented by ": null
    },
    {
        "typewriter": "Typewriter"
    },
    {
        " or ": null
    },
    {
        "teletype": "Teleprinter"
    },
    {
        " and provided the pretense for ASCII.     Typewriter-style lettering, made from individual letter characters:    Line art, for creating shapes:   .--. /    -- /  ~     Solid art, for creating filled objects:   .g@8g. db   Y8@P d88b     Shading, using symbols with various intensities for creating gradients or contrasts:   :$$: 4b. :.   :$$: 4b. :.     Combinations of the above, often used as signatures, for example, at the end of an email:   |    / @ @   Purrrfectly pleasant   Poppy Prinz   & gt; & gt;x & lt; & lt;´   / O       As-pixel characters use combinations of ░ , █ , ▄ and ▀ to make pictures:   ▄▄▄▄▄▄▄░▄▄▄▄▄▄▄░▄▄▄▄▄▄░▄▄▄▄▄   ░░▀███░░░░▀██░░░░██▀░░░░██░░   ░░░▀██░░░░░▀██░░▄█░░░░░▄█░░░   ░░░░███░░░░░▀██▄█░░░░░░█░░░░   ░░░░░███░░░░░▀██░░░░░░█▀░░░░   ░░░░░░███░░░░▄███░░░░█▀░░░░░   ░░░░░░░██▄░░▄▀░███░░█▀░░░░░░   ░░░░░░░▀██▄█▀░░░███▄▀░░░░░░░   ░░░░░░░░▀██▀░░░░░███░░░░░░░░   ░░░░░░░░░▀▀░░░░░░░▀░░░░░░░░░          The simplest forms of ASCII art are combinations of two or three characters for expressing emotion in text. They are commonly referred to as ": null
    },
    {
        "emoticon": "Emoticon"
    },
    {
        ", smilie, or ": null
    },
    {
        "smiley": "Smiley"
    },
    {
        ". There is another type of one-line ASCII art that does not require the mental rotation of pictures, which is widely known in Japan as ": null
    },
    {
        "kaomoji": "Kaomoji"
    },
    {
        " Traditionally, they are referred to as ASCII face .     More complex examples use several lines of text to draw large symbols or more complex figures. ": null
    },
    {
        "Hundreds of different text smileys": "List Of Emoticons"
    },
    {
        " have developed over time,      but only a few are generally accepted, used and understood.       An ASCII comic is a form of ": null
    },
    {
        "webcomic": "Webcomic"
    },
    {
        ".       The Adventures of Nerd Boy, or just Nerd Boy, was an ASCII comic, published by Joaquim Gândara between 5 August 2001 and 17 July 2007, and consisting of 600 strips. They were posted to ASCII art ": null
    },
    {
        "newsgroup": "Newsgroup"
    },
    {
        " alt.ascii-art and on the website.      Some strips have been translated to ": null
    },
    {
        "Polish": "Polish Language"
    },
    {
        "  episodes 1 to 172    episodes 208 to 470 and ": null
    },
    {
        "French": "French Language"
    },
    {
        ".       Atari 400/800 ATASCII": null
    },
    {
        "Atari 400/800": "Atari 8-Bit Family"
    },
    {
        " which were released in 1979 did not follow the ASCII standard and had its own character set, called ": null
    },
    {
        "ATASCII": "Atascii"
    },
    {
        ".          The emergence of ATASCII art coincided with the growing popularity of ": null
    },
    {
        "BBS Systems": "Bulletin Board System"
    },
    {
        " caused by availability of the ": null
    },
    {
        "acoustic couplers": "Acoustic Coupler"
    },
    {
        "that were compatible with the 8-bit home computers. ATASCII text animations are also referred to as break animations by the Atari sceners.     C-64 PETSCII": null
    },
    {
        "Commodore 64": "Commodore 64"
    },
    {
        ", which was released in 1982, also did not follow the ASCII standard. The C-64 character set is called ": null
    },
    {
        "PETSCII": "Petscii"
    },
    {
        ", an extended form of ": null
    },
    {
        "ASCII": "Ascii"
    },
    {
        "-1963. As with the Ataris ATASCII art, C-64 fans developed a similar scene that used PETSCII for their creations.             So-called block ASCII or high ASCII uses the extended characters of the 8-bit ": null
    },
    {
        "code page 437": "Code Page 437"
    },
    {
        ", which is a proprietary standard introduced by ": null
    },
    {
        "IBM": "Ibm"
    },
    {
        " in 1979 for the IBM PC DOS and MS-DOS operating systems. Block ASCIIs were widely used on the PC during the 1990s until the Internet replaced BBSes as the main communication platform. Until then, block ASCIIs dominated the ": null
    },
    {
        "PC Text Art Scene": "Computer Art Scene"
    },
    {
        ".       by Napalm, 11/10/1998, The History of Art and Technology     The first art scene group that focused on the extended character set of the PC in their art work was called ": null
    },
    {
        "Aces of ANSI Art": "Aces Of Ansi Art"
    },
    {
        " . Some members left in 1990, and formed a group called ": null
    },
    {
        "ANSI Creators in Demand": "Ansi Creators In Demand"
    },
    {
        " . In that same year the second major underground art scene group was founded, ": null
    },
    {
        "ICE": "Ice Advertisements"
    },
    {
        ", Insane Creators Enterprise . , Presented by ": null
    },
    {
        "Jason Scott Sadofsky": "Jason Scott Sadofsky"
    },
    {
        " and ": null
    },
    {
        "RaD Man": "Rad Man"
    },
    {
        " , ": null
    },
    {
        "Notacon": "Notacon"
    },
    {
        " Conference – Cleveland, Ohio, USA, 23–25 April 2004.     There is some debate between ASCII and block ASCII artist, with Hardcore ASCII artists maintaining that block ASCII art is in fact not ": null
    },
    {
        "ANSI art": "Ansi Art"
    },
    {
        ", because it does not use the 128 characters of the original ASCII standard. On the other hand, block ASCII artists argue that if their art uses only characters of the computers character set, then it is to be called ASCII, regardless if the character set is proprietary or not.     Microsoft Windows does not support the ": null
    },
    {
        "ANSI Standard": "American National Standards Institute"
    },
    {
        " x3.16. One can view block ASCIIs with a text editor using the font ": null
    },
    {
        "Terminal": "Terminal"
    },
    {
        " , but it will not look exactly as it was intended by the artist. With a special ASCII/ANSI viewer, such as ACiDView for Windows , one can see block ASCII and ANSI files properly. An example that ": null
    },
    {
        "illustrates the difference": "Block   Ascii Art"
    },
    {
        " in appearance is part of this article. Alternatively, one could look at the file using the ": null
    },
    {
        "TYPE": "Type"
    },
    {
        " command in the command prompt.          In the art scene one popular ASCII style that used the 7-bit standard ASCII character set was the so-called Oldskool style. It is also called Amiga style , due to its origin and widespread use on the ": null
    },
    {
        "Commodore Amiga": "Amiga"
    },
    {
        " computers. The style uses primarily the characters: /  : . The oldskool art looks more like the outlined drawings of shapes than real pictures.   This is an example of ": null
    },
    {
        "Amiga": "Amiga"
    },
    {
        " style ": null
    },
    {
        "scene": "Computer Art Scene"
    },
    {
        " ASCII art.     The Amiga ASCII scene surfaced in 1992, seven years after the introduction of the Commodore ": null
    },
    {
        "Amiga 1000": "Amiga 1000"
    },
    {
        ". The Commodore 64 PETSCII scene did not make the transition to the Commodore Amiga as the C64 demo and warez scenes did. Among the first Amiga ASCII art groups were ART, Epsilon Design, Upper Class, Unreal . This means that the text art scene on the Amiga was actually younger than the text art scene on the PC. The Amiga artists also did not call their ASCII art style Oldskool . That term was introduced on the PC. When and by whom is unknown and lost in history.     The Amiga style ASCII artwork was most often released in the form of a single text file, which included all the artwork , with some design parts in between, as opposed to the PC art scene where the art work was released as a ": null
    },
    {
        "ZIP archive": "Zip Archive"
    },
    {
        " with separate text files for each piece. Furthermore, the releases were usually called ASCII collections and not art packs like on the IBM PC.     ": null
    },
    {
        "Microsoft Notepad": "Microsoft Notepad"
    },
    {
        ", ": null
    },
    {
        "CygnusEd": "Cygnused"
    },
    {
        "itor aka. CED , and ": null
    },
    {
        "EditPlus": "Editplus"
    },
    {
        "2 .     ": null
    },
    {
        "Oldskool font": "Oldskool Font"
    },
    {
        " example from the PC, which was taken from the ASCII editor ": null
    },
    {
        "FIGlet": "Figlet"
    },
    {
        ".          Newskool is a popular form of ASCII art which capitalizes on character strings like $Xxo . In spite of its name, the style is not new ; on the contrary, it was very old but fell out of favor and was replaced by Oldskool and Block style ASCII art. It was dubbed Newskool upon its comeback and renewed popularity at the end of the 1990s.     Newskool changed significantly as the result of the introduction of ": null
    },
    {
        "extended proprietary characters": "Character Encoding"
    },
    {
        ". The classic 7-bit standard ASCII characters remain predominant, but the extended characters are often used for fine tuning and tweaking . The style developed further after the introduction and adaptation of ": null
    },
    {
        "Unicode": "Unicode"
    },
    {
        ".            While some prefer to use a simple ": null
    },
    {
        "text editor": "Text Editor"
    },
    {
        " to produce ASCII art, specialized programs, such as ": null
    },
    {
        "JavE": "Jave"
    },
    {
        " have been developed that often simulate the features and tools in bitmap image editors. For Block ASCII art and ANSI art the artist almost always uses a special text editor, because to generate the required characters on a standard keyboard, one needs to know the ": null
    },
    {
        "Alt code": "Alt Code"
    },
    {
        " for each character. For example, + will produce ▓, + will produce ▒, and + will produce ◘.     The special text editors have sets of special characters assigned to existing keys on the keyboard. Popular ": null
    },
    {
        "DOS": "Dos"
    },
    {
        "-based editors, such as ": null
    },
    {
        "TheDraw": "Thedraw"
    },
    {
        " and ACiDDraw had multiple sets of different special characters mapped to the ": null
    },
    {
        "function keys": "Function Key"
    },
    {
        "to make the use of those characters easier for the artist who can switch between individual sets of characters via basic keyboard shortcuts. PabloDraw is one of the very few special ASCII/ANSI art editors that were developed for ": null
    },
    {
        "Windows": "Windows Nt"
    },
    {
        ".       Other programs allow one to automatically convert an image to text characters, which is a special case of ": null
    },
    {
        "vector quantization": "Vector Quantization"
    },
    {
        ". A method is to sample the image down to ": null
    },
    {
        "grayscale": "Grayscale"
    },
    {
        " with less than ": null
    },
    {
        "8-bit": "Integer"
    },
    {
        " precision, and then assign a character for each value. Such ASCII art generators often allow users to choose the intensity and contrast of the generated image.          Three factors limit the fidelity of the conversion, especially of photographs:     depth ;   sharpness ;   ratio .     Examples of converted images are given below.     This is one of the earliest forms of ASCII art, dating back to the early days of the 1960s ": null
    },
    {
        "minicomputers": "Minicomputer"
    },
    {
        "and ": null
    },
    {
        "teletype": "Teleprinter"
    },
    {
        "s. During the 1970s, it was popular in US ": null
    },
    {
        "malls": "Shopping Mall"
    },
    {
        " to get a ": null
    },
    {
        "t-shirt": "T-Shirt"
    },
    {
        " with a photograph printed in ASCII art on it from an automated kiosk manned by a computer, and Londons ": null
    },
    {
        "Science Museum": "Science Museum, London"
    },
    {
        " had a similar service to produce printed portraits. With the advent of the web, ": null
    },
    {
        "HTML": "Html"
    },
    {
        " and ": null
    },
    {
        "CSS": "Cascading Style Sheets"
    },
    {
        ", many ASCII conversion programs will now quantize to a full ": null
    },
    {
        "RGB": "Rgb Color Model"
    },
    {
        " colorspace, enabling colorized ASCII images.              Still images or movies can also be converted to ASCII on various ": null
    },
    {
        "UNIX": "Unix"
    },
    {
        " and ": null
    },
    {
        "UNIX-like": "Unix-Like"
    },
    {
        " systems using the  or  graphics device driver, or the ": null
    },
    {
        "VLC media player": "Vlc Media Player"
    },
    {
        " or ": null
    },
    {
        "mpv": "Mpv"
    },
    {
        " under ": null
    },
    {
        "Windows": "Windows"
    },
    {
        ", Linux or ": null
    },
    {
        "macOS": "Macos"
    },
    {
        "; all of which render the screen using ASCII symbols instead of pixels.      There are also a number of ": null
    },
    {
        "smartphone": "Smartphone"
    },
    {
        " applications, such as ASCII cam for ": null
    },
    {
        "Android": "Android"
    },
    {
        ", that generate ASCII art in real-time using input from the phones camera. These applications typically allow the ASCII art to be saved as either a text file or as an image made up of ASCII text.       Most ASCII art is created using a ": null
    },
    {
        "monospaced font": "Monospaced Font"
    },
    {
        ", where all characters are identical in width . Early computers in use when ASCII art came into vogue had monospaced fonts for screen and printer displays. Today, most of the more commonly used fonts in word processors, web browsers and other programs are proportional fonts, such as ": null
    },
    {
        "Helvetica": "Helvetica"
    },
    {
        " or ": null
    },
    {
        "Times Roman": "Times Roman"
    },
    {
        ", where different widths are used for different characters. ASCII art drawn for a fixed width font will usually appear distorted, or even unrecognizable when displayed in a proportional font.     Some ASCII artists have produced art for display in proportional fonts. These ASCIIs, rather than using a purely shade-based correspondence, use characters for slopes and borders and use block shading. These ASCIIs generally offer greater precision and attention to detail than fixed-width ASCIIs for a lower character count, although they are not as universally accessible since they are usually relatively font-specific.       Animated ASCII art started in 1970 from so-called VT100 animations produced on ": null
    },
    {
        "VT100": "Vt100"
    },
    {
        " terminals. These animations were simply text with cursor movement instructions, deleting and erasing the characters necessary to appear animated. Usually, they represented a long hand-crafted process undertaken by a single person to tell a story.     Contemporary ": null
    },
    {
        "web browser": "Web Browser"
    },
    {
        " revitalized animated ASCII art again. It became possible to display animated ASCII art via ": null
    },
    {
        "JavaScript": "Javascript"
    },
    {
        " or ": null
    },
    {
        "Java applets": "Java"
    },
    {
        ". Static ASCII art pictures are loaded and displayed one after another, creating the animation, very similar to how movie projectors unreel film reel and project the individual pictures on the big screen at movie theaters. A new term was born: ASCIImation – another name of animated ASCII art. A seminal work in this arena is the ": null
    },
    {
        "Star Wars": "Star Wars"
    },
    {
        " ASCIImation.      More complicated routines in JavaScript generate more elaborate ASCIImations showing effects like ": null
    },
    {
        "Morphing": "Morphing"
    },
    {
        " effects, star field emulations, fading effects and calculated images, such as ": null
    },
    {
        "mandelbrot fractal": "Mandelbrot Set"
    },
    {
        " animations.  includes morph effects and mandelbrot fractal animation  includes fading effect and horizontal scrolling star field emulation     There are now many tools and programs that can transform raster images into text symbols; some of these tools can operate on streaming video. For example, the music video for American singer ": null
    },
    {
        "Becks": "Beck"
    },
    {
        "song ": null
    },
    {
        "Black Tambourine": "Black Tambourine"
    },
    {
        "      is made up entirely of ASCII characters that approximate the original footage. ": null
    },
    {
        "VLC": "Vlc Media Player"
    },
    {
        ", a media player software, can render any video in colored ASCII through the ": null
    },
    {
        "libcaca": "Libcaca"
    },
    {
        " module.       There are a variety of other types of art using text symbols from character sets other than ASCII and/or some form of color coding. Despite not being pure ASCII, these are still often referred to as ASCII art . The character set portion designed specifically for drawing is known as the line drawing characters or ": null
    },
    {
        "pseudo-graphics": "Pseudo-Graphics"
    },
    {
        ".          The IBM PC graphics hardware in text mode uses 16 bits per character. It supports a variety of configurations, but in its default mode under DOS they are used to give 256 glyphs from one of the IBM PC code pages , 16 foreground colors, eight background colors, and a flash option. Such art can be loaded into screen memory directly. ": null
    },
    {
        "ANSI.SYS": "Ansi.Sys"
    },
    {
        ", if loaded, also allows such art to be placed on screen by outputting escape sequences that indicate movements of the screen cursor and color/flash changes. If this method is used then the art becomes known as ": null
    },
    {
        "ANSI art": "Ansi Art"
    },
    {
        ". The IBM PC code pages also include characters intended for simple drawing which often made this art appear much cleaner than that made with more traditional character sets. Plain text files are also seen with these characters, though they have become far less common since Windows GUI text editors  have largely replaced DOS-based ones.                In Japan, ASCII art is mainly known as ShiftJIS art. ": null
    },
    {
        "Shift JIS": "Shift Jis"
    },
    {
        " offers a larger selection of characters than plain ASCII , and may be used for text-based art on Japanese websites.     Often, such artwork is designed to be viewed with the default Japanese font on a platform, such as the proportional MS P Gothic.               Users on ASCII-NET, in which the word ASCII refers to the ": null
    },
    {
        "ASCII Corporation": "Ascii"
    },
    {
        " rather than the ": null
    },
    {
        "American Standard Code for Information Interchange": "American Standard Code For Information Interchange"
    },
    {
        ", popularised a style of  in which the face appears upright rather than rotated.     ": null
    }
]