In  |Boolean_functions|Boolean_Function|  and  |propositional_calculus|Propositional_Calculus| , the Sheffer stroke denotes a  |logical_operation|Logical_Operation|  that is equivalent to the  |negation|Logical_Negation|  of the  |conjunction|Logical_Conjunction|  operation, expressed in ordinary language as not both . It is also called nand or the alternative denial, since it says in effect that at least one of its operands is false. In  |digital_electronics|Digital_Electronics| , it corresponds to the  |NAND_gate|Nand_Gate| . It is named after  |Henry_M._Sheffer|Henry_M._Sheffer|  and written as ↑ or as   . In  |Bocheński_notation|Józefmariabocheński|  it can be written as Dpq.     Its  |dual|Duality|  is the  |NOR_operator|Logical_Nor|  . Like its dual, NAND can be used by itself, without any other logical operator, to constitute a logical  |formal_system|Formal_System|  . This property makes the  |NAND_gate|Nand_Gate|  crucial to modern  |digital_electronics|Digital_Electronics| , including its use in  |computer_processor|Computer_Processor|  design.       The NAND operation is a  |logical_operation|Logical_Operation|  on two  |logical_values|Logical_Value| . It produces a value of true, if — and only if — at least one of the  |propositions|Proposition|  is false.       The  |truth_table|Truth_Table|  of P   Q  is as follows              The Sheffer stroke of P and Q is the negation of their conjunction          By  |De_Morgans_Laws|De_Morgans_Laws| , this is also equivalent to the disjunction of the negations of P and Q            The stroke is named after  |Henry_M._Sheffer|Henry_M._Sheffer| , who in 1913 published a paper in the  Transactions of the American Mathematical Society  providing an axiomatization of  |Boolean_algebras|Boolean_Algebra|  using the stroke, and proved its equivalence to a standard formulation thereof by  |Huntington|Edward_Vermilye_Huntington|  employing the familiar operators of  |propositional_logic|Propositional_Logic|  . Because of self- |duality|Duality|  of Boolean algebras, Sheffers axioms are equally valid for either of the NAND or NOR operations in place of the stroke. Sheffer interpreted the stroke as a sign for nondisjunction  in his paper, mentioning non-conjunction only in a footnote and without a special sign for it. It was  |Jean_Nicod|Jean_Nicod|  who first used the stroke as a sign for non-conjunction in a paper of 1917 and which has since become current practice.  Russell and Whitehead used the Sheffer stroke in the 1927 second edition of  Principia Mathematica  and suggested it as a replacement for the or and not operations of the first edition.      |Charles_Sanders_Peirce|Charles_Sanders_Peirce|  had discovered the  |functional_completeness|Functional_Completeness|  of NAND or NOR more than 30 years earlier, using the term  ampheck  , but he never published his finding.       NAND does not possess any of the following five properties, each of which is required to be absent from, and the absence of all of which is sufficient for, at least one member of a set of  |functionally_complete|Functional_Completeness|  operators: truth-preservation, falsity-preservation,  |linearity|Affine_Transformation| ,  |monotonic|Monotonic| ity,  |self-duality|Duality_Duality_In_Logic_And_Set_Theory| . Therefore is a functionally complete set.     This can also be realized as follows: All three elements of the functionally complete set can be  |constructed_using_only_NAND|Introduction,_Elimination,_And_Equivalencies| . Thus the set must be functionally complete as well.         Expressed in terms of NAND   , the usual operators of propositional logic are:            The following is an example of a  |formal_system|Formal_System|  based entirely on the Sheffer stroke, yet having the functional expressiveness of the  |propositional_logic|Propositional_Logic| p n  for natural numbers n       The Sheffer stroke commutes but does not associate . Hence any formal system including the Sheffer stroke must also include a means of indicating grouping. We shall employ to this effect.     We also write p, q, r, … instead of p 0 , p 1 , p 2 .       Construction Rule I: For each natural number n, the symbol p n  is a  |well-formed_formula|Well-Formed_Formula|  , called an atom.     Construction Rule II: If X and Y are wffs, then  is a wff.     Closure Rule: Any formulae which cannot be constructed by means of the first two Construction Rules are not wffs.     The letters U, V, W, X, and Y are metavariables standing for wffs.     A decision procedure for determining whether a formula is well-formed goes as follows: deconstruct the formula by applying the Construction Rules backwards, thereby breaking the formula into smaller subformulae. Then repeat this recursive deconstruction process to each of the subformulae. Eventually the formula should be reduced to its atoms, but if some subformula cannot be so reduced, then the formula is not a wff.       All wffs of the form   :   are axioms. Instances of   :, U   W   are inference rules.       Since the only connective of this logic is  , the symbol   could be discarded altogether, leaving only the parentheses to group the letters. A pair of parentheses must always enclose a pair of wffs. Examples of theorems in this simplified notation are     : ,     : .     The notation can be simplified further, by letting   :  :    :    U   for any U. This simplification causes the need to change some rules:   More than two letters are allowed within parentheses.   Letters or wffs within parentheses are allowed to commute.   Repeated letters or wffs within a same set of parentheses can be eliminated.   The result is a parenthetical version of the Peirce  |existential_graphs|Existential_Graph| .     Another way to simplify the notation is to eliminate parentheses by using  |Polish_Notation|Polish_Notation| . For example, the earlier examples with only parentheses could be rewritten using only strokes as follows     :  becomes   :  p p q q pq pq, and     :  becomes,   :  p p qq pp.     This follows the same rules as the parenthesis version, with the opening parenthesis replaced with a Sheffer stroke and the closing parenthesis removed.     Or one could omit both parentheses and strokes and allow the order of the arguments to determine the order of function application so that for example, applying the function from right to left     : pqr   , whereas   : rqp    .