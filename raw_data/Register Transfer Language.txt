   In  |computer_science|Computer_Science| , register transfer language  is a kind of  |intermediate_representation|Intermediate_Representation|  that is very close to  |assembly_language|Assembly_Language| , such as that which is used in a  |compiler|Compiler| . It is used to describe data flow at the  |register-transfer_level|Register-Transfer_Level|  of an architecture. Academic papers and textbooks often use a form of RTL as an architecture-neutral assembly language. RTL is used as the name of a specific intermediate representation in several compilers, including the  |Gnu_Compiler_Collection|Gnu_Compiler_Collection|  , Zephyr, and the European compiler projects  |CerCo|Cerco|  and  |CompCert|Compcert| .       In GCC, RTL is generated from the GIMPLE representation, transformed by various passes in the GCC middle-end, and then converted to assembly language.     GCCs RTL is usually written in a form which looks like a  |Lisp|Lisp_Programming_Language| |S-expression|S-Expression|    The idea behind RTL was first described in:    .