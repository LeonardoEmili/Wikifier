        A field-programmable gate array  is an  |integrated_circuit|Integrated_Circuit|  designed to be configured by a customer or a designer after manufacturinghence the term  |field-programmable|Field-Programmability|  . The FPGA configuration is generally specified using a  |hardware_description_language|Hardware_Description_Language|  , similar to that used for an  |application-specific_integrated_circuit|Application-Specific_Integrated_Circuit|  .  |Circuit_diagrams|Circuit_Diagram|  were previously used to specify the configuration, but this is increasingly rare due to the advent of  |electronic_design_automation|Electronic_Design_Automation|  tools.          FPGAs contain an array of  |programmable|Programmable_Logic_Device| |logic_blocks|Logic_Block| , and a hierarchy of reconfigurable interconnects that allow the blocks to be wired together , like many logic gates that can be inter-wired in different configurations.  |Logic_blocks|Logic_Block|  can be configured to perform complex  |combinational_functions|Combinational_Logic| , or merely simple  |logic_gates|Logic_Gate|  like  |AND|And_Gate|  and  |XOR|Xor_Gate| . In most FPGAs, logic blocks also include  |memory_elements|Memory_Cell| , which may be simple  |flip-flops|Flip-Flop|  or more complete blocks of memory. Many FPGAs can be reprogrammed to implement different  |logic_functions|Boolean_Function| , allowing flexible  |reconfigurable_computing|Reconfigurable_Computing|  as performed in  |computer_software|Software| .       Contemporary field-programmable gate arrays have large resources of  |logic_gates|Logic_Gate|  and RAM blocks to implement complex digital computations. As FPGA designs employ very fast I/O rates and bidirectional data  |buses|Bus| , it becomes a challenge to verify correct timing of valid data within setup time and hold time.      |Floor_planning|Floorplan|  enables resource allocation within FPGAs to meet these time constraints. FPGAs can be used to implement any logical function that an  |ASIC|Application-Specific_Integrated_Circuit|  can perform. The ability to update the functionality after shipping,  |partial_re-configuration|Partial_Re-Configuration|  of a portion of the design  and the low non-recurring engineering costs relative to an ASIC design , offer advantages for many applications.      Some FPGAs have analog features in addition to digital functions. The most common analog feature is a programmable  |slew_rate|Slew_Rate|  on each output pin, allowing the engineer to set low rates on lightly loaded pins that would otherwise  |ring|Electrical_Resonance|  or  |couple|Coupling|  unacceptably, and to set higher rates on heavily loaded pins on high-speed channels that would otherwise run too slowly.    Also common are quartz- |crystal_oscillators|Crystal_Oscillator| , on-chip resistance-capacitance oscillators, and  |phase-locked_loops|Phase-Locked_Loop|  with embedded  |voltage-controlled_oscillators|Voltage-Controlled_Oscillator|  used for clock generation and management and for high-speed serializer-deserializer transmit clocks and receiver clock recovery. Fairly common are differential  |comparators|Comparator|  on input pins designed to be connected to  |differential_signaling|Differential_Signaling|  channels. A few  |mixed_signal|Mixed-Signal_Integrated_Circuit|  FPGAs have integrated peripheral  |analog-to-digital_converters|Analog-To-Digital_Converter|  and  |digital-to-analog_converters|Digital-To-Analog_Converter|  with analog signal conditioning blocks allowing them to operate as a  |system-on-a-chip|System_On_A_Chip|  . Mike Thompson. .   EE Times, 2007-07-02. Such devices blur the line between an FPGA, which carries digital ones and zeros on its internal programmable interconnect fabric, and  |field-programmable_analog_array|Field-Programmable_Analog_Array|  , which carries analog values on its internal programmable interconnect fabric.       The FPGA industry sprouted from  |programmable_read-only_memory|Programmable_Read-Only_Memory|  and  |programmable_logic_devices|Programmable_Logic_Devices|  . PROMs and PLDs both had the option of being programmed in batches in a factory or in the field . However, programmable logic was hard-wired between logic gates.       |Altera|Altera|  was founded in 1983 and delivered the industrys first reprogrammable logic device in 1984 – the EP300 – which featured a quartz window in the package that allowed users to shine an ultra-violet lamp on the die to erase the  |EPROM|Eprom|  cells that held the device configuration.  In December 2015,  |Intel|Intel|  acquired Altera.      |Xilinx|Xilinx|  co-founders  |Ross_Freeman|Ross_Freeman|  and  |Bernard_Vonderschmitt|Bernard_Vonderschmitt|  invented the first commercially viable field-programmable  |gate_array|Gate_Array|  in 1985  – the XC2064.  The XC2064 had programmable gates and programmable interconnects between gates, the beginnings of a new technology and market. Funding Universe. “” Retrieved January 15, 2009. The XC2064 had 64 configurable logic blocks , with two three-input  |lookup_tables|Lookup_Table|  . Clive Maxfield, Programmable Logic DesignLine, . May 15, 2006. Retrieved February 5, 2009. More than 20 years later, Freeman was entered into the  |National_Inventors_Hall_of_Fame|National_Inventors_Hall_Of_Fame|  for his invention. Press Release,        In 1987, the  |Naval_Surface_Warfare_Center|Naval_Surface_Warfare_Center|  funded an experiment proposed by Steve Casselman to develop a computer that would implement 600,000 reprogrammable gates. Casselman was successful and a patent related to the system was issued in 1992.     Altera and Xilinx continued unchallenged and quickly grew from 1985 to the mid-1990s, when competitors sprouted up, eroding significant market share. By 1993, Actel  was serving about 18 percent of the market. By 2013, Altera , Actel and Xilinx together represented approximately 77 percent of the FPGA market.      The 1990s were a period of rapid growth for FPGAs, both in circuit sophistication and the volume of production. In the early 1990s, FPGAs were primarily used in  |telecommunications|Telecommunication|  and  |networking|Computer_Network| . By the end of the decade, FPGAs found their way into consumer, automotive, and industrial applications.      Companies like Microsoft have started to use FPGAs to accelerate high-performance, computationally intensive systems , due to the  |performance_per_watt|Performance_Per_Watt|  advantage FPGAs deliver.  Microsoft began using FPGAs to  |accelerate|Hardware_Acceleration|  Bing in 2014, and in 2018 began deploying FPGAs across other data center workloads for their  |Azure|Microsoft_Azure| |cloud_computing|Cloud_Computing|  platform.          In 2012 the coarse-grained architectural approach was taken a step further by combining the  |logic_blocks|Logic_Block|  and interconnects of traditional FPGAs with embedded  |microprocessors|Microprocessor|  and related peripherals to form a complete  |system_on_a_programmable_chip|System_On_A_Chip|  . This work mirrors the architecture created by Ron Perloff and Hanan Potash of Burroughs Advanced Systems Group in 1982 which combined a reconfigurable  |CPU_architecture|Cpu_Architecture|  on a single chip called the SB24.      Examples of such hybrid technologies can be found in the  |Xilinx|Xilinx|  Zynq-7000 all  |Programmable_SoC|Programmable_System-On-Chip| ,  which includes a 1.0   |GHz|Gigahertz|  dual-core  |ARM_Cortex-A9|Arm_Cortex-A9|  MPCore processor  |embedded|Embedded_System|  within the FPGAs logic fabric  or in the  |Altera|Altera|  Arria V FPGA, which includes an 800  MHz  |dual-core|Dual_Core| |ARM_Cortex-A9|Arm_Cortex-A9|  MPCore. The  |Atmel|Atmel|  FPSLIC is another such device, which uses an  |AVR|Atmel_Avr|  processor in combination with Atmels programmable logic architecture. The  |Microsemi|Microsemi| |SmartFusion|Smartfusion|  devices incorporate an ARM Cortex-M3 hard processor core  and analog  |peripherals|Peripheral|  such as a multi-channel  |analog-to-digital_converters|Analog-To-Digital_Converter|  and  |digital-to-analog_converters|Digital-To-Analog_Converter|  to their  |flash_memory|Flash_Memory| -based FPGA fabric.            An alternate approach to using hard-macro processors is to make use of  |soft_processor|Soft_Microprocessor| |IP_cores|Semiconductor_Intellectual_Property_Core|  that are implemented within the FPGA logic.  |Nios_II|Nios_Ii| ,  |MicroBlaze|Microblaze|  and  |Mico32|Latticemico32|  are examples of popular  |softcore_processors|Soft_Microprocessor| . Many modern FPGAs are programmed at run time , which has led to the idea of  |reconfigurable_computing|Reconfigurable_Computing|  or reconfigurable systems  –  |CPUs|Central_Processing_Unit|  that reconfigure themselves to suit the task at hand. Additionally, new, non-FPGA architectures are beginning to emerge. Software-configurable microprocessors such as the Stretch S5000 adopt a hybrid approach by providing an array of processor cores and FPGA-like programmable cores on the same chip.         1987: 9,000 gates, Xilinx   1992: 600,000, Naval Surface Warfare Department   Early 2000s: Millions   2013: 50 Million, Xilinx        1985: First commercial FPGA : Xilinx XC2064   1987: $14 million   ≈1993: ref name four / ref name instat  /ref ref name instat / ref name grandviewresearch.com  /ref ref name grandviewresearch.com /  ref name designstarts  /ref ref name eweekly  /ref  ref name FPGA-ASIC-comparison  /ref  ref name whitepaper  /ref     ref name whitepaper /  ref  /ref ref  /ref  ref  /ref  ref name paper  /ref  ref  /ref  ref  /ref  ref name Xilinx-Inc-Apr-2006-8-K  /ref  ref  /ref ref  /ref  ref name fpgacnn  /ref  ref name BingFPGA  /ref  ref name ProjCatapult  /ref    ref  /ref                            .