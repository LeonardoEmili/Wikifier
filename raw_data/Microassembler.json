[
    {
        "A microassembler is a ": null
    },
    {
        "computer program": "Computer Program"
    },
    {
        " that helps prepare a ": null
    },
    {
        "microprogram": "Microcode"
    },
    {
        ", called firmware, to control the low level operation of a computer in much the same way an ": null
    },
    {
        "assembler": "Assembly Languageassembler"
    },
    {
        " helps prepare higher level code for a ": null
    },
    {
        "processor": "Central Processing Unit"
    },
    {
        ". The difference is that the microprogram is usually only developed by the processor manufacturer and works intimately with the ": null
    },
    {
        "computer hardware": "Computer Hardware"
    },
    {
        ". On a microprogrammed computer the microprogram implements the operations of the ": null
    },
    {
        "instruction set": "Instruction Set"
    },
    {
        " in which any normal program  is written. The use of a microprogram allows the manufacturer to fix certain mistakes, including working around hardware design errors, without modifying the hardware. Another means of employing microassembler-generated microprograms is in allowing the same hardware to run different ": null
    },
    {
        "instruction sets": "Instruction Set"
    },
    {
        ". After it is assembled, the microprogram is then loaded to a ": null
    },
    {
        "control store": "Control Store"
    },
    {
        " to become part of the logic of a ": null
    },
    {
        "CPUs": "Central Processing Unit"
    },
    {
        " control unit": "Control Unit"
    },
    {
        ".     Some microassemblers are more generalized and are not targeted at a single computer architecture. For example, through the use of macro-assembler-like capabilities, ": null
    },
    {
        "Digital Equipment Corporation": "Digital Equipment Corporation"
    },
    {
        " used their MICRO2 microassembler for a very wide range of computer architectures and implementations.     If a given computer implementation supports a ": null
    },
    {
        "writeable control store": "Control Store"
    },
    {
        ", the microassembler is usually provided to customers as a means of writing customized microcode.     In the process of ": null
    },
    {
        "microcode": "Microcode"
    },
    {
        " assembly it is helpful to verify the microprogram with emulation tools before distribution. Nowadays, microcoding has experienced a revival, since it is possible to correct and optimize the firmware of processing units already manufactured or sold, in order to adapt to specific ": null
    },
    {
        "operating systems": "Operating System"
    },
    {
        " or to fix hardware bugs. However, a commonly usable microassembler for todays CPUs is not available to manipulate the microcode. Unfortunately, knowledge of a processors microcode is usually considered proprietary information so it is difficult to obtain information about how to modify it.                       ": null
    }
]