                  A computer programmer, sometimes called more recently a coder , is a person who creates  |computer_software|Computer_Software| . The term computer programmer can refer to a specialist in one area of  |computers|Computers| , or to a generalist who writes code for many kinds of software.     A programmers most oft-used  |computer_language|Computer_Language|   may be prefixed to the term programmer. Some who work with  |web|World_Wide_Web|  programming languages also prefix their titles with web.     A range of occupations that involve programming also often require a range of other, similar skills, for example: developer,  |web_developer|Web_Developer| ,  |mobile_applications|Mobile_Applications|  developer, embedded  |firmware|Firmware|  developer,  |software_engineer|Software_Engineer| ,  |computer_scientist|Computer_Scientist| ,  |game_programmer|Game_Programmer| ,  |game_developer|Video_Game_Developer|  and  |software_analyst|Software_Analyst| . The use of the term programmer as applied to these positions is sometimes considered an insulting simplification or even derogatory.               British  |count|Count| ess and mathematician  |Ada_Lovelace|Ada_Lovelace|  is often considered to be the first computer programmer, as she was the first to publish part of a program  intended for implementation on  |Charles_Babbages|Charles_Babbage| |analytical_engine|Analytical_Engine| , in October 1842. The algorithm was used to calculate  |Bernoulli_numbers|Bernoulli_Number| .  Because Babbages machine was never completed as a functioning standard in Lovelaces time, she unfortunately never had the opportunity to see the algorithm in action.     The first person to execute a program on a functioning, modern, electronic computer was the renowned  |computer_scientist|Computer_Scientist| |Konrad_Zuse|Konrad_Zuse| , in 1941.          The  |ENIAC|Eniac|  programming team, consisting of  |Kay_McNulty|Kathleen_Antonelli| ,  |Betty_Jennings|Jean_Bartik| ,  |Betty_Snyder|Betty_Holberton| ,  |Marlyn_Wescoff|Marlyn_Meltzer| ,  |Fran_Bilas|Frances_Spence|  and  |Ruth_Lichterman|Ruth_Teitelbaum|  were the first regularly working programmers.     International Programmers Day is celebrated annually on 7 January.  In 2009, the  |government_of_Russia|Government_Of_Russia|  decreed a professional annual holiday known as  |Programmers_Day|Programmers_Day|  to be celebrated on 13 September . It had already been an unofficial holiday before that in many countries.       The word software was used as early as 1953, but did not regularly appear in print until the 1960s.  adapted from Sophisticated: The Magazine  Before this time, computers were programmed either by customers or the few commercial computer manufacturers of the time, such as  |UNIVAC|Univac|  and  |IBM|Ibm| . The first company founded to specifically provide software products and services was the  |Computer_Usage_Company|Computer_Usage_Company| , in 1955.      The software industry expanded in the early 1960s, almost immediately after computers were first sold in mass-produced quantities. Universities, governments and businesses created a demand for software. Many of these programs were written in-house by full-time staff programmers; some were distributed freely between users of a particular machine for no charge. And others were developed on a commercial basis. Other firms, such as  |Computer_Sciences_Corporation|Computer_Sciences_Corporation|  also started to grow. The computer/ |hardware|Computer_Hardware|  manufacturers soon started bundling  |operating_systems|Operating_Systems| ,  |system_software|System_Software|  and programming environments with their machines.     The industry expanded greatly with the rise of the  |personal_computer|Personal_Computer|  in the mid-1970s, which brought computing to the average office worker. In the following years the PC also helped create a constantly-growing market for games, applications and utilities software. CP/M, later replaced by  |DOS|Dos| ,  |Microsofts|Microsoft| |Windows|Microsoft_Windows|  popular operating system of the time.      In the early years of the 21st century, another successful  |business_model|Business_Model|  has arisen for hosted software, called  |software-as-a-service|Software-As-A-Service| , or SaaS; this was at least the third time this model had been attempted. From the point of view of producers of some  |proprietary_software|Proprietary_Software| , SaaS reduces the concerns about  |unauthorized_copying|Software_Copyright| , since it can only be accessed through the Web, and by definition, no  |client_software|Client_Software|  is loaded onto the end users PC. By 2014, the role of  |cloud|Cloud_Computing|  developer had been defined; in this context, one definition of a developer in general was published:        :Some of this section is from the 2006–07 Edition, which is in the public domain as a work of the United States Government .     Computer programmers write, test,  |debug|Debug| , and maintain the detailed instructions, called  |computer_programs|Computer_Programs| , that computers must follow to perform their functions. Programmers also conceive, design, and test logical structures for solving problems by computer. Many technical innovations in programming  — advanced computing technologies and sophisticated new languages and programming tools  — have redefined the role of a programmer and elevated much of the programming work done today. Job titles and descriptions may vary, depending on the organization.     Programmers work in many settings, including corporate  |information_technology|Information_Technology|  departments, big  |software_companies|Software_Companies| , small service firms and government entities of all sizes. Many professional programmers also work for consulting companies at client sites as  |contractors|Independent_Contractor| .  |Licensing|License|  is not typically required to work as a programmer, although  |professional_certifications|Professional_Certification|  are commonly held by programmers. Programming is widely considered a  |profession|Profession|  .     Programmers work varies widely depending on the type of business for which they are writing programs. For example, the instructions involved in updating financial records are very different from those required to duplicate conditions on an aircraft for pilots training in a flight simulator. Simple programs can be written in a few hours, more complex ones may require more than a year of work, while others are never considered complete but rather are continuously improved as long as they stay in use. In most cases, several programmers work together as a team under a senior programmers supervision.      Programmers write programs according to the specifications determined primarily by more senior programmers and by  |systems_analysts|Systems_Analyst| . After the design process is complete, it is the job of the programmer to convert that design into a logical series of instructions that the computer can follow. The programmer codes these instructions in one of many programming languages. Different programming languages are used depending on the purpose of the program.  |COBOL|Cobol| , for example, is commonly used for business applications that typically run on  |mainframe|Mainframe_Computer|  and  |midrange|Minicomputer|  computers, whereas  |Fortran|Fortran|  is used in science and engineering.  |C++|C++|  is widely used for both scientific and business applications.  |Java|Java| ,  |C|C_Sharp| ,  |VB|Visual_Basic|  and  |PHP|Php|  are popular programming languages for Web and business applications. Programmers generally know more than one programming language and, because many languages are similar, they often can learn new languages relatively easily. In practice, programmers often are referred to by the language they know, e.g. as Java programmers, or by the type of function they perform or environment in which they work: for example,  database programmers, mainframe programmers, or  |Web_developers|Web_Developer| .     When making changes to the  |source_code|Source_Code|  that programs are made up of, programmers need to make other programmers aware of the task that the routine is to perform. They do this by inserting comments in the  |source_code|Source_Code|  so that others can understand the program more easily and by  |documenting_their_code|Software_Documentation| . To save work, programmers often use  |libraries|Library|  of basic code that can be modified or customized for a specific application. This approach yields more reliable and consistent programs and increases programmers productivity by eliminating some routine steps.       Programmers test a program by running it and looking for  |bugs|Software_Bug|  . As they are identified, the programmer usually makes the appropriate corrections, then rechecks the program until an acceptably low level and severity of bugs remain. This process is called  |testing|Software_Testing|  and  |debugging|Debugging| . These are important parts of every programmers job. Programmers may continue to fix these problems throughout the life of a program. Updating, repairing, modifying, and expanding existing programs is sometimes called maintenance programming. Programmers may contribute to  |user_guides|User_Guide|  and  |online_help|Online_Help| , or they may work with  |technical_writers|Technical_Writer|  to do such work.       Computer programmers often are grouped into two broad types: application programmers and systems programmers. Application programmers write programs to handle a specific job, such as a program to track inventory within an organization. They also may revise existing packaged software or customize generic applications which are frequently purchased from  |independent_software_vendors|Independent_Software_Vendor| . Systems programmers, in contrast, write programs to maintain and control computer systems software, such as  |operating_systems|Operating_System|  and  |database_management_systems|Database_Management_System| . These workers make changes in the instructions that determine how the network, workstations, and  |CPU|Central_Processing_Unit|  of the system handle the various jobs they have been given and how they communicate with peripheral equipment such as  |printers|Computer_Printer|  and  |disk_drives|Data_Storage_Device| .       A software developer needs to have deep technical expertise with certain aspects of computing. Some positions will require a degree in a relevant field such as computer science, information technology, engineering, programming, or any other IT related post graduate studies.  An ideal software developer is a self-motivated professional carrying a dynamic hands-on experience on key languages of programming such as  |C++|C++| ,  |C|C_Sharp| ,  |PHP|Php| ,  |Java|Java| ,  |C|C| ,  |Javascript|Javascript| , VB, Python, Smalltalk.     According to developer Eric Sink, the differences between system design,  |software_development|Software_Development| , and programming are more apparent. Already in the current market place there can be found a segregation between programmers and developers, in that one who implements is not the same as the one who designs the  |class|Class|  structure or hierarchy. Even more so that developers become  |software_architects|Software_Architect|  or  |systems_architects|Systems_Architect| , those who design the multi-leveled architecture or component interactions of a large software system.        Programmers in software development companies may work directly with experts from various fields to create software  – either programs designed for specific clients or packaged software for general use  – ranging from  |video_games|Video_Game|  to educational software to programs for  |desktop_publishing|Desktop_Publishing|  and financial planning. Programming of packaged software constitutes one of the most rapidly growing segments of the computer services industry. Some companies or organizations – even small ones – have set up their own IT team to ensure the design and development of in-house software to answer to very specific needs from their internal end-users, especially when existing software are not suitable or too expensive. This is for example the case in  |research_laboratories|Research_Laboratories| .     In some organizations, particularly small ones, people commonly known as programmer analysts are responsible for both the systems analysis and the actual programming work. The transition from a mainframe environment to one that is based primarily on  |personal_computers|Personal_Computers|  has blurred the once rigid distinction between the programmer and the user. Increasingly, adept end users are taking over many of the tasks previously performed by programmers. For example, the growing use of packaged software, such as spreadsheet and database management software packages, allows users to write simple programs to access data and perform calculations.     In addition, the rise of the Internet has made  |web_development|Web_Development|  a huge part of the programming field. Currently more software applications are  |web_applications|Web_Application|  that can be used by anyone with a  |web_browser|Web_Browser| . Examples of such applications include the  |Google|Google|  search service, the  |Outlook.come|Outlook.Com| -mail service, and the  |Flickr|Flickr|  photo-sharing service.     Programming editors, also known as  |source_code_editors|Source_Code_Editor| , are text editors that are specifically designed for programmers or developers for writing the source code of an application or a program. Most of these editors include features useful for programmers, which may include color  |syntax_highlighting|Syntax_Highlighting| , auto indentation,  |auto-complete|Auto-Complete| , bracket matching,  |syntax_check|Syntax_Checker| , and allows  |plug-ins|Plug-In| . These features aid the users during coding,  |debugging|Debugging|  and testing.               According to BBC News, 17% of computer science students could not find work in their field 6 months after graduation in 2009 which was the highest rate of the university subjects surveyed while 0% of medical students were unemployed in the same survey.  The UK category system does, however, class such degrees as  |information_technology|Information_Technology|  and  |game_design|Game_Design|  as computer science, industries in which jobs can be extremely difficult to find, somewhat inflating the actual figure.  ATAS classifications        Computer programming,  |offshore_outsourcing|Offshore_Outsourcing| , and  |Foreign_Worker_Visas|Foreign_Worker_Visa|  became a controversial topic after the crash of the  |dot-com_bubble|Dot-Com_Bubble|  left many programmers without work or with lower wages. Programming was even mentioned in the 2004 US Presidential debate on the topic of  |offshore_outsourcing|Offshore_Outsourcing| .      Large companies claim there is a  |skills_shortage|Skills_Shortage|  with regard to programming talent. However, US programmers and unions counter that large companies are exaggerating their case in order to obtain cheaper programmers from developing countries and avoid previously employer paid training using industry specific technologies not covered in most accredited degree programs.  Migration Letters, Volume: 10, No: 2, pp. 211 – 228  & e Other reasons for employers claiming skill shortages is the result of their own cost saving combining of several disparate skill sets previously held by several specialized programmers into fewer generalized  |multifaceted|Mechatronics|  positions that are unlikely to have enough  |qualified_candidates|Purple_Squirrel|  with the desired experience. Purple Squirrels and the Reserve Army of the Unemployed Paul Solman   |PBS|Pbs| August 15, 2012 accessdate 2016-06-10     Enrollment in computer-related degrees in US has dropped recently due to lack of general interests in science and mathematics and also out of an apparent fear that programming will be subject to the same pressures as manufacturing and agriculture careers. Theresa Beaubouef and John Mason, , ACM SIGCSE Bulletin, 2005 This situation has resulted in confusion about whether the US economy is entering a post- |information|Quaternary_Sector_Of_The_Economy|  age and the nature of US  |comparative_advantages|Comparative_Advantage| . Most academic institutions have an  |Institutional_research|Institutional_Research|  office that keep past statistics of degrees conferred which show several dips and rises in Computer Science degrees over the past 30 years. The overall trend shows a slightly overall decline in growth since certain peaks of  |1986|Early_1980S_Recession_In_The_United_States| ,  |1992|Early_1990S_Recession_In_The_United_States| ,  |2002|Dot-Com_Bubble| , and  |2008|Great_Recession|  showing periods of flat growth or even declines.  In addition the U.S. Bureau of Labor Statistics Occupational Outlook 2016-26 is -7% for Computer Programmers because  |Computer_programming|Computer_Programming|  can be done from anywhere in the world, so companies sometimes hire programmers in countries where wages are lower. 