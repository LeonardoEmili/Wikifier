[
    {
        "      Extended Binary Coded Decimal Interchange Code  is an eight-": null
    },
    {
        "bit": "Bit"
    },
    {
        " character encoding": "Character Encoding"
    },
    {
        " used mainly on ": null
    },
    {
        "IBM mainframe": "Ibm Mainframe"
    },
    {
        " and ": null
    },
    {
        "IBM": "Ibm"
    },
    {
        " midrange computer": "Midrange Computer"
    },
    {
        " operating systems. It descended from the code used with ": null
    },
    {
        "punched cards": "Punched Card"
    },
    {
        " and the corresponding ": null
    },
    {
        "six-bit binary-coded decimal": "Six-Bit Binary-Coded Decimal"
    },
    {
        " code used with most of IBMs ": null
    },
    {
        "computer peripherals": "Computer Peripheral"
    },
    {
        " of the late 1950s and early 1960s. It is supported by various non-IBM platforms, such as ": null
    },
    {
        "Fujitsu-Siemens": "Fujitsu-Siemens"
    },
    {
        " BS2000/OSD": "Bs2000"
    },
    {
        ", OS-IV, MSP, and MSP-EX, the ": null
    },
    {
        "SDS Sigma series": "Sds Sigma Series"
    },
    {
        ", ": null
    },
    {
        "Unisys": "Unisys"
    },
    {
        " VS/9": "Vs/9"
    },
    {
        ", ": null
    },
    {
        "Burroughs": "Burroughs Corporation"
    },
    {
        " MCP": "Mcp"
    },
    {
        " and ": null
    },
    {
        "ICL": "International Computers Limited"
    },
    {
        " VME": "Icl Vme"
    },
    {
        ".          EBCDIC was devised in 1963 and 1964 by ": null
    },
    {
        "IBM": "Ibm"
    },
    {
        " and was announced with the release of the ": null
    },
    {
        "IBM System/360": "Ibm System/360"
    },
    {
        " line of mainframe ": null
    },
    {
        "computers": "Computer"
    },
    {
        ". It is an eight-bit character encoding, developed separately from the seven-bit ": null
    },
    {
        "ASCII": "Ascii"
    },
    {
        " encoding scheme. It was created to extend the existing ": null
    },
    {
        "Binary-Coded Decimal": "Binary-Coded Decimalibm And Bcd"
    },
    {
        " Interchange Code, or ": null
    },
    {
        "BCDIC": "Bcdic"
    },
    {
        ", which itself was devised as an efficient means of encoding the two zone and number punches on ": null
    },
    {
        "punched cards": "Punched Cards"
    },
    {
        " into six bits. The distinct encoding of s and S was maintained from ": null
    },
    {
        "punched cards": "Punched Cards"
    },
    {
        " where it was desirable not to have hole punches too close to each other to ensure the integrity of the physical card.     While IBM was a chief proponent of the ASCII standardization committee, the company did not have time to prepare ASCII peripherals to ship with its System/360 computers, so the company settled on EBCDIC. The System/360 became wildly successful, together with clones such as ": null
    },
    {
        "RCA Spectra 70": "Rca Spectra 70"
    },
    {
        ", ": null
    },
    {
        "ICL System 4": "Icl System 4"
    },
    {
        ", and Fujitsu FACOM, thus so did EBCDIC.     All IBM mainframe and ": null
    },
    {
        "midrange": "Midrange Computer"
    },
    {
        "peripherals": "Peripheral"
    },
    {
        " and ": null
    },
    {
        "operating systems": "Operating System"
    },
    {
        " use EBCDIC as their inherent encoding . Software and many hardware peripherals can translate to and from encodings, and modern mainframes  include processor instructions, at the hardware level, to accelerate translation between character sets.     There is an EBCDIC-oriented ": null
    },
    {
        "Unicode Transformation Format": "Unicode Transformation Format"
    },
    {
        " called ": null
    },
    {
        "UTF-EBCDIC": "Utf-Ebcdic"
    },
    {
        " proposed by the Unicode consortium, designed to allow easy updating of EBCDIC software to handle Unicode, but not intended to be used in open interchange environments. Even on systems with extensive EBCDIC support, it has not been popular. For example, z/OS supports Unicode , but z/OS only has limited support for UTF-EBCDIC.     ": null
    },
    {
        "IBM AIX": "Ibm Aix"
    },
    {
        " running on the ": null
    },
    {
        "RS/6000": "Rs/6000"
    },
    {
        " and its descendants including the ": null
    },
    {
        "IBM Power Systems": "Ibm Power Systems"
    },
    {
        ", ": null
    },
    {
        "Linux running on IBM Z": "Linux On Ibm Z"
    },
    {
        ", and operating systems running on the ": null
    },
    {
        "IBM PC": "Ibm Pc"
    },
    {
        " and its descendants use ASCII, as did ": null
    },
    {
        "AIX/370": "Aix/370"
    },
    {
        " and ": null
    },
    {
        "AIX/390": "Aix/390"
    },
    {
        " running on ": null
    },
    {
        "System/370": "System/370"
    },
    {
        " and ": null
    },
    {
        "System/390": "System/390"
    },
    {
        " mainframes.          The fact that all the code points were different was less of a problem for inter-operating with ": null
    },
    {
        "ASCII": "Ascii"
    },
    {
        " than the fact that sorting EBCDIC put lowercase letters before uppercase letters and letters before numbers, exactly the opposite of ASCII.     Programming languages and file formats and network protocols designed for ASCII quickly made use of available punctuation marks that did not exist in EBCDIC, making translation to EBCDIC ambiguous .     The gaps between letters made simple code that worked in ASCII fail on EBCDIC. For example, for  ": null
    }
]